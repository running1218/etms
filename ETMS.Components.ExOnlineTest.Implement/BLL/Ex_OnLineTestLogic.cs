//==================================================================================================
//Version 1.0, auto-generated.
//Generated By xueyb.
//Date: 2012-4-1 16:08:36.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1), a product of ZhouYonghua(Zhou_Yonghua@163.com).
//==================================================================================================

using System;
using System.Data;
using ETMS.Utility;
using ETMS.Utility.Logging;
using ETMS.Components.ExOnlineTest.API.Entity;

using ETMS.Components.Basic.Implement.BLL.Course.Resources;
using ETMS.Components.Basic.API.Entity.Course.Resources;

namespace ETMS.Components.ExOnlineTest.Implement.BLL
{
    /// <summary>
    /// 在线测试表业务逻辑
    /// </summary>
    public partial class Ex_OnLineTestLogic
	{

        public void SaveOnlineTest(Ex_OnLineTest ex_OnlineTest, Res_CourseRes res_CourseRes)
        {
            Save(ex_OnlineTest);

            Res_CourseResLogic courseResLogic = new Res_CourseResLogic();

            res_CourseRes.ResID = ex_OnlineTest.OnLineTestID.ToString();
            courseResLogic.Save(res_CourseRes);

        }

 		/// <summary>
		/// 保存操作
		/// </summary>
		public void Save(Ex_OnLineTest ex_OnLineTest)
		{
            try
            {
			    if(ex_OnLineTest.OnLineTestID.IsEmpty())
                {
                    //设置主键ID（仅类型为GUID有效，Int型则由数据库自增产生）
                    ex_OnLineTest.OnLineTestID = ex_OnLineTest.OnLineTestID.NewID(); ;
                    Add(ex_OnLineTest);
                }
                else
                {
                    Update(ex_OnLineTest);
                }
            }
           catch (System.Data.SqlClient.SqlException ex)
            {
                //枚举数据约束异常并转换为业务异常
                if (ex.Message.IndexOf("Index_U_Ex_OnLineTestCode",StringComparison.InvariantCultureIgnoreCase) != -1)
                {
				    throw new ETMS.AppContext.BusinessException("ExOnlineTest.Ex_OnLineTest.CodeExists");
                }
                else if (ex.Message.IndexOf("Index_U_Ex_OnLineTestName",StringComparison.InvariantCultureIgnoreCase) != -1)
                {
				    throw new ETMS.AppContext.BusinessException("ExOnlineTest.Ex_OnLineTest.NameExists");
                }
                //如果仍未处理，则抛出
                throw ex;
            } 
		} 

        /// <summary>
		/// 删除
		/// </summary>
		protected void doRemove(Guid onLineTestID)
		{
            try
            {
                if (DAL.CheckResourceIsUsed(onLineTestID))
                {
                    throw new ETMS.AppContext.BusinessException("该学习资源已经被培训项目的课程引用，不能删除！");
                }
			     DAL.Remove(onLineTestID);
                 //记录删除日志（根据ID删除）
                 BizLogHelper.Operate(onLineTestID,"删除");
            }
           catch (System.Data.SqlClient.SqlException ex)
            {
                //枚举数据约束异常并转换为业务异常，数据已经使用
                if (ex.Message.IndexOf("FK_",StringComparison.InvariantCultureIgnoreCase) != -1)
                {
				    throw new ETMS.AppContext.BusinessException("ExOnlineTest.Ex_OnLineTest.DataUsed");
                } 
                //如果仍未处理，则抛出
                throw ex;
            }  
		}

        /// <summary>
        /// 根据课程编号获取在线测试的可用总数（状态为“启用”）
        /// </summary>
        /// <param name="courseID">课程编号</param>
        /// <returns></returns>
        public Int32 Get_OnlineTestTotal(Guid courseID)
        {
            return DAL.Get_OnlineTestTotal(courseID);
        }



        /// <summary>
        /// 根据课程编号获取在线测试的总数
        /// </summary>
        /// <param name="courseID">课程编号</param>
        /// <returns></returns>
        public Int32 GetALLOnlineTestTotal(Guid courseID)
        {
            return DAL.GetALLOnlineTestTotal(courseID);
        }


        /// <summary>
        /// 根据培训项目课程编号获取在线测试总数
        /// </summary>
        /// <param name="trainingItemCourseID"培训项目课程编号></param>
        /// <returns></returns>
        public Int32 GetItemCourseOnlineTestTotal(Guid trainingItemCourseID)
        {
            return DAL.GetItemCourseOnlineTestTotal(trainingItemCourseID);
        }


        /// <summary>
        /// 获取某个培训项目课程的在线测试可以考试的次数
        /// </summary>
        /// <param name="trainingItemCourseID"培训项目课程编号></param>
        /// <param name="onLineTestID">在线测试ID</param>
        /// <returns></returns>
        public int GetOnLineTestCanExamNum(Guid trainingItemCourseID,Guid onLineTestID)
        {
            return DAL.GetOnLineTestCanExamNum(trainingItemCourseID,onLineTestID);
        }


        /// <summary>
        /// 获取某个学员的某个培训项目课程的某个在线测试已经考试的次数
        /// </summary>
        /// <param name="userID">学员ID</param>
        /// <param name="trainingItemCourseID"培训项目课程编号></param>
        /// <param name="onLineTestID">在线测试ID</param>
        /// <returns></returns>
        public int GetStudentOnLineTestExamNum(int userID, Guid trainingItemCourseID, Guid onLineTestID)
        {
            return DAL. GetStudentOnLineTestExamNum( userID,  trainingItemCourseID,  onLineTestID);

        }

                /// <summary>
        /// 获取某个学员的某个培训项目课程的某个在线测试已经完成考试的次数
        /// </summary>
        /// <param name="userID">学员ID</param>
        /// <param name="trainingItemCourseID"培训项目课程编号></param>
        /// <param name="onLineTestID">在线测试ID</param>
        /// <returns></returns>
        public int GetStudentOnLineTestCompleteExamNum(int userID, Guid trainingItemCourseID, Guid onLineTestID)
        {
            return DAL.GetStudentOnLineTestCompleteExamNum(userID, trainingItemCourseID, onLineTestID);

        }
        /// <summary>
        /// 查询在线测试的试卷信息
        /// </summary>
        /// <param name="trainingItemCourseID">培训项目课程ID</param>
        /// <param name="TestPaperID">试卷ID</param>
        /// <param name="UserID">用户ID</param>
        /// <returns></returns>
        public DataTable GetOnlineTestExamTestPaper(Guid TrainingItemCourseID, Guid TestPaperID, int UserID)
        {
            return DAL.GetOnlineTestExamTestPaper(TrainingItemCourseID, TestPaperID, UserID);
        }


    }
	
	
}

