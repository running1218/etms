//==================================================================================================
//Version 1.0, auto-generated.
//Generated By xueyb.
//Date: 2012-4-12 1:14:56.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1), a product of ZhouYonghua(Zhou_Yonghua@163.com).
//==================================================================================================

using System;
using ETMS.Utility;
using ETMS.Utility.Logging;
using ETMS.Components.ExOnlineTest.API.Entity.ExOnlineTest;
namespace ETMS.Components.ExOnlineTest.Implement.BLL.ExOnlineTest
{
    /// <summary>
    /// 业务逻辑
    /// </summary>
    public partial class Ex_StudentOnlineTestLogic
    {
        /// <summary>
        /// 保存操作
        /// </summary>
        public void Save(Ex_StudentOnlineTest ex_StudentOnlineTest)
        {
            try
            {
                if (ex_StudentOnlineTest.StudentOnlineTestID.IsEmpty())
                {
                    //设置主键ID（仅类型为GUID有效，Int型则由数据库自增产生）
                    ex_StudentOnlineTest.StudentOnlineTestID = ex_StudentOnlineTest.StudentOnlineTestID.NewID(); ;
                    Add(ex_StudentOnlineTest);
                }
                else
                {
                    Update(ex_StudentOnlineTest);
                }
            }
            catch (System.Data.SqlClient.SqlException ex)
            {
                //枚举数据约束异常并转换为业务异常
                if (ex.Message.IndexOf("Index_U_Ex_StudentOnlineTestCode", StringComparison.InvariantCultureIgnoreCase) != -1)
                {
                    throw new ETMS.AppContext.BusinessException("ExOnlineTest.Ex_StudentOnlineTest.CodeExists");
                }
                else if (ex.Message.IndexOf("Index_U_Ex_StudentOnlineTestName", StringComparison.InvariantCultureIgnoreCase) != -1)
                {
                    throw new ETMS.AppContext.BusinessException("ExOnlineTest.Ex_StudentOnlineTest.NameExists");
                }
                //如果仍未处理，则抛出
                throw ex;
            }
        }

        /// <summary>
        /// 删除
        /// </summary>
        protected void doRemove(Guid studentOnlineTestID)
        {
            try
            {
                DAL.Remove(studentOnlineTestID);
                //记录删除日志（根据ID删除）
                BizLogHelper.Operate(studentOnlineTestID, "删除");
            }
            catch (System.Data.SqlClient.SqlException ex)
            {
                //枚举数据约束异常并转换为业务异常，数据已经使用
                if (ex.Message.IndexOf("FK_", StringComparison.InvariantCultureIgnoreCase) != -1)
                {
                    throw new ETMS.AppContext.BusinessException("ExOnlineTest.Ex_StudentOnlineTest.DataUsed");
                }
                //如果仍未处理，则抛出
                throw ex;
            }
        }

        /// <summary>
        /// 获取分数
        /// </summary>
        /// <param name="OnlineTestID"></param>
        /// <returns></returns>
        public decimal getScore(Guid onlineTestID, Guid trainingItemCourseID)
        {
            Ex_StudentOnlineTest ex_StudentOnlineTest = GetByStudentOnlineTest(onlineTestID, ETMS.AppContext.UserContext.Current.UserID, trainingItemCourseID);

            if (ex_StudentOnlineTest == null)
            {
                return 0;
            }
            else
            {
                return ex_StudentOnlineTest.Score;
            }

        }

        /// <summary>
        /// 获取分数
        /// </summary>
        /// <param name="OnlineTestID"></param>
        /// <returns></returns>
        public string getScore(Guid onlineTestID, Guid trainingItemCourseID, int userID)
        {
            return DAL.maxScore(onlineTestID, userID, trainingItemCourseID);
        }

        /// <summary>
        /// 获得UserExamID
        /// </summary>
        /// <param name="OnlineTestID"></param>
        /// <returns></returns>
        public Guid getUserExamID(Guid onlineTestID, Guid trainingItemCourseID)
        {
            Ex_StudentOnlineTest ex_StudentOnlineTest = GetByStudentOnlineTest(onlineTestID, ETMS.AppContext.UserContext.Current.UserID, trainingItemCourseID);

            if (ex_StudentOnlineTest == null)
            {
                return Guid.Empty;
            }
            else
            {
                return ex_StudentOnlineTest.UserExamID;
            }
        }

        /// <summary>
        /// 获取学生所在项目课程下的在线测试
        /// </summary>
        public Ex_StudentOnlineTest GetByStudentOnlineTest(Guid onlineTestID, int userID, Guid trainingItemCourseID)
        {
            Ex_StudentOnlineTest ex_StudentOnlineTest = DAL.GetByStudentOnlineTest(onlineTestID, userID, trainingItemCourseID);

            return ex_StudentOnlineTest;
        }

        /// <summary>
        /// 是否做完作业
        /// </summary>
        /// <param name="onlineTestID"></param>
        /// <param name="trainingItemCourseID"></param>
        /// <returns></returns>
        public bool isAnswer(Guid onlineTestID, Guid trainingItemCourseID)
        {
            Ex_StudentOnlineTest ex_StudentOnlineTest = GetByStudentOnlineTest(onlineTestID, ETMS.AppContext.UserContext.Current.UserID, trainingItemCourseID);

            if (ex_StudentOnlineTest == null)
            {
                return false;
            }
            else
            {
                if (ex_StudentOnlineTest.EndTime.Year != 1)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
        }
        /// <summary>
        /// 根据标识获取对象（是否提交答卷）
        /// </summary>
        /// <param name="onlineTestID"></param>
        /// <param name="userID"></param>
        /// <param name="trainingItemCourseID"></param>
        /// <returns></returns>
        public Ex_StudentOnlineTest GetByStudentOnlineTestSubmit(Guid onlineTestID, int userID, Guid trainingItemCourseID)
        {
            return DAL.GetByStudentOnlineTestSubmit(onlineTestID, userID, trainingItemCourseID);
            
        }

    }


}

