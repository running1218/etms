<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="ETMS.Components.Exam.Implement.DAL" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >
  <resultMaps>
    <resultMap id="TestPaperRule.QuestionStat"  class="ETMS.Components.Exam.API.Entity.Test.TestPaperRule,ETMS.Components.Exam.API" >
      <result property="TestPaperID"     column="TestPaperID"/>
      <result property="QuestionBankID"  column="QuestionBankID"/>
      <result property="QuestionType"    column="QuestionType"/>
      <result property="LowSelectQty"      column="LowSelectQty"/>
      <result property="MediumSelectQty"   column="MediumSelectQty"/>
      <result property="HighSelectQty"     column="HighSelectQty"/>
      <result property="QuestionScore"   column="QuestionScore"/>
      <result property="CreatedUserID"   column="CreatedUserID"/>
      <result property="CreatedDate"     column="CreatedDate"/>
    </resultMap>
    <resultMap id="TestPaperRule.QuestionReport"  class="ETMS.Components.Exam.API.Entity.Test.TestPaperRule,ETMS.Components.Exam.API" >
      <result property="QuestionType"    column="QuestionType"/>
      <result property="LowTotalQty"       column="LowTotalQty"/>
      <result property="MediumTotalQty"    column="MediumTotalQty"/>
      <result property="HighTotalQty"      column="HighTotalQty"/>
    </resultMap>
    <resultMap id="TestPaperRule.QuestionFromRule"  class="ETMS.Components.Exam.API.Entity.ItemBank.Question,ETMS.Components.Exam.API" >
      <result property="QuestionID"      column="QuestionID"/>
      <result property="QuestionType"    column="QuestionType"/>
    </resultMap>
    <resultMap id="TestPaperRule.QuestionRemain"  class="ETMS.Components.Exam.API.Entity.Test.QuestionStat,ETMS.Components.Exam.API" >
      <result property="QuestionType"    column="QuestionType"/>
      <result property="RemainQty"       column="RemainQty"/>
    </resultMap>
    <resultMap id="TestPaperRule.QuestionTypeTotal"  class="ETMS.Components.Exam.API.Entity.Test.QuestionStat,ETMS.Components.Exam.API" >
      <result property="QuestionType"    column="QuestionType"/>
      <result property="TotalQty"       column="TotalQty"/>
      <result property="Score"       column="Score"/>
    </resultMap>
    <resultMap id="TestPaperRule.ResultMap" class="ETMS.Components.Exam.API.Entity.IDName,ETMS.Components.Exam.API">
      <result property="ID"       column="QuestionID"/>
      <result property="Name"     column="Title"/>
    </resultMap>
    <resultMap id="TestPaperRule.QuestionList" class="ETMS.Components.Exam.API.Entity.ItemBank.Question,ETMS.Components.Exam.API" >
      <result property="QuestionID"      column="QuestionID"/>
      <result property="QuestionType"    column="QuestionType"/>
      <result property="QuestionTitle"      column="QuestionTitle"/>
      <result property="QuestionBankID"    column="QuestionBankID"/>
      <result property="ObjectID"      column="ObjectID"/>
      <result property="Difficulty"    column="Difficulty"/>
      <result property="Subject"      column="Subject"/>
      <result property="UpdatedDate"    column="UpdatedDate"/>
    </resultMap>
  </resultMaps>
  <parameterMaps>
    <parameterMap id="CreateTestPaper" class ="Hashtable">
      <parameter property="CreaterID" column="CreaterID" />
      <parameter property="PaperID" column="PaperID"/>
      <parameter property="UserID"  column="UserID"/>
      <parameter property="BuildType" column="BuildType" />
      <parameter property="ExamID" column="ExamID" direction="Output" />
    </parameterMap>
    <parameterMap id="InputPaperID" class ="Hashtable">
      <parameter property="PaperID" column="PaperID"/>
    </parameterMap>
    <parameterMap id="InputPaperID2" class ="Hashtable">
      <parameter property="PaperID" column="PaperID"/>
      <parameter property="QuestionType" column="QuestionType"/>
    </parameterMap>
    <parameterMap id="InputRemain" class ="Hashtable">
      <parameter property="PaperID" column="PaperID"/>
      <parameter property="BankID" column="BankID"/>
      <parameter property="QType" column="QType"/>
      <parameter property="Diffi" column="Diffi"/>
      <parameter property="Remain" column="Remain" direction="Output" />
    </parameterMap>
    <parameterMap id="AdvancedInfo" class ="Hashtable">
      <parameter property="PaperID" column="PaperID"/>
      <parameter property="BankID" column="BankID"/>
      <parameter property="QType" column="QType"/>
      <parameter property="Diffi" column="Diffi"/>
      <parameter property="Title" column="Title"/>
      <parameter property="PageSize" column="PageSize" dbType="int"/>
      <parameter property="CurrentPage" column="CurrentPage" dbType="int"/>
      <parameter property="ItemCount" column="ItemCount" dbType="int" type="int" direction="Output"/>
    </parameterMap>
    <parameterMap id="InputPaperRule" class ="Hashtable">
      <parameter property="PaperID" column="PaperID"/>
      <parameter property="BankID" column="BankID"/>
      <parameter property="QType" column="QType"/>
      <parameter property="LowSelect" column="LowSelect"/>
      <parameter property="MediumSelect" column="MediumSelect"/>
      <parameter property="HighSelect" column="HighSelect"/>
      <parameter property="UserID" column="UserID"/>
    </parameterMap>
  </parameterMaps>
  <statements>
<!--
Select 
QuestionType,Difficulty,COUNT(*) TotalQty from TK_Question 
where IsDelete=0 and QuestionBankID=#value# 
group by QuestionType,Difficulty order by QuestionType
-->   
    <select id="TestPaperRule.GetQuestionTypeReport" resultMap="TestPaperRule.QuestionReport">
      <![CDATA[
Select 
QuestionType,
sum(case when Difficulty=1 then 1 else 0 end) LowTotalQty,
sum(case when Difficulty=2 then 1 else 0 end) MediumTotalQty,
sum(case when Difficulty=3 then 1 else 0 end) HighTotalQty
 from TK_Question 
where IsDelete=0 and QuestionBankID=#value# and AuditStatus=99 
group by QuestionType order by QuestionType 
      ]]>
    </select>
    <procedure id="TestPaperRule.SaveTestPaperRule" parameterMap="InputPaperRule">
      pr_Exam_SaveTestPaperRule
    </procedure> 
    <select id="TestPaperRule.GetQuestionStat" resultMap="TestPaperRule.QuestionStat">
      <![CDATA[
      Select a.*  from 
KS_TestPaperRule a 
Where TestPaperID=#value#
      ]]>
    </select>
    <statement id="TestPaperRule.GetQuestionTotal" resultClass="int">
      <![CDATA[
      Select sum(LowSelectQty+MediumSelectQty+HighSelectQty) 
from KS_TestPaperRule Where TestPaperID=#value#
      ]]>
    </statement>
    <statement id="TestPaperRule.GetPaperQuestionTotal" resultClass="int">
      <![CDATA[
      Select COUNT(*) from KS_TestToQuestion Where TestPaperID=#value#
      ]]>
    </statement>
    <statement id="TestPaperRule.GetRemainQuestionTotal" resultMap="TestPaperRule.QuestionRemain">
      <![CDATA[
Select 
a.QuestionType,
Sum(a.LowSelectQty+a.MediumSelectQty+a.HighSelectQty)-
(Select COUNT(*) from KS_TestToQuestion where TestPaperID=#value#
and QuestionType=a.QuestionType) RemainQty
from 
KS_TestPaperRule a where a.TestPaperID=#value#
group by a.QuestionType
      ]]>
    </statement>
    <statement id="TestPaperRule.UpdateQuestionTypeScore">
      <![CDATA[
      Update KS_TestPaperRule Set QuestionScore=#Score# Where QuestionType=#QuestionType# and TestPaperID=#TestPaperID#
      ]]>
    </statement>
    <select id="TestPaperRule.GetQuestionFromRule" resultMap="TestPaperRule.QuestionFromRule">
      <![CDATA[
declare @bank uniqueidentifier
declare @type int
declare @low int
declare @medium int
declare @high int

--存放被抓取得试题
declare @t table(qid uniqueidentifier,qtype int)

--指定试卷ID的策略(得到题库,题型,难度和抓取数)
declare cur_e scroll cursor for 
Select 
QuestionBankID,
QuestionType,
LowSelectQty,
MediumSelectQty,
HighSelectQty
From KS_TestPaperRule 
Where TestPaperID=#value#

--按策略抓题
open cur_e
fetch first from cur_e into @bank,@type,@low,@medium,@high
while(@@fetch_status=0)
begin

--select @bank 'bank',@type 'type',@low  'low',@medium  'medium',@high  'high'
--抓取容易题
Insert Into @t(qid,qtype)
Select Top (@low) QuestionID,QuestionType from TK_Question where 
QuestionBankID=@bank and
QuestionType=@type and 
Difficulty=1 and AuditStatus=99 
Order By newid()

--抓取中等题
Insert Into @t(qid,qtype)
Select Top (@medium) QuestionID,QuestionType from TK_Question where 
QuestionBankID=@bank and
QuestionType=@type and 
Difficulty=2 and 
AuditStatus=99 Order By newid()

--抓取难题
Insert Into @t(qid,qtype)
Select Top (@high) QuestionID,QuestionType from TK_Question where 
QuestionBankID=@bank and
QuestionType=@type and 
Difficulty=3 and 
AuditStatus=99 Order By newid()

fetch next from cur_e into @bank,@type,@low,@medium,@high
end
close cur_e
deallocate cur_e
Select qid as QuestionID,qtype as QuestionType from @t order by qtype 
      ]]>
    </select>
    <procedure id="TestPaperRule.CreateStudentTestPaper" resultClass="guid" parameterMap="CreateTestPaper">
      pr_Exam_MainProcessExam
    </procedure>
    <procedure id="TestPaperRule.CreateStudentTestPaper1" resultClass="guid" parameterMap="CreateTestPaper">
      pr_Exam_MainProcessExam1
    </procedure>
    <procedure id="TestPaperRule.GetQuestionTypeTotal" resultMap="TestPaperRule.QuestionTypeTotal" parameterMap="InputPaperID">
      pr_Exam_GetQuestionTypeTotal
    </procedure>
    <procedure id="TestPaperRule.ReturnAdvancedExam" resultMap="TestPaperRule.ResultMap" parameterMap="InputPaperID2">
      pr_Exam_ReturnAdvancedExam
    </procedure>


    <procedure id="TestPaperRule.GetRemainQuestions" resultClass="int" parameterMap="InputRemain">
      pr_Exam_GetRemainQuestions
    </procedure>
    <procedure id="TestPaperRule.AdvancedQuestionList" resultMap="TestPaperRule.QuestionList" parameterMap="AdvancedInfo">
      pr_Exam_AdvancedQuestionList
    </procedure>
    <statement id="TestPaperRule.IsQuestionExist" resultClass="int">
      select COUNT(*) from KS_TestToQuestion where TestPaperID=#TestPaperID# and QuestionID=#QuestionID#
    </statement>
  </statements>
</sqlMap>