<?xml version="1.0" encoding="UTF-8" ?>
<sqlMap namespace="ETMS.Components.Exam.Implement.DAL" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >
  <resultMaps>
    <resultMap id="ItemBank.Question.ResultMap"  class="ETMS.Components.Exam.API.Entity.ItemBank.Question,ETMS.Components.Exam.API" >
      <result property="QuestionID"         column="QuestionID"/>
      <result property="QuestionType"     column="QuestionType"/>
      <result property="QuestionTitle"      column="QuestionTitle"/>
      <result property="ParentQuestionID"   column="ParentQuestionID"/>
      <result property="ObjectID"           column="ObjectID"/>
      <result property="QuestionBankID"     column="QuestionBankID"/>
      <result property="Subject"            column="Subject"/>
      <result property="KnowledgePoints"    column="KnowledgePoints"/>
      <result property="Difficulty"         column="Difficulty"/>
      <result property="Answers"            column="Answers"/>
      <result property="RandomFlag"         column="RandomFlag"/>
      <result property="SubItemIndex"       column="SubItemIndex"/>
      <result property="SourceQuestionID"   column="SourceQuestionID"/>
      <result property="CreatedUserID"      column="CreatedUserID"/>
      <result property="CreatedDate"        column="CreatedDate"/>
      <result property="UpdatedDate"        column="UpdatedDate"/>
    </resultMap>
  </resultMaps>
  <statements>
    <insert id="ItemBank.Question.AddQuestion">
      INSERT INTO [TK_Question]
      ([QuestionID],[QuestionType],[QuestionTitle],[ParentQuestionID],[ObjectID],[QuestionBankID],[Subject],[KnowledgePoints]
      ,[Difficulty],[Answers],[RandomFlag],[SubItemIndex],[SourceQuestionID],[IsDelete],[CreatedUserID],[CreatedDate],[QuestionSize],[AuditStatus],[ShareStatus])
      VALUES
      (#QuestionID#,#QuestionType#,#QuestionTitle#,#ParentQuestionID#,#ObjectID#,#QuestionBankID#,#Subject#,#KnowledgePoints#
      ,#Difficulty#,#Answers#,#RandomFlag#,#SubItemIndex#,#SourceQuestionID#,0,#CreatedUserID#,GETDATE(),#QuestionSize#,#AuditStatus#,#ShareStatus#)
    </insert>
    <update id="ItemBank.Question.Update">
      UPDATE [TK_Question]
      SET [QuestionTitle]=#QuestionTitle#,[ObjectID]=#ObjectID#,[QuestionBankID]=#QuestionBankID#,[Subject]=#Subject#
      ,[KnowledgePoints]=#KnowledgePoints#,[Difficulty]=#Difficulty#,[Answers]=#Answers#,[RandomFlag]=#RandomFlag#,
      [SubItemIndex]=#SubItemIndex#,[UpdatedUserID]=#UpdatedUserID#,[UpdatedDate]=GETDATE(),[AuditStatus]=#AuditStatus#
      WHERE [QuestionID]=#QuestionID#
    </update>
    <delete id="ItemBank.Question.Delete">
      <!--UPDATE [TK_Question]
      SET [IsDelete]=1,[UpdatedUserID]=#UpdatedUserID#,[UpdatedDate]=GETDATE()
      WHERE [QuestionID]=#QuestionID#-->
	  Delete [TK_Question] WHERE [QuestionID]=#QuestionID#
	</delete>
    <delete id="ItemBank.Question.DeleteBatch" parameterClass="list">
      UPDATE [TK_Question]
      SET [IsDelete]=1,[UpdatedDate]=GETDATE()
      <dynamic prepend="where" >
        <iterate prepend="AND" property="QuestionIDs" open="(" close=")" conjunction="OR">
          [QuestionID]=#QuestionIDs[]#
        </iterate>
      </dynamic>
    </delete>
    <select id="ItemBank.Question.GetByID" resultMap="ItemBank.Question.ResultMap">
      SELECT [QuestionID],[QuestionType],[QuestionTitle],[ParentQuestionID],[ObjectID],[QuestionBankID],[Subject],[KnowledgePoints]
      ,[Difficulty],[Answers],[RandomFlag],[SubItemIndex],[SourceQuestionID],[CreatedUserID],[CreatedDate],[UpdatedDate]
      FROM [TK_Question]
      WHERE [QuestionID]=#value#
    </select>
    <update id="ItemBank.Question.UpdateAnswers">
      UPDATE [TK_Question]
      SET [Answers]=#Answers#,[UpdatedUserID]=#UpdatedUserID#,[UpdatedDate]=GETDATE()
      WHERE [QuestionID]=#QuestionID#
    </update>
    <select id="ItemBank.Question.GetQuestionAnswers">
      SELECT [Answers] FROM [TK_Question] WHERE [QuestionID]=#value#
    </select>
    <update id="ItemBank.Question.DeleteClassID">
      Update TK_Question Set IsDelete=1 Where QuestionBankID=#value#
    </update>
    <update id="ItemBank.Question.UpdateClassID">
      Update TK_Question Set QuestionBankID=#NewID# Where QuestionBankID=#OldID#
    </update>

    <update id="ItemBank.Question.SetShareState">
      UPDATE TK_Question SET ShareStatus=#ShareStatus#,UpdatedUserID=#UpdatedUserID#,UpdatedDate=GETDATE()
      WHERE QuestionID=#QuestionID#
    </update>
    <update id="ItemBank.Question.SetAuditState">
      UPDATE TK_Question
      SET AuditStatus=#AuditStatus#,UpdatedUserID=#UpdatedUserID#,UpdatedDate=GETDATE()
      WHERE QuestionID=#QuestionID#
    </update>
  </statements>
</sqlMap>
