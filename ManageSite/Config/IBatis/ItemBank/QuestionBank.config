<?xml version="1.0" encoding="UTF-8" ?>
<sqlMap namespace="ETMS.Components.Exam.Implement.DAL" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >
  <resultMaps>
    <resultMap id="ItemBank.QuestionBank.ResultMap"  class="ETMS.Components.Exam.API.Entity.ItemBank.QuestionBank,ETMS.Components.Exam.API" >
      <result property="QuestionBankID"         column="QuestionBankID"/>
      <result property="QuestionBankName"       column="QuestionBankName"/>
      <result property="ParentQuestionBankID"   column="ParentQuestionBankID"/>
      <result property="Depth"                  column="Depth"/>
      <result property="Path"                   column="Path"/>
      <result property="PathName"               column="PathName"/>
      <result property="ChildrenMaxIdentity"    column="ChildrenMaxIdentity"/>
      <result property="DisplayOrder"           column="DisplayOrder"/>
      <result property="OwnerType"              column="OwnerType"/>
      <result property="OwnerID"                column="OwnerID"/>
      <result property="CreatedUserID"          column="CreatedUserID"/>
      <result property="CreatedDate"            column="CreatedDate"/>
    </resultMap>
  </resultMaps>
  <statements>
    <insert id="ItemBank.QuestionBank.Add">
      <!-- 1、父应用CHILDREN_COUNT计时器加1，并提前父应用Path -->
      <![CDATA[
      DECLARE @CHILDREN_COUNT VARCHAR(10);
      DECLARE @ALL_Path VARCHAR(100);
      DECLARE @ALL_PathName VARCHAR(4000);
      DECLARE @Level smallint;
      UPDATE TK_QuestionBank SET 
         [ChildrenMaxIdentity]=[ChildrenMaxIdentity]+1
        ,@CHILDREN_COUNT=CAST(([ChildrenMaxIdentity]+1) AS VARCHAR(10))
        ,@ALL_Path=IsNull([Path],'')
        ,@ALL_PathName=IsNull(PathName,'')
        ,@Level=Depth + 1
      WHERE [QuestionBankID]=#ParentQuestionBankID#;      
      ]]>
      <!-- 2、计算当前应用路径信息(4位宽度) -->
      <![CDATA[
     SELECT @ALL_Path=@ALL_Path+'/'+ REPLICATE('0',4-LEN(@CHILDREN_COUNT))+@CHILDREN_COUNT;
      ]]>
      <!-- 3、向表中添加数据 -->
      <![CDATA[
      IF(#DisplayOrder#=0)
      BEGIN
		    INSERT INTO [TK_QuestionBank]
		    ([QuestionBankID]
		    ,[QuestionBankName]
		    ,[ParentQuestionBankID]
		    ,[Depth]
		    ,[Path]
		    ,[PathName]
		    ,[ChildrenMaxIdentity]
		    ,[DisplayOrder]
		    ,[OwnerType]
		    ,[OwnerID]
		    ,[IsDelete]
		    ,[CreatedUserID]
		    ,[CreatedDate])
		    VALUES
		    (#QuestionBankID#,#QuestionBankName#,#ParentQuestionBankID#,@Level,@ALL_Path,@ALL_PathName+'/$QuestionBankName$',
		    0,@CHILDREN_COUNT,#OwnerType#,#OwnerID#,0,#CreatedUserID#,GETDATE())
      END
      ELSE
      BEGIN
		    INSERT INTO [TK_QuestionBank]
		      ([QuestionBankID]
		      ,[QuestionBankName]
		      ,[ParentQuestionBankID]
		      ,[Depth]
		      ,[Path]
		      ,[PathName]
		      ,[ChildrenMaxIdentity]
		      ,[DisplayOrder]
		      ,[OwnerType]
		      ,[OwnerID]
		      ,[IsDelete]
		      ,[CreatedUserID]
		      ,[CreatedDate])
		      VALUES
		      (#QuestionBankID#,#QuestionBankName#,#ParentQuestionBankID#,#Depth#,@ALL_Path,@ALL_PathName+'/$QuestionBankName$',
		      0,#DisplayOrder#,#OwnerType#,#OwnerID#,0,#CreatedUserID#,GETDATE())
      END
      ]]>
      <!-- 4、建立题库与课程关系 -->
      <![CDATA[
      INSERT INTO [dbo].[TK_QuestionBankCourseMap]
           ([MapID]
           ,[CourseID]
           ,[QuestionBankID]
           ,[CreatedUserID]
           ,[CreatedDate])
     VALUES
           (newid()
           ,#CourseID# 
           ,#QuestionBankID#
           ,#CreatedUserID#
           ,GETDATE()
           ) 
      ]]>
    </insert>
    <update id="ItemBank.QuestionBank.Update">
      UPDATE [TK_QuestionBank]
      SET [QuestionBankName] = #QuestionBankName#
      ,[Depth] = #Depth#
      ,[PathName] = #PathName#
      ,[DisplayOrder] = #DisplayOrder#
      ,[UpdatedUserID] = #UpdatedUserID#
      ,[UpdatedDate] = GETDATE()
      WHERE [QuestionBankID]=#QuestionBankID#
    </update>
    <delete id="ItemBank.QuestionBank.Delete">
      UPDATE [TK_QuestionBank]
      SET [IsDelete] = 1
      ,[UpdatedUserID] = #UpdatedUserID#
      ,[UpdatedDate] = GETDATE()
      WHERE [QuestionBankID]=#QuestionBankID#
    </delete>
    <select id="ItemBank.QuestionBank.GetByID" resultMap="ItemBank.QuestionBank.ResultMap">
      SELECT [QuestionBankID]
      ,[QuestionBankName]
      ,[ParentQuestionBankID]
      ,[Depth]
      ,[Path]
      ,[PathName]
      ,[ChildrenMaxIdentity]
      ,[DisplayOrder]
      ,[OwnerType]
      ,[OwnerID]
      ,[IsDelete]
      ,[CreatedUserID]
      ,[CreatedDate]
      FROM [TK_QuestionBank]
      WHERE [QuestionBankID]=#value#
    </select>

    <update id="ItemBank.QuestionBank.UpdateNodeIndex">
      UPDATE dbo.TK_QuestionBank
      SET DisplayOrder = DisplayOrder + 1,
      UpdatedUserID=#UpdatedUserID#,
      UpdatedDate = GETDATE()
      WHERE ParentQuestionBankID = #ParentID# AND DisplayOrder>=#MixOrder#
    </update>
    <update id="ItemBank.QuestionBank.SwitchQuestionIndex">
      UPDATE TK_QuestionBank SET DisplayOrder=DisplayOrder+1,UpdatedUserID=#UpdatedUserID#,UpdatedDate = GETDATE() WHERE QuestionBankID=#DownNodeID#
      UPDATE TK_QuestionBank SET DisplayOrder=DisplayOrder-1,UpdatedUserID=#UpdatedUserID#,UpdatedDate = GETDATE() WHERE QuestionBankID=#UpNodeID#
    </update>
    <delete id="ItemBank.QuestionBank.DeleteByID">
      DELETE FROM TK_QuestionBank WHERE QuestionBankID=#value#
    </delete>
    <select id="ItemBank.QuestionBank.GetAllChildrenByParentID" resultMap="ItemBank.QuestionBank.ResultMap">
      SELECT [QuestionBankID]
      ,[QuestionBankName]
      ,[ParentQuestionBankID]
      ,[Depth]
      ,[Path]
      ,[PathName]
      ,[ChildrenMaxIdentity]
      ,[DisplayOrder]
      ,[OwnerType]
      ,[OwnerID]
      ,[CreatedUserID]
      ,[CreatedDate]
      FROM [TK_QuestionBank]
      WHERE [ParentQuestionBankID]=#value# and IsDelete=0
    </select>
    <select id="ItemBank.QuestionBank.GetAllChildrenByParentPath" resultMap="ItemBank.QuestionBank.ResultMap">
      SELECT [QuestionBankID]
      ,[QuestionBankName]
      ,[ParentQuestionBankID]
      ,[Depth]
      ,[Path]
      ,[PathName]
      ,[ChildrenMaxIdentity]
      ,[DisplayOrder]
      ,[OwnerType]
      ,[OwnerID]
      ,[CreatedUserID]
      ,[CreatedDate]
      FROM [TK_QuestionBank]
      WHERE [Path] like '$value$/____'and IsDelete=0
    </select>
    <select id="ItemBank.QuestionBank.GetAllQuestionLibraryByCourseID" resultMap="ItemBank.QuestionBank.ResultMap">
      SELECT a.[QuestionBankID]
      ,[QuestionBankName]
      ,[ParentQuestionBankID]
      ,[Depth]
      ,[Path]
      ,[PathName]
      ,[ChildrenMaxIdentity]
      ,[DisplayOrder]
      ,[OwnerType]
      ,[OwnerID]
      ,[IsDelete]
      ,a.[CreatedUserID]
      ,a.[CreatedDate]
      FROM [TK_QuestionBank] a
      inner join TK_QuestionBankCourseMap b on a.[QuestionBankID]=b.[QuestionBankID]
      WHERE b.[CourseID]=#value#
    </select>
    <!--  -->
    <procedure id="ItemBank.QuestionBank.GetAllQuestion" resultMap="ItemBank.Question.ResultMap" parameterMap="Common.PagingParm">
      pr_Exam_sp_super_page
    </procedure>
    <procedure id="ItemBank.QuestionBank.GetAllQuestionNew" resultMap="ItemBank.Question.ResultMap" parameterMap="Common.PagingParm">
      pr_Exam_sp_super_pageNew
    </procedure>
  </statements>

</sqlMap>