<?xml version="1.0" encoding="UTF-8" ?>
<sqlMap namespace="ETMS.Components.Exam.Implement.DAL" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >
  <resultMaps>
    <!--UserExam信息映射-->
    <resultMap id="Test.UserExam.ResultMap" class="ETMS.Components.Exam.API.Entity.Test.UserExam,ETMS.Components.Exam.API">
      <result property="UserExamID" column="UserExamID" />
      <result property="UserID" column="UserID" />
      <result property="TestPaperID" column="TestPaperID" />
      <result property="TestPaperName" column="TestPaperName" />
      <result property="TestPaperScore" column="TestPaperScore" />
      <result property="PassingScore" column="PassingScore" />
      <result property="TimeLimit" column="TimeLimit" />
      <result property="ExamScore" column="ExamScore" />
      <result property="AdjustedScore" column="AdjustedScore" />
      <result property="BeginExamTime" column="BeginExamTime" />
      <result property="LastBeginExamTime" column="LastBeginExamTime" />
      <result property="LastSaveTime" column="LastSaveTime" />
      <result property="EndExamTime" column="EndExamTime" />
      <result property="CurrQuestionNo" column="CurrQuestionNo" />
      <result property="ElapsedTime" column="ElapsedTime" />
      <result property="TestPapertlFileName" column="TestPapertlFileName" />
      <result property="Status" column="Status" />
      <result property="AdjustedUserID" column="AdjustedUserID" />
      <result property="AdjustedDate" column="AdjustedDate" />
    </resultMap>
    <resultMap id="Test.StudentTestView.ResultMap" class="ETMS.Components.Exam.API.Entity.Test.StudentTestView,ETMS.Components.Exam.API">
      <result property="UserExamID" column="UserExamID" />
      <result property="UserID" column="UserID" />
      <result property="UserName" column="UserName" />
      <result property="FirstName" column="FirstName" />
      <result property="LastName" column="LastName" />
      <result property="Photo" column="Photo" />
      <result property="TestPaperID" column="TestPaperID" />
      <result property="TestPaperName" column="TestPaperName" />
      <result property="TestPaperType" column="TestPaperType" />
      <result property="StartExamTime" column="StartExamTime" />
      <result property="EndExamTime" column="EndExamTime" />
      <result property="TestStatus" column="TestStatus" />
      <result property="UserScore" column="UserScore" />
      <result property="PaperScore" column="PaperScore" />
    </resultMap>
    <resultMap id="Test.UserExamStat.ResultMap" class="ETMS.Components.Exam.API.Entity.Test.UserExamStat,ETMS.Components.Exam.API">
      <result property="MaxUserScore" column="MaxUserScore" />
      <result property="MinUserScore" column="MinUserScore" />
      <result property="ExamTimes" column="ExamTimes" />
    </resultMap>
  </resultMaps>
  <parameterMaps>
  </parameterMaps>
  <statements>
    <!--得到某一次考试的状态 resultClass="data"-->
    <statement id="Test.UserExam.GetTestStatusType" resultClass="data">
      SELECT [Status]
      FROM [KS_UserExam]
      WHERE UserExamID=#value#
    </statement>
    <!--更新一次考试的状态-->
    <statement id="Test.UserExam.UpdateTestStatusType">
      UPDATE KS_UserExam
      SET
      [Status]=#Status#
      WHERE UserExamID=#UserExamID#
    </statement>
    <!---更新提交试卷的信息-->
    <statement id="Test.UserExam.UpdateUserScoreOver">
      DECLARE @score DECIMAL(7,2);
      SELECT @score=SUM(UserScore) FROM dbo.KS_UserExamResult WHERE UserExamID=#UserExamID#;
      UPDATE [KS_UserExam]
      SET [EndExamTime]=GetDate(),[Status]=#Status#,
      ExamScore=@score
      WHERE dbo.KS_UserExam.UserExamID=#UserExamID#;
      UPDATE dbo.Ex_StudentOnlineTest SET Score=@score WHERE UserExamID=#UserExamID#
    </statement>
    <!--得到考生，某一次试卷定义的所有考试-->
    <statement id="Test.UserExam.FindAllUserExamsFor" resultMap="Test.UserExam.ResultMap">
      SELECT [UserExamID],[UserID],[TestPaperID]
      ,[TestPaperName],[TestPaperScore],[PassingScore],[TimeLimit],[ExamScore]
      ,[AdjustedScore],[BeginExamTime],[LastBeginExamTime],[LastSaveTime],[EndExamTime]
      ,[CurrQuestionNo],[ElapsedTime],[TestPapertlFileName],[Status]
      ,[StudentCourceID],[AdjustedUserID],[AdjustedDate]
      FROM [KS_UserExam]
      WHERE [UserID]=#StudentID# AND [TestPaperID]=#TestPaperID# AND IsPreview=0
    </statement>
    <!--得到考生，某一次试卷定义的考试次数-->
    <statement id="Test.UserExam.FindAllUserExamsCountFor">
      SELECT Count(*)
      FROM [KS_UserExam]
      WHERE [UserID]=#StudentID# AND [TestPaperID]=#TestPaperID# AND IsPreview=0
    </statement>
    <!--得到某一次考试-->
    <statement id="Test.UserExam.GetUserExamByUserExamID"  resultMap="Test.UserExam.ResultMap">
      SELECT [UserExamID],[UserID],[TestPaperID]
      ,[TestPaperName],[TestPaperScore],[PassingScore],[TimeLimit],[ExamScore]
      ,[AdjustedScore],[BeginExamTime],[LastBeginExamTime],[LastSaveTime],[EndExamTime]
      ,[CurrQuestionNo],[ElapsedTime],[TestPapertlFileName],[Status]
      ,[AdjustedUserID],[AdjustedDate]
      FROM [KS_UserExam]
      WHERE [UserExamID]=#vlaue#
    </statement>
    <!---更新考生开始考试时间-->
    <statement id="Test.UserExam.UpdateStartExamDateTime">
      <![CDATA[
      --如果未开始，设置首次登录时间
      UPDATE [KS_UserExam]
      SET [BeginExamTime]=GetDate(),[LastBeginExamTime]=GetDate()
      WHERE [UserExamID]=#vlaue# AND [Status]=0

      IF(@@ROWCOUNT=0)
      BEGIN
      UPDATE [KS_UserExam]
      SET [LastBeginExamTime]=GetDate()
      WHERE [UserExamID]=#vlaue# AND [Status]>0
      END
      ]]>
    </statement>
    <!---更新考生开始考试时间-->
    <statement id="Test.UserExam.TestOver">
      UPDATE [KS_UserExam]
      SET [EndExamTime]=GetDate(),[Status]=2
      WHERE [UserExamID]=#vlaue#
    </statement>
    <!---更新考生最后保存答案时间-->
    <statement id="Test.UserExam.UpdateExamElapsedTime">
      UPDATE [KS_UserExam]
      SET [LastSaveTime]=GetDate(),[ElapsedTime]=#ElapsedTime#,
      [CurrQuestionNo]=#CurrentQuestionNo#
      WHERE [UserExamID]=#UserExamID# AND [Status]>0
    </statement>
    <!---更新考生成绩-->
    <statement id="Test.UserExam.UpdateUserScore">
      UPDATE [KS_UserExam]
      SET [ExamScore]=#UserScore#
      WHERE [UserExamID]=#UserExamID# AND [Status]>0
    </statement>
    <procedure id="Test.UserExam.FindStudentTests" parameterMap="Common.PagingParm" resultMap="Test.StudentTestView.ResultMap">
      pr_Exam_sp_super_page
    </procedure>
    
    <statement id="Test.UserExam.FindStudentTestsNoPaged"  resultMap="Test.StudentTestView.ResultMap">
      SELECT C.UserID,C.UserName,C.FirstName,C.LastName,C.Photo,
      A.UserExamID, A.ExamScore As UserScore,A.TestPaperScore As PaperScore,
      A.BeginExamTime As StartExamTime,A.EndExamTime,A.[Status] As TestStatus,
      B.TestPaperID,B.TestPaperName,
      B.TestPaperType
      FROM KS_UserExam A JOIN KS_TestPaper B
      ON A.TestPaperID =B.TestPaperID
      JOIN USERS C
      ON A.UserID=C.UserID
      WHERE
      A.UserID=#StudentID# AND A.TestPaperID =#TestPaperID#
      AND A.[Status]=#TestStatus#  AND A.IsPreview=0
      ORDER BY A.[Status] DESC,A.BeginExamTime
    </statement>
    <!---得到考生最后一次测试信息-->
    <statement id="Test.UserExam.GetUserLastTest"  resultMap="Test.StudentTestView.ResultMap">
		SELECT TOP 1 A.UserID,'' as UserName, '' as FirstName,'' as LastName,'' as Photo,
		A.UserExamID, A.ExamScore As UserScore,A.TestPaperScore As PaperScore,
		A.BeginExamTime As StartExamTime,A.EndExamTime,A.[Status] As TestStatus,
		B.TestPaperID,B.TestPaperName,
		B.TestPaperType
		FROM KS_UserExam A JOIN KS_TestPaper B
		ON A.TestPaperID =B.TestPaperID
		WHERE
		A.UserID=#UserID# AND A.TestPaperID =#TestPaperID#
		AND (CASE WHEN #TestStatus#=-1 THEN 1 WHEN A.[Status]=#TestStatus# THEN 1 ELSE 0 END)=1
		AND A.IsPreview=#IsPreview#
		ORDER BY A.[LastBeginExamTime] DESC,A.BeginExamTime DESC
	</statement>
    <!--得到指定考生，某一试卷考试的统计信息-->
    <statement id="Test.UserExam.GetUserExamStatByTestPaper"  resultMap="Test.UserExamStat.ResultMap">
      SELECT MAX(ExamScore) As MaxUserScore,MIN(examscore) As MinUserScore,
      COUNT(*) As ExamTimes
      FROM [KS_UserExam]
      where TestPaperID =#TestPaperID# AND UserID=#UserID# AND IsPreview=0
    </statement>
  </statements>
</sqlMap>