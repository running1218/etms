//==================================================================================================
//Version 1.0, auto-generated.
//Generated By liuyx.
//Date: 2012-3-29 9:04:04.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1)
//==================================================================================================

using System;
using System.Collections.Generic;
using System.Transactions;
using System.Data;
using ETMS.Utility.Logging;
using ETMS.Components.ExOfflineHomework.API.Entity;
using ETMS.Components.ExOfflineHomework.Implement.DAL;
using ETMS.Utility;

namespace ETMS.Components.ExOfflineHomework.Implement.BLL
{
    /// <summary>
    /// 项目课程离线作业表业务逻辑
    /// </summary>
    public partial class Res_ItemCourseOffLineJobLogic
	{
		private static readonly Res_ItemCourseOffLineJobDataAccess DAL = new Res_ItemCourseOffLineJobDataAccess();
		
		/// <summary>
		/// 增加
		/// </summary>
		public void Add(Res_ItemCourseOffLineJob res_ItemCourseOffLineJob)
		{
			DAL.Add(res_ItemCourseOffLineJob);
            BizLogHelper.AddOperate(res_ItemCourseOffLineJob);
		}

		/// <summary>
		/// 删除
		/// </summary>
		public void Remove(Guid itemCourseOffLineJobID)
		{
			DAL.Remove(itemCourseOffLineJobID);
		}
		
		/// <summary>
		/// 删除
		/// </summary>
		public void Remove(Res_ItemCourseOffLineJob res_ItemCourseOffLineJob)
		{
			Remove(res_ItemCourseOffLineJob.ItemCourseOffLineJobID);
            BizLogHelper.DeleteOperate(res_ItemCourseOffLineJob);
		}
		
		/// <summary>
		/// 批量删除
		/// </summary>
		public void Remove(List<Res_ItemCourseOffLineJob> res_ItemCourseOffLineJobs)
		{
			using (TransactionScope ts = new TransactionScope())
			{
				foreach (Res_ItemCourseOffLineJob res_ItemCourseOffLineJob in res_ItemCourseOffLineJobs)
				{
					Remove(res_ItemCourseOffLineJob);
				}
				
				ts.Complete();
			}
		}
    
		/// <summary>
		/// 保存
		/// </summary>
		public void Save(Res_ItemCourseOffLineJob res_ItemCourseOffLineJob)
		{
            //修改前信息
            Res_ItemCourseOffLineJob originalEntity=GetById(res_ItemCourseOffLineJob.ItemCourseOffLineJobID);
			DAL.Save(res_ItemCourseOffLineJob);
            BizLogHelper.UpdateOperate(originalEntity,res_ItemCourseOffLineJob);
		}
    
		/// <summary>
		/// 根据标识获取对象
		/// </summary>
		public Res_ItemCourseOffLineJob GetById(Guid itemCourseOffLineJobID)
		{
			Res_ItemCourseOffLineJob res_ItemCourseOffLineJob = DAL.GetById(itemCourseOffLineJobID);
			if (res_ItemCourseOffLineJob == null)
			{
				throw new ETMS.AppContext.BusinessException("ItemCourseOffLineJob.Res_ItemCourseOffLineJob.NotFoundException",new object[]{itemCourseOffLineJobID});
			}
			
			return res_ItemCourseOffLineJob;
		}
        /// <summary>
        /// 根据标识获取对象
        /// </summary>
        public Res_ItemCourseOffLineJob GetByJobId(Guid JobId)
        {
            Res_ItemCourseOffLineJob res_ItemCourseOffLineJob = DAL.GetByJobId(JobId).Rows[0].ToEntity<Res_ItemCourseOffLineJob>();
            if (res_ItemCourseOffLineJob == null)
            {
                throw new ETMS.AppContext.BusinessException("ItemCourseOffLineJob.Res_ItemCourseOffLineJob.NotFoundException", new object[] { JobId });
            }

            return res_ItemCourseOffLineJob;
        }
        
        /// <summary>
        /// 查询分页数据
        /// </summary>
        /// <param name="pageIndex">页号</param>
        /// <param name="pageSize">页面大小</param>
        /// <param name="sortExpression">排序条件</param>
        /// <param name="criteria">筛选条件</param>
        /// <param name="totalRecords">out 记录总数</param>
        /// <returns>返回查询结果</returns>
        public DataTable GetPagedList(int pageIndex, int pageSize, string sortExpression, string criteria,out int totalRecords)
		{				
			return DAL.GetPagedList(pageIndex, pageSize, sortExpression, criteria, out totalRecords);
		}
		
	}
	
	
}

