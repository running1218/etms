//==================================================================================================
//Version 1.0, auto-generated.
//Generated By running1218
//Date: 2012-4-11 23:14:38.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1)
//==================================================================================================

using System;
using ETMS.Utility;
using ETMS.Utility.Logging;
using ETMS.Components.ExOnlineJob.API.Entity.ExOnlineJob;
namespace ETMS.Components.ExOnlineJob.Implement.BLL.ExOnlineJob
{
    /// <summary>
    /// 业务逻辑
    /// </summary>
    public partial class Ex_StudentOnlineJobLogic
	{
 		/// <summary>
		/// 保存操作
		/// </summary>
		public void Save(Ex_StudentOnlineJob ex_StudentOnlineJob)
		{
            try
            {
			    if(ex_StudentOnlineJob.StudentOnlineJobID.IsEmpty())
                {
                    //设置主键ID（仅类型为GUID有效，Int型则由数据库自增产生）
                    ex_StudentOnlineJob.StudentOnlineJobID=ex_StudentOnlineJob.StudentOnlineJobID.NewID();;
                    Add(ex_StudentOnlineJob);
                }
                else
                {
                    Update(ex_StudentOnlineJob);
                }
            }
           catch (System.Data.SqlClient.SqlException ex)
            {
                //枚举数据约束异常并转换为业务异常
                if (ex.Message.IndexOf("Index_U_Ex_StudentOnlineJobCode",StringComparison.InvariantCultureIgnoreCase) != -1)
                {
				    throw new ETMS.AppContext.BusinessException("ExOnlineJob.Ex_StudentOnlineJob.CodeExists");
                }
                else if (ex.Message.IndexOf("Index_U_Ex_StudentOnlineJobName",StringComparison.InvariantCultureIgnoreCase) != -1)
                {
				    throw new ETMS.AppContext.BusinessException("ExOnlineJob.Ex_StudentOnlineJob.NameExists");
                }
                //如果仍未处理，则抛出
                throw ex;
            } 
		} 

        /// <summary>
		/// 删除
		/// </summary>
		protected void doRemove(Guid studentOnlineJobID)
		{
            try
            {
			     DAL.Remove(studentOnlineJobID);
                 //记录删除日志（根据ID删除）
                 BizLogHelper.Operate(studentOnlineJobID,"删除");
            }
           catch (System.Data.SqlClient.SqlException ex)
            {
                //枚举数据约束异常并转换为业务异常，数据已经使用
                if (ex.Message.IndexOf("FK_",StringComparison.InvariantCultureIgnoreCase) != -1)
                {
				    throw new ETMS.AppContext.BusinessException("ExOnlineJob.Ex_StudentOnlineJob.DataUsed");
                } 
                //如果仍未处理，则抛出
                throw ex;
            }  
		}

        /// <summary>
        /// 获取分数
        /// </summary>
        /// <param name="OnlineJobID"></param>
        /// <returns></returns>
        public decimal getScore(Guid onlineJobID,Guid trainingItemCourseID)
        {
            Ex_StudentOnlineJob ex_StudentOnlineJob = GetByStudentOnlineJob(onlineJobID, ETMS.AppContext.UserContext.Current.UserID, trainingItemCourseID);

            if (ex_StudentOnlineJob == null)
            {
                return 0;
            }
            else
            {
                return ex_StudentOnlineJob.Score;
            }
            
        }

        /// <summary>
        /// 获得UserExamID
        /// </summary>
        /// <param name="OnlineJobID"></param>
        /// <returns></returns>
        public Guid getUserExamID(Guid onlineJobID, Guid trainingItemCourseID,int UserID)
        {
            Ex_StudentOnlineJob ex_StudentOnlineJob = GetByStudentOnlineJob(onlineJobID, UserID, trainingItemCourseID);

            if (ex_StudentOnlineJob == null)
            {
                return Guid.Empty;
            }
            else
            {
                return ex_StudentOnlineJob.UserExamID;
            }
        }

        /// <summary>
        /// 根据标识获取对象
        /// </summary>
        public Ex_StudentOnlineJob GetByStudentOnlineJob(Guid onlineJobID, int userID, Guid trainingItemCourseID)
        {
            Ex_StudentOnlineJob ex_StudentOnlineJob = DAL.GetByStudentOnlineJob(onlineJobID, userID, trainingItemCourseID);
            
            return ex_StudentOnlineJob;
        }

        /// <summary>
        /// 作业是否做了
        /// </summary>
        /// <param name="onlineJobID"></param>
        /// <param name="trainingItemCourseID"></param>
        /// <returns></returns>
        public bool isAnswer(Guid onlineJobID, Guid trainingItemCourseID,int UserID)
        {
            Ex_StudentOnlineJob ex_StudentOnlineJob = GetByStudentOnlineJob(onlineJobID, UserID, trainingItemCourseID);

            if (ex_StudentOnlineJob == null)
            {
                return false;
            }
            else
            {
                if (ex_StudentOnlineJob.EndTime.Year != 1)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
        }


	}
	
	
}

