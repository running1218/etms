//==================================================================================================
//Version 1.0, auto-generated.
//Generated By xueyb.
//Date: 2012-4-1 16:00:51.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1), a product of ZhouYonghua(Zhou_Yonghua@163.com).
//==================================================================================================

using System;
using System.Data;
using ETMS.Utility;
using ETMS.Utility.Logging;
using ETMS.Components.ExOnlineJob.API.Entity.ExOnlineJob;

using ETMS.Components.Basic.Implement.BLL.Course.Resources;
using ETMS.Components.Basic.API.Entity.Course.Resources;

namespace ETMS.Components.ExOnlineJob.Implement.BLL.ExOnlineJob
{
    /// <summary>
    /// 在线作业表业务逻辑
    /// </summary>  
    public partial class Ex_OnLineJobLogic
	{

        public void SaveOnlineJob(Ex_OnLineJob ex_OnlineJob, Res_CourseRes res_CourseRes)
        {
            Save(ex_OnlineJob);
            
            Res_CourseResLogic courseResLogic = new Res_CourseResLogic();

            res_CourseRes.ResID = ex_OnlineJob.OnLineJobID.ToString();
            courseResLogic.Save(res_CourseRes);
            
        }

 		/// <summary>
		/// 保存操作
		/// </summary>
		public void Save(Ex_OnLineJob ex_OnLineJob)
		{
            try
            {
			    if(ex_OnLineJob.OnLineJobID.IsEmpty())
                {
                    //设置主键ID（仅类型为GUID有效，Int型则由数据库自增产生）
                    ex_OnLineJob.OnLineJobID = ex_OnLineJob.OnLineJobID.NewID();
                    Add(ex_OnLineJob);
                }
                else
                {
                    Update(ex_OnLineJob);
                }
            }
           catch (System.Data.SqlClient.SqlException ex)
            {
                //枚举数据约束异常并转换为业务异常
                if (ex.Message.IndexOf("Index_U_Ex_OnLineJobCode",StringComparison.InvariantCultureIgnoreCase) != -1)
                {
				    throw new ETMS.AppContext.BusinessException("ExOnlineJob.Ex_OnLineJob.CodeExists");
                }
                else if (ex.Message.IndexOf("Index_U_Ex_OnLineJobName",StringComparison.InvariantCultureIgnoreCase) != -1)
                {
				    throw new ETMS.AppContext.BusinessException("ExOnlineJob.Ex_OnLineJob.NameExists");
                }
                //如果仍未处理，则抛出
                throw ex;
            } 
		} 

        /// <summary>
		/// 删除
		/// </summary>
		protected void doRemove(Guid onLineJobID)
		{
            try
            {
                if (DAL.CheckResourceIsUsed(onLineJobID))
                {
                    throw new ETMS.AppContext.BusinessException("该学习资源已经被培训项目的课程引用，不能删除！");
                }

			     DAL.Remove(onLineJobID);
                 //记录删除日志（根据ID删除）
                 BizLogHelper.Operate(onLineJobID,"删除");
            }
           catch (System.Data.SqlClient.SqlException ex)
            {
                //枚举数据约束异常并转换为业务异常，数据已经使用
                if (ex.Message.IndexOf("FK_",StringComparison.InvariantCultureIgnoreCase) != -1)
                {
				    throw new ETMS.AppContext.BusinessException("ExOnlineJob.Ex_OnLineJob.DataUsed");
                } 
                //如果仍未处理，则抛出
                throw ex;
            }  
		}

        /// <summary>
        /// 根据课程编号获取在线作业的可用总数（状态为“启用”）
        /// </summary>
        /// <param name="courseID">课程编号</param>
        /// <returns></returns>
        public Int32 Get_OnlineJobTotal(Guid courseID)
        {
            return DAL.Get_OnlineJobTotal(courseID);
        }



        /// <summary>
        /// 根据课程编号获取在作业的总数
        /// </summary>
        /// <param name="courseID">课程编号</param>
        /// <returns></returns>
        public Int32 GetALLOnlineJobTotal(Guid courseID)
        {
            return DAL.GetALLOnlineJobTotal(courseID);
        }



        /// <summary>
        ///  根据培训项目课程编号获取在线作业总数
        /// </summary>
        /// <param name="trainingItemCourseID">培训项目课程编号</param>
        /// <returns></returns>
        public Int32 GetItemCourseOnlineJobTotal(Guid trainingItemCourseID)
        {
            return DAL.GetItemCourseOnlineJobTotal(trainingItemCourseID);
        }
        /// <summary>
        /// 查询在线作业的试卷信息
        /// </summary>
        /// <param name="trainingItemCourseID">培训项目课程ID</param>
        /// <param name="TestPaperID">试卷ID</param>
        /// <returns></returns>
        public DataTable GetOnlineJobExamTestPaper(Guid TrainingItemCourseID, Guid TestPaperID)
        {
            return DAL.GetOnlineJobExamTestPaper(TrainingItemCourseID, TestPaperID);
        }

    }
	
	
}

