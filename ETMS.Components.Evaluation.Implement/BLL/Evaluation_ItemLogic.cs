//==================================================================================================
//Version 1.0, auto-generated.
//Generated By xueyb.
//Date: 2012-4-18 11:41:21.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1), a product of ZhouYonghua(Zhou_Yonghua@163.com).
//==================================================================================================

using System;
using System.Collections.Generic;
using ETMS.Utility;
using ETMS.Utility.Logging;
using ETMS.Components.Evaluation.API.Entity;
namespace ETMS.Components.Evaluation.Implement.BLL
{
    /// <summary>
    /// 评价项表业务逻辑
    /// </summary>
    public partial class Evaluation_ItemLogic
	{
 		/// <summary>
		/// 保存操作
		/// </summary>
		public void Save(Evaluation_Item evaluation_Item)
		{
            try
            {
			    if(evaluation_Item.ItemID.IsEmpty())
                {
                    //设置主键ID（仅类型为GUID有效，Int型则由数据库自增产生）
                    evaluation_Item.ItemID=evaluation_Item.ItemID.NewID();;
                    Add(evaluation_Item);
                }
                else
                {
                    Update(evaluation_Item);
                }
            }
           catch (System.Data.SqlClient.SqlException ex)
            {
                //枚举数据约束异常并转换为业务异常
                if (ex.Message.IndexOf("Index_U_Evaluation_ItemCode",StringComparison.InvariantCultureIgnoreCase) != -1)
                {
				    throw new ETMS.AppContext.BusinessException("Evaluation.Evaluation_Item.CodeExists");
                }
                else if (ex.Message.IndexOf("Index_U_Evaluation_ItemName",StringComparison.InvariantCultureIgnoreCase) != -1)
                {
				    throw new ETMS.AppContext.BusinessException("Evaluation.Evaluation_Item.NameExists");
                }
                //如果仍未处理，则抛出
                throw ex;
            } 
		} 

        /// <summary>
		/// 删除
		/// </summary>
		protected void doRemove(Guid itemID)
		{
            try
            {
			     DAL.Remove(itemID);
                 //记录删除日志（根据ID删除）
                 BizLogHelper.Operate(itemID,"删除");
            }
           catch (System.Data.SqlClient.SqlException ex)
            {
                //枚举数据约束异常并转换为业务异常，数据已经使用
                if (ex.Message.IndexOf("FK_",StringComparison.InvariantCultureIgnoreCase) != -1)
                {
				    throw new ETMS.AppContext.BusinessException("Evaluation.Evaluation_Item.DataUsed");
                } 
                //如果仍未处理，则抛出
                throw ex;
            }  
		}

        /// <summary>
        /// 获取指定评价量表的所有评价项
        /// </summary>
        public List<Evaluation_Item> GetByPlate(Guid plateID)
        {
            List<Evaluation_Item> items = DAL.GetByPlate(plateID);
            return items;
        }
	}
	
	
}

