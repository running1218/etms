//==================================================================================================
//Version 1.0, auto-generated.
//Generated By xueyb.
//Date: 2012-4-18 11:41:21.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1), a product of ZhouYonghua(Zhou_Yonghua@163.com).
//==================================================================================================

using System;
using System.Collections.Generic;
using System.Data;
using ETMS.Utility;
using ETMS.Utility.Logging;
using ETMS.Components.Evaluation.API.Entity;

namespace ETMS.Components.Evaluation.Implement.BLL
{
    /// <summary>
    /// 评价项记录表业务逻辑
    /// </summary>
    public partial class Evaluation_ItemResultLogic
	{
 		/// <summary>
		/// 保存操作
		/// </summary>
		public void Save(Evaluation_ItemResult evaluation_ItemResult)
		{
            try
            {
			    if(evaluation_ItemResult.ResultID.IsEmpty())
                {
                    //设置主键ID（仅类型为GUID有效，Int型则由数据库自增产生）
                    evaluation_ItemResult.ResultID=evaluation_ItemResult.ResultID.NewID();;
                    Add(evaluation_ItemResult);
                }
                else
                {
                    Update(evaluation_ItemResult);
                }
            }
           catch (System.Data.SqlClient.SqlException ex)
            {
                //枚举数据约束异常并转换为业务异常
                if (ex.Message.IndexOf("Index_U_Evaluation_ItemResultCode",StringComparison.InvariantCultureIgnoreCase) != -1)
                {
				    throw new ETMS.AppContext.BusinessException("Evaluation.Evaluation_ItemResult.CodeExists");
                }
                else if (ex.Message.IndexOf("Index_U_Evaluation_ItemResultName",StringComparison.InvariantCultureIgnoreCase) != -1)
                {
				    throw new ETMS.AppContext.BusinessException("Evaluation.Evaluation_ItemResult.NameExists");
                }
                //如果仍未处理，则抛出
                throw ex;
            } 
		} 

        /// <summary>
		/// 删除
		/// </summary>
		protected void doRemove(Guid resultID)
		{
            try
            {
			     DAL.Remove(resultID);
                 //记录删除日志（根据ID删除）
                 BizLogHelper.Operate(resultID,"删除");
            }
           catch (System.Data.SqlClient.SqlException ex)
            {
                //枚举数据约束异常并转换为业务异常，数据已经使用
                if (ex.Message.IndexOf("FK_",StringComparison.InvariantCultureIgnoreCase) != -1)
                {
				    throw new ETMS.AppContext.BusinessException("Evaluation.Evaluation_ItemResult.DataUsed");
                } 
                //如果仍未处理，则抛出
                throw ex;
            }  
		}


        /// <summary>
        /// 学生提交客观题
        /// </summary>
        public void AddResult (string objectID, Guid plateID, string itemIDScore,string Remark)
        {
            string[] arrayStr = itemIDScore.Split(',');
            string[] arraydata = new string[5];  //acrion + objectid + itemid + score

            string itemid = "";
            string score = "";

            string ItemIDList = string.Empty;
            string ScoreList = string.Empty;

            for (int i = 0; i < arrayStr.Length; i++)
            {
                arraydata.Initialize();
                arraydata = arrayStr[i].ToString().Split('_');

                itemid = arraydata[2].ToString();
                score = arraydata[3].ToString();

                if (i > 0)
                {
                    ItemIDList += "," + itemid;
                    ScoreList += "," + score;
                }
                else
                {
                    ItemIDList = itemid;
                    ScoreList = score;
                }
            }

            
            DAL.AddList(ETMS.AppContext.UserContext.Current.UserID,objectID,plateID,ItemIDList, ScoreList, Remark);
            

        }

        /// <summary>
        /// 评价结果
        /// </summary>
        /// <param name="objectID"></param>
        /// <param name="plateID"></param>
        /// <returns></returns>
        public DataTable GetResultShow(string objectID, Guid plateID)
        {
            return DAL.GetResultShow(objectID, plateID);
        }

        /// <summary>
        /// 好评度
        /// </summary>
        /// <param name="objectID"></param>
        /// <param name="plateID"></param>
        /// <returns></returns>
        public DataTable GetResultShowGood(string objectID, Guid plateID)
        {
            return DAL.GetResultShowGood(objectID, plateID);
        }

        /// <summary>
        /// 审核后好评度
        /// </summary>
        /// <param name="objectID"></param>
        /// <param name="plateID"></param>
        /// <returns></returns>
        public DataTable GetResultShowGoodApprove(string objectID, Guid plateID)
        {
            return DAL.GetResultShowGoodApprove(objectID, plateID);
        }

        /// <summary>
        /// 用户客观评价平均值
        /// </summary>
        /// <param name="objectID"></param>
        /// <param name="plateID"></param>
        /// <param name="userID"></param>
        /// <returns></returns>
        public DataTable ItemResultByUser(string objectID, Guid plateID, int userID)
        {
            return DAL.ItemResultByUser(objectID, plateID, userID);
        }


        /// <summary>
        /// 用户客观评价平均值
        /// </summary>
        /// <param name="objectID"></param>
        /// <param name="plateID"></param>
        /// <param name="userID"></param>
        /// <returns></returns>
        public DataTable ItemResultByUserApprove(string objectID, Guid plateID, int userID)
        {
            return DAL.ItemResultByUserApprove(objectID, plateID, userID);
        }

        /// <summary>
        /// 获取某个项目的评价数
        /// </summary>
        /// <param name="objectID"></param>
        /// <param name="plateID"></param>
        /// <param name="userID"></param>
        /// <returns>返回:评价数</returns>
        public int GetItemResultTotalByUser(string objectID, Guid plateID, int userID)
        {
            return DAL.GetItemResultTotalByUser(objectID, plateID, userID);
        }


        /// <summary>
        /// 获取某个用户点评分数
        /// </summary>
        public DataTable GetResultUserScore(string objectID, Guid plateID, int userID)
        {
            return DAL.GetResultUserScore(objectID, plateID, userID);
        }

        public List<EvaluationExt> GetCourseEvaluationDetails(string objectID, Guid plateID)
        {
            return DAL.GetCourseEvaluationDetails(objectID, plateID).ToList<EvaluationExt>();
        }
	}	
}

