//==================================================================================================
//Version 1.0, auto-generated.
//Generated By running1218
//Date: 2012-4-23 15:08:15.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1)
//==================================================================================================

using System;
using System.Collections.Generic;
using System.Data;
using ETMS.Utility.Logging;
using ETMS.Components.Poll.API.Entity;
using ETMS.Components.Poll.Implement.DAL;
namespace ETMS.Components.Poll.Implement.BLL
{
    /// <summary>
    /// 业务逻辑
    /// </summary>
    public partial class Poll_QueryAreaDetailLogic
    {
        private static readonly Poll_QueryAreaDetailDataAccess DAL = new Poll_QueryAreaDetailDataAccess();

        /// <summary>
        /// 增加
        /// </summary>
        public void Add(Poll_QueryAreaDetail poll_QueryAreaDetail)
        {
            DAL.Add(poll_QueryAreaDetail);
            BizLogHelper.AddOperate(poll_QueryAreaDetail);
        }


        /// <summary>
        /// 保存
        /// </summary>
        public void Update(Poll_QueryAreaDetail poll_QueryAreaDetail)
        {
            //修改前信息
            Poll_QueryAreaDetail originalEntity = GetById(poll_QueryAreaDetail.QueryAreaDetailID);
            DAL.Save(poll_QueryAreaDetail);
            BizLogHelper.UpdateOperate(originalEntity, poll_QueryAreaDetail);
        }

        /// <summary>
        /// 删除
        /// </summary>
        public int Remove(Int32 queryAreaDetailID)
        {
            return doRemove(queryAreaDetailID);
        }

        /// <summary>
        /// 批量删除(主键ID数组）
        /// </summary>
        public void Remove(Int32[] queryAreaDetailIDs, out int extCount)
        {
           extCount = 0;
#if !DEBUG
			using (TransactionScope ts = new TransactionScope())
			{
#endif

            foreach (Int32 id in queryAreaDetailIDs)
            {
                int i = Remove(id);
                if (i > 0)
                {
                    extCount++;
                }
            }
#if !DEBUG
				ts.Complete();
			}
#endif
        }


        /// <summary>
        /// 根据标识获取对象
        /// </summary>
        public Poll_QueryAreaDetail GetById(Int32 queryAreaDetailID)
        {
            Poll_QueryAreaDetail poll_QueryAreaDetail = DAL.GetById(queryAreaDetailID);
            if (poll_QueryAreaDetail == null)
            {
                throw new ETMS.AppContext.BusinessException(".Poll_QueryAreaDetail.NotFoundException", new object[] { queryAreaDetailID });
            }

            return poll_QueryAreaDetail;
        }

        /// <summary>
        /// 查询数据列表分页数据
        /// </summary>
        /// <param name="pageIndex">页号</param>
        /// <param name="pageSize">页面大小</param>
        /// <param name="sortExpression">排序条件</param>
        /// <param name="criteria">筛选条件</param>
        /// <param name="totalRecords">out 记录总数</param>
        /// <returns>返回查询结果</returns>
        public DataTable GetPagedList(int pageIndex, int pageSize, string sortExpression, string criteria, out int totalRecords)
        {
            return DAL.GetPagedList(pageIndex, pageSize, sortExpression, criteria, out totalRecords);
        }

        /// <summary>
        /// 查询实体分页数据
        /// </summary>
        /// <param name="pageIndex">页号</param>
        /// <param name="pageSize">页面大小</param>
        /// <param name="sortExpression">排序条件</param>
        /// <param name="criteria">筛选条件</param>
        /// <param name="totalRecords">out 记录总数</param>
        /// <returns>返回查询结果</returns>
        public IList<Poll_QueryAreaDetail> GetEntityList(int pageIndex, int pageSize, string sortExpression, string criteria, out int totalRecords)
        {
            return DAL.GetEntityList(pageIndex, pageSize, sortExpression, criteria, out totalRecords);
        }

        /// <summary>
        ///  培训需求调查管理 未选学员 
        /// </summary>
        /// <param name="pageIndex"></param>
        /// <param name="pageSize"></param>
        /// <param name="sortExpression"></param>
        /// <param name="criteria"></param>
        /// <param name="QueryAreaID">调查ID</param>
        /// <param name="totalRecords"></param>
        /// <returns></returns>
        public DataTable GetNoStudentList(int pageIndex, int pageSize, string sortExpression, string criteria, int QueryAreaID, out int totalRecords)
        {
            return DAL.GetNoStudentList(pageIndex, pageSize, sortExpression, criteria, QueryAreaID, out totalRecords);
        }
    }


}

