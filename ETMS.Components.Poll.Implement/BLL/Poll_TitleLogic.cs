//==================================================================================================
//Version 1.0, auto-generated.
//Generated By running1218
//Date: 2012-4-17 15:53:39.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1)
//==================================================================================================

using System;
using System.Collections.Generic;
using ETMS.Utility;
using ETMS.Utility.Logging;
using ETMS.Components.Poll.API.Entity;
namespace ETMS.Components.Poll.Implement.BLL
{
    /// <summary>
    /// 题目标题业务逻辑
    /// </summary>
    public partial class Poll_TitleLogic
    {
        /// <summary>
        /// 保存操作
        /// </summary>
        public void Save(Poll_Title poll_Title)
        {
            try
            {
                if (poll_Title.TitleID.IsEmpty())
                {
                    //设置主键ID（仅类型为GUID有效，Int型则由数据库自增产生）
                    poll_Title.TitleID = poll_Title.TitleID.NewID(); ;
                    Add(poll_Title);
                }
                else
                {
                    Update(poll_Title);
                }
            }
            catch (System.Data.SqlClient.SqlException ex)
            {
                //枚举数据约束异常并转换为业务异常
                if (ex.Message.IndexOf("Index_U_Poll_TitleCode", StringComparison.InvariantCultureIgnoreCase) != -1)
                {
                    throw new ETMS.AppContext.BusinessException("Poll.Poll_Title.CodeExists");
                }
                else if (ex.Message.IndexOf("Index_U_Poll_TitleName", StringComparison.InvariantCultureIgnoreCase) != -1)
                {
                    throw new ETMS.AppContext.BusinessException("Poll.Poll_Title.NameExists");
                }
                //如果仍未处理，则抛出
                throw ex;
            }
        }

        /// <summary>
        /// 删除
        /// </summary>
        protected void doRemove(Int32 titleID)
        {
            try
            {
                DAL.Remove(titleID);
                //记录删除日志（根据ID删除）
                BizLogHelper.Operate(titleID, "删除");
            }
            catch (System.Data.SqlClient.SqlException ex)
            {
                //枚举数据约束异常并转换为业务异常，数据已经使用
                if (ex.Message.IndexOf("FK_", StringComparison.InvariantCultureIgnoreCase) != -1)
                {
                    throw new ETMS.AppContext.BusinessException("Poll.Poll_Title.DataUsed");
                }
                else if (ex.Message.IndexOf("R_1052", StringComparison.InvariantCultureIgnoreCase) != -1)
                {
                    throw new ETMS.AppContext.BusinessException("Poll.Poll_Title.DataUsed");
                }

                //如果仍未处理，则抛出
                throw ex;
            }
        }

        public void UpdateQSTitleSort(List<Poll_Title> titleList)
        {
            foreach (var p in titleList)
            {
                DAL.UpdateQSTitleSort(p);
            }
        }
        /// <summary>
        /// 获取某个调查问卷的当前最大题目序号
        /// </summary>
        /// <param name="queryID">调查问卷ID</param>
        /// <returns></returns>
        public Int32 GetMaxTitleNo(int columnID)
        {
            return DAL.GetMaxTitleNo(columnID);
        }
    }


}

