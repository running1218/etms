//==================================================================================================
//Version 1.0, auto-generated.
//Generated By running1218
//Date: 2012-4-23 15:08:15.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1)
//==================================================================================================

using System;
using System.Collections.Generic;
using System.Data;

using System.Data.SqlClient;
using ETMS.Utility.Data;

using ETMS.Components.Poll.API.Entity;

namespace ETMS.Components.Poll.Implement.DAL
{
    /// <summary>
    /// 数据访问
    /// </summary>
    public partial class Poll_QueryAreaDetailDataAccess
    {
        /// <summary>
        /// 增加
        /// </summary>
        public void Add(Poll_QueryAreaDetail poll_QueryAreaDetail)
        {
            string commandName = "dbo.Pr_Poll_QueryAreaDetail_Insert";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSWrite, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {	new SqlParameter("@QueryAreaDetailID", SqlDbType.Int, 4, ParameterDirection.Output, false, 0, 0, String.Empty, DataRowVersion.Default, null),
				
					new SqlParameter("@QueryAreaID", SqlDbType.Int),
					new SqlParameter("@DetailType", SqlDbType.VarChar, 50),
					new SqlParameter("@DetailCode", SqlDbType.VarChar, 50),
					new SqlParameter("@Creator", SqlDbType.VarChar, 50),
					new SqlParameter("@CreateTime", SqlDbType.DateTime)
					};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSWrite, commandName, parms);
            }

            parms[1].Value = poll_QueryAreaDetail.QueryAreaID;
            if (poll_QueryAreaDetail.DetailType != null) { parms[2].Value = poll_QueryAreaDetail.DetailType; } else { parms[2].Value = DBNull.Value; }
            if (poll_QueryAreaDetail.DetailCode != null) { parms[3].Value = poll_QueryAreaDetail.DetailCode; } else { parms[3].Value = DBNull.Value; }
            if (poll_QueryAreaDetail.Creator != null) { parms[4].Value = poll_QueryAreaDetail.Creator; } else { parms[4].Value = DBNull.Value; }
            parms[5].Value = poll_QueryAreaDetail.CreateTime;
            #endregion
            SqlHelper.ExecuteNonQuery(ConnectionString.ETMSWrite, CommandType.StoredProcedure, commandName, parms);

            poll_QueryAreaDetail.QueryAreaDetailID = (Int32)parms[0].Value;

        }

        /// <summary>
        /// 删除
        /// </summary>
        public int Remove(Int32 queryAreaDetailID)
        {
            string commandName = "dbo.Pr_Poll_QueryAreaDetail_Delete";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSWrite, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
					new SqlParameter("@QueryAreaDetailID", SqlDbType.Int)
				};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSWrite, commandName, parms);
            }

            parms[0].Value = queryAreaDetailID;

            #endregion
            return SqlHelper.ExecuteNonQuery(ConnectionString.ETMSWrite, CommandType.StoredProcedure, commandName, parms);
        }

        /// <summary>
        /// 保存
        /// </summary>
        public void Save(Poll_QueryAreaDetail poll_QueryAreaDetail)
        {
            string commandName = "dbo.Pr_Poll_QueryAreaDetail_Update";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSWrite, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
					new SqlParameter("@QueryAreaDetailID", SqlDbType.Int),
					new SqlParameter("@QueryAreaID", SqlDbType.Int),
					new SqlParameter("@DetailType", SqlDbType.VarChar, 50),
					new SqlParameter("@DetailCode", SqlDbType.VarChar, 50),
					new SqlParameter("@Creator", SqlDbType.VarChar, 50),
					new SqlParameter("@CreateTime", SqlDbType.DateTime)
				};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSWrite, commandName, parms);
            }

            parms[0].Value = poll_QueryAreaDetail.QueryAreaDetailID;
            parms[1].Value = poll_QueryAreaDetail.QueryAreaID;
            if (poll_QueryAreaDetail.DetailType != null) { parms[2].Value = poll_QueryAreaDetail.DetailType; } else { parms[2].Value = DBNull.Value; }
            if (poll_QueryAreaDetail.DetailCode != null) { parms[3].Value = poll_QueryAreaDetail.DetailCode; } else { parms[3].Value = DBNull.Value; }
            if (poll_QueryAreaDetail.Creator != null) { parms[4].Value = poll_QueryAreaDetail.Creator; } else { parms[4].Value = DBNull.Value; }
            parms[5].Value = poll_QueryAreaDetail.CreateTime;
            #endregion
            SqlHelper.ExecuteNonQuery(ConnectionString.ETMSWrite, CommandType.StoredProcedure, commandName, parms);
        }

        /// <summary>
        /// 根据标识获取对象
        /// </summary>
        public Poll_QueryAreaDetail GetById(Int32 queryAreaDetailID)
        {
            Poll_QueryAreaDetail poll_QueryAreaDetail = null;

            string commandName = "dbo.Pr_Poll_QueryAreaDetail_GetByPK";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
					new SqlParameter("@QueryAreaDetailID", SqlDbType.Int)
				};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
            }

            parms[0].Value = queryAreaDetailID;

            #endregion
            using (SqlDataReader dataReader = SqlHelper.ExecuteReader(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms))
            {
                if (dataReader.Read())
                {
                    poll_QueryAreaDetail = PopulatePoll_QueryAreaDetailFromDataReader(dataReader);
                }
            }

            return poll_QueryAreaDetail;
        }

        /// <summary>
        /// 根据参数获取对象列表（分页，可排序）
        /// </summary>
        public DataTable GetPagedList(int pageIndex, int pageSize, string sortExpression, string criteria, out int totalRecords)
        {
            string commandName = "dbo.Pr_Poll_QueryAreaDetail_GetPagedList";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
					new SqlParameter("@PageIndex", SqlDbType.Int),
					new SqlParameter("@PageSize", SqlDbType.Int),
					new SqlParameter("@SortExpression", SqlDbType.VarChar),
					new SqlParameter("@Criteria", SqlDbType.VarChar),
					new SqlParameter("@ReturnValue", SqlDbType.Int, 4, ParameterDirection.ReturnValue, false, 0, 0, String.Empty, DataRowVersion.Default, null)
				};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
            }

            parms[0].Value = pageIndex;
            parms[1].Value = pageSize;
            parms[2].Value = sortExpression;
            parms[3].Value = criteria;
            #endregion
            DataTable dt = SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms).Tables[0];
            totalRecords = (int)parms[4].Value;
            return dt;
        }

        /// <summary>
        /// 根据参数获取对象列表（分页，可排序）
        /// </summary>
        public IList<Poll_QueryAreaDetail> GetEntityList(int pageIndex, int pageSize, string sortExpression, string criteria, out int totalRecords)
        {
            IList<Poll_QueryAreaDetail> list = new List<Poll_QueryAreaDetail>();
            string commandName = "dbo.Pr_Poll_QueryAreaDetail_GetPagedList";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
					new SqlParameter("@PageIndex", SqlDbType.Int),
					new SqlParameter("@PageSize", SqlDbType.Int),
					new SqlParameter("@SortExpression", SqlDbType.VarChar),
					new SqlParameter("@Criteria", SqlDbType.VarChar),
					new SqlParameter("@ReturnValue", SqlDbType.Int, 4, ParameterDirection.ReturnValue, false, 0, 0, String.Empty, DataRowVersion.Default, null)
				};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
            }

            parms[0].Value = pageIndex;
            parms[1].Value = pageSize;
            parms[2].Value = sortExpression;
            parms[3].Value = criteria;
            #endregion
            using (SqlDataReader dataReader = SqlHelper.ExecuteReader(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms))
            {
                while (dataReader.Read())
                {
                    list.Add(PopulatePoll_QueryAreaDetailFromDataReader(dataReader));
                }
            }
            totalRecords = (int)parms[4].Value;
            return list;
        }


        /// <summary>
        ///  培训需求调查管理 未选学员 
        /// </summary>
        /// <param name="pageIndex"></param>
        /// <param name="pageSize"></param>
        /// <param name="sortExpression"></param>
        /// <param name="criteria"></param>
        /// <param name="QueryAreaID">调查ID</param>
        /// <param name="totalRecords"></param>
        /// <returns></returns>
        public DataTable GetNoStudentList(int pageIndex, int pageSize, string sortExpression, string criteria, int QueryAreaID, out int totalRecords)
        {
            IList<Poll_QueryAreaDetail> list = new List<Poll_QueryAreaDetail>();
            string commandName = "dbo.[Pr_Site_Student_GetNoStudentList]";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
					new SqlParameter("@PageIndex", SqlDbType.Int),
					new SqlParameter("@PageSize", SqlDbType.Int),
					new SqlParameter("@SortExpression", SqlDbType.VarChar),
					new SqlParameter("@Criteria", SqlDbType.VarChar),
                    new SqlParameter("@QueryAreaID",SqlDbType.Int),
					new SqlParameter("@ReturnValue", SqlDbType.Int, 4, ParameterDirection.ReturnValue, false, 0, 0, String.Empty, DataRowVersion.Default, null)
				};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
            }

            parms[0].Value = pageIndex;
            parms[1].Value = pageSize;
            parms[2].Value = sortExpression;
            parms[3].Value = criteria;
            parms[4].Value = QueryAreaID;
            #endregion
            DataTable dt = SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms).Tables[0];

            totalRecords = (int)parms[5].Value;
            return dt;
        }

        /// <summary>
        /// 从DataReader中读取数据到业务对象
        /// </summary>
        private Poll_QueryAreaDetail PopulatePoll_QueryAreaDetailFromDataReader(SqlDataReader reader)
        {
            Poll_QueryAreaDetail poll_QueryAreaDetail = new Poll_QueryAreaDetail();

            int queryAreaDetailIDIndex = reader.GetOrdinal("QueryAreaDetailID");
            if (!reader.IsDBNull(queryAreaDetailIDIndex))
            {
                poll_QueryAreaDetail.QueryAreaDetailID = reader.GetInt32(queryAreaDetailIDIndex);
            }

            int queryAreaIDIndex = reader.GetOrdinal("QueryAreaID");
            if (!reader.IsDBNull(queryAreaIDIndex))
            {
                poll_QueryAreaDetail.QueryAreaID = reader.GetInt32(queryAreaIDIndex);
            }

            int detailTypeIndex = reader.GetOrdinal("DetailType");
            if (!reader.IsDBNull(detailTypeIndex))
            {
                poll_QueryAreaDetail.DetailType = reader.GetString(detailTypeIndex);
            }

            int detailCodeIndex = reader.GetOrdinal("DetailCode");
            if (!reader.IsDBNull(detailCodeIndex))
            {
                poll_QueryAreaDetail.DetailCode = reader.GetString(detailCodeIndex);
            }

            int creatorIndex = reader.GetOrdinal("Creator");
            if (!reader.IsDBNull(creatorIndex))
            {
                poll_QueryAreaDetail.Creator = reader.GetString(creatorIndex);
            }

            int createTimeIndex = reader.GetOrdinal("CreateTime");
            if (!reader.IsDBNull(createTimeIndex))
            {
                poll_QueryAreaDetail.CreateTime = reader.GetDateTime(createTimeIndex);
            }

            return poll_QueryAreaDetail;
        }
        

        /// <summary>
        /// 根据问卷ID获取调查对象明细
        /// </summary>
        /// <param name="queryID">问卷ID</param>
        /// <param name="pageIndex"></param>
        /// <param name="pageSize"></param>
        /// <param name="sortExpression"></param>
        /// <param name="totalRecords"></param>
        /// <returns></returns>
        public DataTable GetQueryAreaOrQueryAreaDetailPagedList(int queryID,string sType, int pageIndex, int pageSize, string sortExpression, out int totalRecords)
        {
            string commandName = "dbo.[Pr_Poll_QueryAreaOrQueryAreaDetail_GetPagedList]";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
					new SqlParameter("@QueryID", SqlDbType.Int),
					new SqlParameter("@PageIndex", SqlDbType.Int),
					new SqlParameter("@PageSize", SqlDbType.Int),
					new SqlParameter("@SortExpression", SqlDbType.VarChar),
                    new SqlParameter("@ResourceTypeCode", SqlDbType.VarChar),
					new SqlParameter("@ReturnValue", SqlDbType.Int, 4, ParameterDirection.ReturnValue, false, 0, 0, String.Empty, DataRowVersion.Default, null)
				};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
            }

            parms[0].Value = queryID;
            parms[1].Value = pageIndex;
            parms[2].Value = pageSize;
            parms[3].Value = sortExpression;
            parms[4].Value = sType;
            #endregion
            DataTable dt = SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms).Tables[0];
            totalRecords = (int)parms[5].Value;
            return dt;
        }
    }
}
