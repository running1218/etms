//==================================================================================================
//Version 1.0, auto-generated.
//Generated By xueyb.
//Date: 2012-4-17 15:53:39.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1), a product of ZhouYonghua(Zhou_Yonghua@163.com).
//==================================================================================================

using System;
using System.Collections.Generic;
using System.Data;

using System.Data.SqlClient;
using ETMS.Utility.Data;

using ETMS.Components.Poll.API.Entity;

namespace ETMS.Components.Poll.Implement.DAL
{
    /// <summary>
    /// 数据访问
    /// </summary>
    public partial class Poll_ResourceTypeDataAccess
	{
		/// <summary>
		/// 增加
		/// </summary>
		public void Add(Poll_ResourceType poll_ResourceType)
		{
			string commandName = "dbo.Pr_Poll_ResourceType_Insert";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSWrite, commandName);
			if (parms == null)
			{
				parms = new SqlParameter[] {
					new SqlParameter("@ResourceTypeCode", SqlDbType.VarChar, 2),
					new SqlParameter("@ResourceTypeName", SqlDbType.VarChar, 50),
					new SqlParameter("@PublicCode", SqlDbType.UniqueIdentifier)
					};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSWrite, commandName, parms);
			}
			
			if (poll_ResourceType.ResourceTypeCode!= null){ parms[0].Value = poll_ResourceType.ResourceTypeCode; } else { parms[0].Value = DBNull.Value; }
			if (poll_ResourceType.ResourceTypeName!= null){ parms[1].Value = poll_ResourceType.ResourceTypeName; } else { parms[1].Value = DBNull.Value; }
			parms[2].Value = poll_ResourceType.PublicCode;
			#endregion
			SqlHelper.ExecuteNonQuery(ConnectionString.ETMSWrite, CommandType.StoredProcedure, commandName, parms);
			
		}
		
		/// <summary>
		/// 删除
		/// </summary>
		public void Remove(String resourceTypeCode)
		{
			string commandName = "dbo.Pr_Poll_ResourceType_Delete";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSWrite, commandName);
			if (parms == null)
			{
				parms = new SqlParameter[] {
					new SqlParameter("@ResourceTypeCode", SqlDbType.VarChar, 2)
				};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSWrite, commandName, parms);
			}
			
			parms[0].Value = resourceTypeCode;
			
			#endregion
			SqlHelper.ExecuteNonQuery(ConnectionString.ETMSWrite, CommandType.StoredProcedure, commandName, parms);
		}
		
		/// <summary>
		/// 保存
		/// </summary>
		public void Save(Poll_ResourceType poll_ResourceType)
		{
			string commandName = "dbo.Pr_Poll_ResourceType_Update";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSWrite, commandName);
			if (parms == null)
			{
				parms = new SqlParameter[] {
					new SqlParameter("@ResourceTypeCode", SqlDbType.VarChar, 2),
					new SqlParameter("@ResourceTypeName", SqlDbType.VarChar, 50),
					new SqlParameter("@PublicCode", SqlDbType.UniqueIdentifier)
				};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSWrite, commandName, parms);
			}
			
			if (poll_ResourceType.ResourceTypeCode!= null){ parms[0].Value = poll_ResourceType.ResourceTypeCode; } else { parms[0].Value = DBNull.Value; }
			if (poll_ResourceType.ResourceTypeName!= null){ parms[1].Value = poll_ResourceType.ResourceTypeName; } else { parms[1].Value = DBNull.Value; }
			parms[2].Value = poll_ResourceType.PublicCode;
			#endregion
			SqlHelper.ExecuteNonQuery(ConnectionString.ETMSWrite, CommandType.StoredProcedure, commandName, parms);
		}
		
		/// <summary>
		/// 根据标识获取对象
		/// </summary>
		public Poll_ResourceType GetById(String resourceTypeCode)
		{
			Poll_ResourceType poll_ResourceType = null;
			
			string commandName = "dbo.Pr_Poll_ResourceType_GetByPK";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
			if (parms == null)
			{
				parms = new SqlParameter[] {
					new SqlParameter("@ResourceTypeCode", SqlDbType.VarChar, 2)
				};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
			}
			
			parms[0].Value = resourceTypeCode;
			
			#endregion
			using (SqlDataReader dataReader = SqlHelper.ExecuteReader(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms))
			{
				if (dataReader.Read())
				{
					poll_ResourceType = PopulatePoll_ResourceTypeFromDataReader(dataReader);
				}
			}
			
			return poll_ResourceType;
		}				
		
		/// <summary>
		/// 根据参数获取对象列表（分页，可排序）
		/// </summary>
		public DataTable GetPagedList(int pageIndex, int pageSize, string sortExpression, string criteria, out int totalRecords)
		{			
			string commandName = "dbo.Pr_Poll_ResourceType_GetPagedList";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
			if (parms == null)
			{
				parms = new SqlParameter[] {
					new SqlParameter("@PageIndex", SqlDbType.Int),
					new SqlParameter("@PageSize", SqlDbType.Int),
					new SqlParameter("@SortExpression", SqlDbType.VarChar),
					new SqlParameter("@Criteria", SqlDbType.VarChar),
					new SqlParameter("@ReturnValue", SqlDbType.Int, 4, ParameterDirection.ReturnValue, false, 0, 0, String.Empty, DataRowVersion.Default, null)
				};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
			}
			
			parms[0].Value = pageIndex;
			parms[1].Value = pageSize;
			parms[2].Value = sortExpression;
			parms[3].Value = criteria;
			#endregion
			DataTable dt=SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms).Tables[0];
			totalRecords = (int)parms[4].Value;
			return dt;
		}
		
	    /// <summary>
		/// 根据参数获取对象列表（分页，可排序）
		/// </summary>
		public IList<Poll_ResourceType> GetEntityList(int pageIndex, int pageSize, string sortExpression, string criteria, out int totalRecords)
		{			
            IList<Poll_ResourceType> list=new List<Poll_ResourceType>();
			string commandName = "dbo.Pr_Poll_ResourceType_GetPagedList";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
			if (parms == null)
			{
				parms = new SqlParameter[] {
					new SqlParameter("@PageIndex", SqlDbType.Int),
					new SqlParameter("@PageSize", SqlDbType.Int),
					new SqlParameter("@SortExpression", SqlDbType.VarChar),
					new SqlParameter("@Criteria", SqlDbType.VarChar),
					new SqlParameter("@ReturnValue", SqlDbType.Int, 4, ParameterDirection.ReturnValue, false, 0, 0, String.Empty, DataRowVersion.Default, null)
				};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
			}
			
			parms[0].Value = pageIndex;
			parms[1].Value = pageSize;
			parms[2].Value = sortExpression;
			parms[3].Value = criteria;
			#endregion
            using (SqlDataReader dataReader = SqlHelper.ExecuteReader(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms))
			{
				while (dataReader.Read())
				{
					list.Add(PopulatePoll_ResourceTypeFromDataReader(dataReader));
				}
			}			
			totalRecords = (int)parms[4].Value;
			return list;
		}
		
		/// <summary>
		/// 从DataReader中读取数据到业务对象
		/// </summary>
		private Poll_ResourceType PopulatePoll_ResourceTypeFromDataReader(SqlDataReader reader)
		{
			Poll_ResourceType poll_ResourceType = new Poll_ResourceType();
			
			int resourceTypeCodeIndex = reader.GetOrdinal("ResourceTypeCode"); 
			if(!reader.IsDBNull(resourceTypeCodeIndex))
			{
				poll_ResourceType.ResourceTypeCode= reader.GetString(resourceTypeCodeIndex);
			}
			
			int resourceTypeNameIndex = reader.GetOrdinal("ResourceTypeName"); 
			if(!reader.IsDBNull(resourceTypeNameIndex))
			{
				poll_ResourceType.ResourceTypeName= reader.GetString(resourceTypeNameIndex);
			}
			
			int publicCodeIndex = reader.GetOrdinal("PublicCode"); 
			if(!reader.IsDBNull(publicCodeIndex))
			{
				poll_ResourceType.PublicCode= reader.GetGuid(publicCodeIndex);
			}
			
			return poll_ResourceType; 
		}
	}
}
