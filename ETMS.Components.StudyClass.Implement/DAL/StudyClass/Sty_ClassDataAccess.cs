//==================================================================================================
//Version 1.0, auto-generated.
//Generated By xueyb.
//Date: 2012-04-18 22:30:52.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1), a product of ZhouYonghua(Zhou_Yonghua@163.com).
//==================================================================================================

using System;
using System.Data;

using System.Data.SqlClient;
using ETMS.Utility.Data;

using ETMS.Components.StudyClass.API.Entity.StudyClass;

namespace ETMS.Components.StudyClass.Implement.DAL.StudyClass
{
    /// <summary>
    /// 班级表数据访问
    /// </summary>
    public partial class Sty_ClassDataAccess
	{				
		/// <summary>
        /// 查询项目列表 - 根据参数获取对象列表（分页，可排序）
		/// </summary>
        public DataTable GetClassItemList(int pageIndex, int pageSize, string sortExpression, string criteria, out int totalRecords)
		{
            string commandName = "Pr_Sty_Class_GetClassItemList";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
			if (parms == null)
			{
				parms = new SqlParameter[] {
					new SqlParameter("@PageIndex", SqlDbType.Int),
					new SqlParameter("@PageSize", SqlDbType.Int),
					new SqlParameter("@SortExpression", SqlDbType.VarChar),
					new SqlParameter("@Criteria", SqlDbType.VarChar),
					new SqlParameter("@ReturnValue", SqlDbType.Int, 4, ParameterDirection.ReturnValue, false, 0, 0, String.Empty, DataRowVersion.Default, null)
				};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
			}
			
			parms[0].Value = pageIndex;
			parms[1].Value = pageSize;
			parms[2].Value = sortExpression;
			parms[3].Value = criteria;
			#endregion
			DataTable dt=SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms).Tables[0];
			totalRecords = (int)parms[4].Value;
			return dt;
		}

        /// <summary>
        /// 查询项目班级列表
        /// </summary>
        public DataTable GetClassList(Guid trainingItemID)
        {
            string commandName = "Pr_Sty_Class_GetClassListByTrainingItemID";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
					new SqlParameter("@TrainingItemID", SqlDbType.UniqueIdentifier),				
				};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
            }

            parms[0].Value = trainingItemID;
            #endregion
            DataTable dt = SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms).Tables[0];
            return dt;
        }

        /// <summary>
        /// 查询我的项目班级列表
        /// </summary>
        public DataTable GetMyTrainingItemClass(Guid trainingItemID, int userID)
        {
            string commandName = "Pr_Sty_Class_GetMyTrainingItemClass";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
					new SqlParameter("@TrainingItemID", SqlDbType.UniqueIdentifier),
				    new SqlParameter("@UserID", SqlDbType.Int)
				};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
            }

            parms[0].Value = trainingItemID;
            parms[1].Value = userID;
            #endregion
            DataTable dt = SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms).Tables[0];
            return dt;
        }

        /// <summary>
        /// 获取可增加到班级的学员列表
        /// </summary>
        public DataTable ChoseClassStudentList(Guid trainingItemID, Sty_ClassStudent classStudent)
        {
            string commandName = "Pr_Sty_Class_ChoseClassStudent";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
					new SqlParameter("@TrainingItemID", SqlDbType.UniqueIdentifier),
				    new SqlParameter("@OrganizationID", SqlDbType.Int),
                    new SqlParameter("@DepartmentID", SqlDbType.Int),
                    new SqlParameter("@RankID", SqlDbType.Int),
                    new SqlParameter("@PostID", SqlDbType.Int),
                    new SqlParameter("@RealName", SqlDbType.NVarChar)
				};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
            }

            parms[0].Value = trainingItemID;
            parms[1].Value = classStudent.OrganizationID;
            parms[2].Value = classStudent.DepartmentID;
            parms[3].Value = classStudent.RankID;
            parms[4].Value = classStudent.PostID;
            parms[5].Value = classStudent.RealName;
            #endregion
            return SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms).Tables[0];
        }

        /// <summary>
        /// 查询班级学员列表
        /// </summary>
        public DataTable GetClassStudentList(Guid classID, Sty_ClassStudent classStudent)
        {
            string commandName = "Pr_Sty_ClassStudent_GetClassStudentList";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
					new SqlParameter("@ClassID", SqlDbType.UniqueIdentifier),
				    new SqlParameter("@RealName", SqlDbType.NVarChar),
                    new SqlParameter("@WorkerNo", SqlDbType.NVarChar),
                    new SqlParameter("@StudentTypeID", SqlDbType.Int)
				};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
            }

            parms[0].Value = classID;
            parms[1].Value = classStudent.RealName;
            parms[2].Value = classStudent.WorkerNo;
            parms[3].Value = classStudent.StudentTypeID;
            #endregion
            DataTable dt = SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms).Tables[0];
            return dt;
        }

        /// <summary>
        /// 获取学员班级职务
        /// </summary>
        public DataTable GetClassPositions(Guid classID, int userID)
        {
            string commandName = "dbo.Pr_Sty_ClassMonitor_GetStudentPositions";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
					new SqlParameter("@ClassID", SqlDbType.UniqueIdentifier),
                    new SqlParameter("@UserID", SqlDbType.Int)
				};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
            }

            parms[0].Value = classID;
            parms[1].Value = userID;

            #endregion

            return SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, commandName, parms).Tables[0];
        }

        /// <summary>
        /// 获取我的班级项目列表
        /// </summary>
        public DataTable GetMyClassList(int userID)
        {
            string commandName = "dbo.Pr_Sty_Class_GetMyClassProjectList";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
                    new SqlParameter("@UserID", SqlDbType.Int)
				};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
            }

            parms[0].Value = userID;

            #endregion

            return SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, commandName, parms).Tables[0];
        }

        /// <summary>
        /// 获取项目学员所在机构列表
        /// </summary>
        /// <param name="trainingItemID"></param>
        /// <returns></returns>
        public DataTable GetTrainingItemOrganizationList(Guid trainingItemID)
        {
            string commandName = "Pr_Sty_StudentSignup_GetTrainingItemOrganization";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
                    new SqlParameter("@TrainingItemID", SqlDbType.UniqueIdentifier)
				};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
            }

            parms[0].Value = trainingItemID;

            #endregion

            return SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, commandName, parms).Tables[0];
        }	
	}
}
