//==================================================================================================
//Version 1.0, auto-generated.
//Generated By running1218
//Date: 2012-04-19 20:30:48.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1)
//==================================================================================================

using System;
using System.Collections.Generic;
using System.Data;
using ETMS.Utility.Logging;
using ETMS.Components.StudyClass.API.Entity.StudyClass;
using ETMS.Components.StudyClass.Implement.DAL.StudyClass;
namespace ETMS.Components.StudyClass.Implement.BLL.StudyClass
{
    /// <summary>
    /// 班级表业务逻辑
    /// </summary>
    public partial class Sty_ClassLogic
    {
        private static readonly Sty_ClassDataAccess DAL = new Sty_ClassDataAccess();

        /// <summary>
        /// 增加
        /// </summary>
        public void Add(Sty_Class sty_Class)
        {
            DAL.Add(sty_Class);
            BizLogHelper.AddOperate(sty_Class);
        }


        /// <summary>
        /// 保存
        /// </summary>
        public void Update(Sty_Class sty_Class)
        {
            //修改前信息
            Sty_Class originalEntity = GetById(sty_Class.ClassID);
            DAL.Save(sty_Class);
            BizLogHelper.UpdateOperate(originalEntity, sty_Class);
        }

        /// <summary>
        /// 删除
        /// </summary>
        public void Remove(Guid classID)
        {
            doRemove(classID);
        }

        /// <summary>
        /// 批量删除(主键ID数组）
        /// </summary>
        public void Remove(Guid[] classIDs)
        {
#if !DEBUG
			using (TransactionScope ts = new TransactionScope())
			{
#endif
            foreach (Guid id in classIDs)
            {
                Remove(id);
            }
#if !DEBUG
				ts.Complete();
			}
#endif
        }


        /// <summary>
        /// 根据标识获取对象
        /// </summary>
        public Sty_Class GetById(Guid classID)
        {
            Sty_Class sty_Class = DAL.GetById(classID);
            if (sty_Class == null)
            {
                throw new ETMS.AppContext.BusinessException("StudyClass.Sty_Class.NotFoundException", new object[] { classID });
            }

            return sty_Class;
        }

        /// <summary>
        /// 查询数据列表分页数据
        /// </summary>
        /// <param name="pageIndex">页号</param>
        /// <param name="pageSize">页面大小</param>
        /// <param name="sortExpression">排序条件</param>
        /// <param name="criteria">筛选条件</param>
        /// <param name="totalRecords">out 记录总数</param>
        /// <returns>返回查询结果</returns>
        public DataTable GetPagedList(int pageIndex, int pageSize, string sortExpression, string criteria, out int totalRecords)
        {
            return DAL.GetPagedList(pageIndex, pageSize, sortExpression, criteria, out totalRecords);
        }

        /// <summary>
        /// 查询实体分页数据
        /// </summary>
        /// <param name="pageIndex">页号</param>
        /// <param name="pageSize">页面大小</param>
        /// <param name="sortExpression">排序条件</param>
        /// <param name="criteria">筛选条件</param>
        /// <param name="totalRecords">out 记录总数</param>
        /// <returns>返回查询结果</returns>
        public IList<Sty_Class> GetEntityList(int pageIndex, int pageSize, string sortExpression, string criteria, out int totalRecords)
        {
            return DAL.GetEntityList(pageIndex, pageSize, sortExpression, criteria, out totalRecords);
        }

    }


}

