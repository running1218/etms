//==================================================================================================
//Version 1.0, auto-generated.
//Generated By xueyb.
//Date: 2012-04-18 22:30:52.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1), a product of ZhouYonghua(Zhou_Yonghua@163.com).
//==================================================================================================

using System;
using ETMS.Utility;
using ETMS.Utility.Logging;
using ETMS.Components.StudyClass.API.Entity.StudyClass;
namespace ETMS.Components.StudyClass.Implement.BLL.StudyClass
{
    /// <summary>
    /// 班委表业务逻辑
    /// </summary>
    public partial class Sty_ClassMonitorLogic
	{
 		/// <summary>
		/// 保存操作
		/// </summary>
		public void Save(Sty_ClassMonitor sty_ClassMonitor)
		{
            try
            {
			    if(sty_ClassMonitor.ClassMonitorID.IsEmpty())
                {
                    //设置主键ID（仅类型为GUID有效，Int型则由数据库自增产生）
                    sty_ClassMonitor.ClassMonitorID=sty_ClassMonitor.ClassMonitorID.NewID();;
                    Add(sty_ClassMonitor);
                }
                else
                {
                    Update(sty_ClassMonitor);
                }
            }
           catch (System.Data.SqlClient.SqlException ex)
            {
                //枚举数据约束异常并转换为业务异常
                if (ex.Message.IndexOf("Index_U_Sty_ClassMonitorCode",StringComparison.InvariantCultureIgnoreCase) != -1)
                {
				    throw new ETMS.AppContext.BusinessException("StudyClass.Sty_ClassMonitor.CodeExists");
                }
                else if (ex.Message.IndexOf("Index_U_Sty_ClassMonitorName",StringComparison.InvariantCultureIgnoreCase) != -1)
                {
				    throw new ETMS.AppContext.BusinessException("StudyClass.Sty_ClassMonitor.NameExists");
                }
                //如果仍未处理，则抛出
                throw ex;
            } 
		} 

        /// <summary>
		/// 删除
		/// </summary>
		protected void doRemove(Guid classMonitorID)
		{
            try
            {
			     DAL.Remove(classMonitorID);
                 //记录删除日志（根据ID删除）
                 BizLogHelper.Operate(classMonitorID,"删除");
            }
           catch (System.Data.SqlClient.SqlException ex)
            {
                //枚举数据约束异常并转换为业务异常，数据已经使用
                if (ex.Message.IndexOf("FK_",StringComparison.InvariantCultureIgnoreCase) != -1)
                {
				    throw new ETMS.AppContext.BusinessException("StudyClass.Sty_ClassMonitor.DataUsed");
                } 
                //如果仍未处理，则抛出
                throw ex;
            }  
		}

        /// <summary>
        /// 根据班级学员删除班级职务
        /// </summary>
        /// <param name="classStudentID"></param>
        public void DeleteByClassStudentID(Guid classStudentID)
        {
            try
            { 
                DAL.RemoveStudentPositions(classStudentID);
            }
            catch (System.Data.SqlClient.SqlException ex)
            {
                //枚举数据约束异常并转换为业务异常，数据已经使用
                if (ex.Message.IndexOf("FK_", StringComparison.InvariantCultureIgnoreCase) != -1)
                {
                    throw new ETMS.AppContext.BusinessException("StudyClass.Sty_ClassMonitor.DataUsed");
                }
                //如果仍未处理，则抛出
                throw ex;
            }  
        }
	}	
}

