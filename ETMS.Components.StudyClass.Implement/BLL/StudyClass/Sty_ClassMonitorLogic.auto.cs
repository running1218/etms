//==================================================================================================
//Version 1.0, auto-generated.
//Generated By running1218
//Date: 2012-04-18 22:30:52.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1)
//==================================================================================================

using System;
using System.Collections.Generic;
using System.Data;
using ETMS.Utility.Logging;
using ETMS.Components.StudyClass.API.Entity.StudyClass;
using ETMS.Components.StudyClass.Implement.DAL.StudyClass;
namespace ETMS.Components.StudyClass.Implement.BLL.StudyClass
{
    /// <summary>
    /// 班委表业务逻辑
    /// </summary>
    public partial class Sty_ClassMonitorLogic
	{
		private static readonly Sty_ClassMonitorDataAccess DAL = new Sty_ClassMonitorDataAccess();
		
		/// <summary>
		/// 增加
		/// </summary>
		public void Add(Sty_ClassMonitor sty_ClassMonitor)
		{
			DAL.Add(sty_ClassMonitor);
            BizLogHelper.AddOperate(sty_ClassMonitor);
		}


		/// <summary>
		/// 保存
		/// </summary>
		public void Update(Sty_ClassMonitor sty_ClassMonitor)
		{
            //修改前信息
            Sty_ClassMonitor originalEntity=GetById(sty_ClassMonitor.ClassMonitorID);
			DAL.Save(sty_ClassMonitor);
            BizLogHelper.UpdateOperate(originalEntity,sty_ClassMonitor);
		}

		/// <summary>
		/// 删除
		/// </summary>
		public void Remove(Guid classMonitorID)
		{
            doRemove(classMonitorID);
		} 

		/// <summary>
		/// 批量删除(主键ID数组）
		/// </summary>
		public void Remove(Guid[] classMonitorIDs)
		{
#if !DEBUG
			using (TransactionScope ts = new TransactionScope())
			{
#endif
				foreach (Guid id in classMonitorIDs  )
				{
					Remove(id);
				}
#if !DEBUG
				ts.Complete();
			}
#endif
		} 
    
    
		/// <summary>
		/// 根据标识获取对象
		/// </summary>
		public Sty_ClassMonitor GetById(Guid classMonitorID)
		{
			Sty_ClassMonitor sty_ClassMonitor = DAL.GetById(classMonitorID);
			if (sty_ClassMonitor == null)
			{
				throw new ETMS.AppContext.BusinessException("StudyClass.Sty_ClassMonitor.NotFoundException",new object[]{classMonitorID});
			}
			
			return sty_ClassMonitor;
		}		
		 
		/// <summary>
        /// 查询数据列表分页数据
        /// </summary>
        /// <param name="pageIndex">页号</param>
        /// <param name="pageSize">页面大小</param>
        /// <param name="sortExpression">排序条件</param>
        /// <param name="criteria">筛选条件</param>
        /// <param name="totalRecords">out 记录总数</param>
        /// <returns>返回查询结果</returns>
		public DataTable GetPagedList(int pageIndex, int pageSize, string sortExpression, string criteria,out int totalRecords)
		{				
			return DAL.GetPagedList(pageIndex, pageSize, sortExpression, criteria, out totalRecords);
		}
				
        /// <summary>
        /// 查询实体分页数据
        /// </summary>
        /// <param name="pageIndex">页号</param>
        /// <param name="pageSize">页面大小</param>
        /// <param name="sortExpression">排序条件</param>
        /// <param name="criteria">筛选条件</param>
        /// <param name="totalRecords">out 记录总数</param>
        /// <returns>返回查询结果</returns>
		public IList<Sty_ClassMonitor> GetEntityList(int pageIndex, int pageSize, string sortExpression, string criteria,out int totalRecords)
		{				
			return DAL.GetEntityList(pageIndex, pageSize, sortExpression, criteria, out totalRecords);
		}
		
	}
	
	
}

