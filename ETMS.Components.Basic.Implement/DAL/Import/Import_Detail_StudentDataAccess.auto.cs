//==================================================================================================
//Version 1.0, auto-generated.
//Generated By xueyb.
//Date: 2012-4-2 11:05:29.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1), a product of ZhouYonghua(Zhou_Yonghua@163.com).
//==================================================================================================

using System;
using System.Collections.Generic;
using System.Data;

using System.Data.SqlClient;
using ETMS.Utility.Data;

using ETMS.Components.Basic.API.Entity.Import;

namespace ETMS.Components.Basic.Implement.DAL.Import
{
    /// <summary>
    /// 学员信息导入明细数据访问
    /// </summary>
    public partial class Import_Detail_StudentDataAccess
    {
        /// <summary>
        /// 增加
        /// </summary>
        public void Add(Import_Detail_Student import_Detail_Student)
        {
            string commandName = "dbo.Pr_Import_Detail_Student_Insert";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSWrite, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {	new SqlParameter("@DetailID", SqlDbType.Int, 4, ParameterDirection.Output, false, 0, 0, String.Empty, DataRowVersion.Default, null),
				
					new SqlParameter("@TaskID", SqlDbType.Int),
					new SqlParameter("@Status", SqlDbType.SmallInt),
					new SqlParameter("@Remark", SqlDbType.VarChar, 500),
					new SqlParameter("@LoginName", SqlDbType.VarChar, 50),
					new SqlParameter("@RealName", SqlDbType.VarChar, 50),
					new SqlParameter("@DepartmentName", SqlDbType.NVarChar, 200),
					new SqlParameter("@RankName", SqlDbType.NVarChar, 100),
					new SqlParameter("@PostName", SqlDbType.NVarChar, 100),
                    new SqlParameter("@PostTypeName", SqlDbType.NVarChar, 100),
					new SqlParameter("@Email", SqlDbType.VarChar, 100),
					new SqlParameter("@Mobile", SqlDbType.VarChar, 50),
					new SqlParameter("@WorkerNo", SqlDbType.VarChar, 50),
					new SqlParameter("@SexTypeID", SqlDbType.Int),
					new SqlParameter("@Identity", SqlDbType.NVarChar, 36),
					new SqlParameter("@TitleName", SqlDbType.NVarChar, 200),
					new SqlParameter("@Superior", SqlDbType.NVarChar, 100),
					new SqlParameter("@Birthday", SqlDbType.DateTime),
					new SqlParameter("@OfficeTelphone", SqlDbType.NVarChar, 40),
					new SqlParameter("@LastEducation", SqlDbType.NVarChar, 100),
					new SqlParameter("@Specialty", SqlDbType.NVarChar, 100),
					new SqlParameter("@JoinTime", SqlDbType.DateTime),
					new SqlParameter("@ResettlementWayName", SqlDbType.NVarChar)
					};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSWrite, commandName, parms);
            }

            parms[1].Value = import_Detail_Student.TaskID;
            parms[2].Value = import_Detail_Student.Status;
            if (import_Detail_Student.Remark != null) { parms[3].Value = import_Detail_Student.Remark; } else { parms[3].Value = DBNull.Value; }
            if (import_Detail_Student.LoginName != null) { parms[4].Value = import_Detail_Student.LoginName; } else { parms[4].Value = DBNull.Value; }
            if (import_Detail_Student.RealName != null) { parms[5].Value = import_Detail_Student.RealName; } else { parms[5].Value = DBNull.Value; }
            if (import_Detail_Student.DepartmentName != null) { parms[6].Value = import_Detail_Student.DepartmentName; } else { parms[6].Value = DBNull.Value; }
            if (import_Detail_Student.RankName != null) { parms[7].Value = import_Detail_Student.RankName; } else { parms[7].Value = DBNull.Value; }
            if (import_Detail_Student.PostName != null) { parms[8].Value = import_Detail_Student.PostName; } else { parms[8].Value = DBNull.Value; }
            if (import_Detail_Student.PostTypeName != null) { parms[9].Value = import_Detail_Student.PostTypeName; } else { parms[9].Value = DBNull.Value; }
            if (import_Detail_Student.Email != null) { parms[10].Value = import_Detail_Student.Email; } else { parms[10].Value = DBNull.Value; }
            if (import_Detail_Student.Mobile != null) { parms[11].Value = import_Detail_Student.Mobile; } else { parms[11].Value = DBNull.Value; }
            if (import_Detail_Student.WorkerNo != null) { parms[12].Value = import_Detail_Student.WorkerNo; } else { parms[12].Value = DBNull.Value; }
            parms[13].Value = import_Detail_Student.SexTypeID;
            if (import_Detail_Student.Identity != null) { parms[14].Value = import_Detail_Student.Identity; } else { parms[14].Value = DBNull.Value; }
            if (import_Detail_Student.TitleName != null) { parms[15].Value = import_Detail_Student.TitleName; } else { parms[15].Value = DBNull.Value; }
            if (import_Detail_Student.Superior != null) { parms[16].Value = import_Detail_Student.Superior; } else { parms[16].Value = DBNull.Value; }
            parms[17].Value = import_Detail_Student.Birthday;
            if (import_Detail_Student.OfficeTelphone != null) { parms[18].Value = import_Detail_Student.OfficeTelphone; } else { parms[18].Value = DBNull.Value; }
            if (import_Detail_Student.LastEducation != null) { parms[19].Value = import_Detail_Student.LastEducation; } else { parms[19].Value = DBNull.Value; }
            if (import_Detail_Student.Specialty != null) { parms[20].Value = import_Detail_Student.Specialty; } else { parms[20].Value = DBNull.Value; }
            parms[21].Value = import_Detail_Student.JoinTime;
            parms[22].Value = import_Detail_Student.ResettlementWayName;
            #endregion
            SqlHelper.ExecuteNonQuery(ConnectionString.ETMSWrite, CommandType.StoredProcedure, commandName, parms);

            import_Detail_Student.DetailID = (Int32)parms[0].Value;

        }

        /// <summary>
        /// 删除
        /// </summary>
        public void Remove(Int32 detailID)
        {
            string commandName = "dbo.Pr_Import_Detail_Student_Delete";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSWrite, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
					new SqlParameter("@DetailID", SqlDbType.Int)
				};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSWrite, commandName, parms);
            }

            parms[0].Value = detailID;

            #endregion
            SqlHelper.ExecuteNonQuery(ConnectionString.ETMSWrite, CommandType.StoredProcedure, commandName, parms);
        }

        /// <summary>
        /// 保存
        /// </summary>
        public void Save(Import_Detail_Student import_Detail_Student)
        {
            string commandName = "dbo.Pr_Import_Detail_Student_Update";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSWrite, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
					new SqlParameter("@DetailID", SqlDbType.Int),
					new SqlParameter("@TaskID", SqlDbType.Int),
					new SqlParameter("@Status", SqlDbType.SmallInt),
					new SqlParameter("@Remark", SqlDbType.VarChar, 500),
					new SqlParameter("@LoginName", SqlDbType.VarChar, 50),
					new SqlParameter("@RealName", SqlDbType.VarChar, 50),
					new SqlParameter("@DepartmentName", SqlDbType.NVarChar, 200),
					new SqlParameter("@RankName", SqlDbType.NVarChar, 100),
					new SqlParameter("@PostName", SqlDbType.NVarChar, 100),                    
					new SqlParameter("@Email", SqlDbType.VarChar, 100),
					new SqlParameter("@Mobile", SqlDbType.VarChar, 50),
					new SqlParameter("@WorkerNo", SqlDbType.VarChar, 50),
					new SqlParameter("@SexTypeID", SqlDbType.Int),
					new SqlParameter("@Identity", SqlDbType.NVarChar, 36),
					new SqlParameter("@TitleName", SqlDbType.NVarChar, 200),
					new SqlParameter("@Superior", SqlDbType.NVarChar, 100),
					new SqlParameter("@Birthday", SqlDbType.DateTime),
					new SqlParameter("@OfficeTelphone", SqlDbType.NVarChar, 40),
					new SqlParameter("@LastEducation", SqlDbType.NVarChar, 100),
					new SqlParameter("@Specialty", SqlDbType.NVarChar, 100),
					new SqlParameter("@JoinTime", SqlDbType.DateTime),
                    new SqlParameter("@PostTypeName", SqlDbType.NVarChar, 100)
				};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSWrite, commandName, parms);
            }

            parms[0].Value = import_Detail_Student.DetailID;
            parms[1].Value = import_Detail_Student.TaskID;
            parms[2].Value = import_Detail_Student.Status;
            if (import_Detail_Student.Remark != null) { parms[3].Value = import_Detail_Student.Remark; } else { parms[3].Value = DBNull.Value; }
            if (import_Detail_Student.LoginName != null) { parms[4].Value = import_Detail_Student.LoginName; } else { parms[4].Value = DBNull.Value; }
            if (import_Detail_Student.RealName != null) { parms[5].Value = import_Detail_Student.RealName; } else { parms[5].Value = DBNull.Value; }
            if (import_Detail_Student.DepartmentName != null) { parms[6].Value = import_Detail_Student.DepartmentName; } else { parms[6].Value = DBNull.Value; }
            if (import_Detail_Student.RankName != null) { parms[7].Value = import_Detail_Student.RankName; } else { parms[7].Value = DBNull.Value; }
            if (import_Detail_Student.PostName != null) { parms[8].Value = import_Detail_Student.PostName; } else { parms[8].Value = DBNull.Value; }
            if (import_Detail_Student.Email != null) { parms[9].Value = import_Detail_Student.Email; } else { parms[9].Value = DBNull.Value; }
            if (import_Detail_Student.Mobile != null) { parms[10].Value = import_Detail_Student.Mobile; } else { parms[10].Value = DBNull.Value; }
            if (import_Detail_Student.WorkerNo != null) { parms[11].Value = import_Detail_Student.WorkerNo; } else { parms[11].Value = DBNull.Value; }
            parms[12].Value = import_Detail_Student.SexTypeID;
            if (import_Detail_Student.Identity != null) { parms[13].Value = import_Detail_Student.Identity; } else { parms[13].Value = DBNull.Value; }
            if (import_Detail_Student.TitleName != null) { parms[14].Value = import_Detail_Student.TitleName; } else { parms[14].Value = DBNull.Value; }
            if (import_Detail_Student.Superior != null) { parms[15].Value = import_Detail_Student.Superior; } else { parms[15].Value = DBNull.Value; }
            parms[16].Value = import_Detail_Student.Birthday;
            if (import_Detail_Student.OfficeTelphone != null) { parms[17].Value = import_Detail_Student.OfficeTelphone; } else { parms[17].Value = DBNull.Value; }
            if (import_Detail_Student.LastEducation != null) { parms[18].Value = import_Detail_Student.LastEducation; } else { parms[18].Value = DBNull.Value; }
            if (import_Detail_Student.Specialty != null) { parms[19].Value = import_Detail_Student.Specialty; } else { parms[19].Value = DBNull.Value; }
            parms[20].Value = import_Detail_Student.JoinTime;
            if (import_Detail_Student.PostTypeName != null) { parms[21].Value = import_Detail_Student.PostTypeName; } else { parms[21].Value = DBNull.Value; }
            #endregion
            SqlHelper.ExecuteNonQuery(ConnectionString.ETMSWrite, CommandType.StoredProcedure, commandName, parms);
        }

        /// <summary>
        /// 根据标识获取对象
        /// </summary>
        public Import_Detail_Student GetById(Int32 detailID)
        {
            Import_Detail_Student import_Detail_Student = null;

            string commandName = "dbo.Pr_Import_Detail_Student_GetByPK";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
					new SqlParameter("@DetailID", SqlDbType.Int)
				};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
            }

            parms[0].Value = detailID;

            #endregion
            using (SqlDataReader dataReader = SqlHelper.ExecuteReader(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms))
            {
                if (dataReader.Read())
                {
                    import_Detail_Student = PopulateImport_Detail_StudentFromDataReader(dataReader);
                }
            }

            return import_Detail_Student;
        }

        /// <summary>
        /// 根据参数获取对象列表（分页，可排序）
        /// </summary>
        public DataTable GetPagedList(int pageIndex, int pageSize, string sortExpression, string criteria, out int totalRecords)
        {
            string commandName = "dbo.Pr_Import_Detail_Student_GetPagedList";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
					new SqlParameter("@PageIndex", SqlDbType.Int),
					new SqlParameter("@PageSize", SqlDbType.Int),
					new SqlParameter("@SortExpression", SqlDbType.VarChar),
					new SqlParameter("@Criteria", SqlDbType.VarChar),
					new SqlParameter("@ReturnValue", SqlDbType.Int, 4, ParameterDirection.ReturnValue, false, 0, 0, String.Empty, DataRowVersion.Default, null)
				};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
            }

            parms[0].Value = pageIndex;
            parms[1].Value = pageSize;
            parms[2].Value = sortExpression;
            parms[3].Value = criteria;
            #endregion
            DataTable dt = SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms).Tables[0];
            totalRecords = (int)parms[4].Value;
            return dt;
        }

        /// <summary>
        /// 根据参数获取对象列表（分页，可排序）
        /// </summary>
        public IList<Import_Detail_Student> GetEntityList(int pageIndex, int pageSize, string sortExpression, string criteria, out int totalRecords)
        {
            IList<Import_Detail_Student> list = new List<Import_Detail_Student>();
            string commandName = "dbo.Pr_Import_Detail_Student_GetPagedList";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
					new SqlParameter("@PageIndex", SqlDbType.Int),
					new SqlParameter("@PageSize", SqlDbType.Int),
					new SqlParameter("@SortExpression", SqlDbType.VarChar),
					new SqlParameter("@Criteria", SqlDbType.VarChar),
					new SqlParameter("@ReturnValue", SqlDbType.Int, 4, ParameterDirection.ReturnValue, false, 0, 0, String.Empty, DataRowVersion.Default, null)
				};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
            }

            parms[0].Value = pageIndex;
            parms[1].Value = pageSize;
            parms[2].Value = sortExpression;
            parms[3].Value = criteria;
            #endregion
            using (SqlDataReader dataReader = SqlHelper.ExecuteReader(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms))
            {
                while (dataReader.Read())
                {
                    list.Add(PopulateImport_Detail_StudentFromDataReader(dataReader));
                }
            }
            totalRecords = (int)parms[4].Value;
            return list;
        }

        /// <summary>
        /// 从DataReader中读取数据到业务对象
        /// </summary>
        private Import_Detail_Student PopulateImport_Detail_StudentFromDataReader(SqlDataReader reader)
        {
            Import_Detail_Student import_Detail_Student = new Import_Detail_Student();

            int detailIDIndex = reader.GetOrdinal("DetailID");
            if (!reader.IsDBNull(detailIDIndex))
            {
                import_Detail_Student.DetailID = reader.GetInt32(detailIDIndex);
            }

            int taskIDIndex = reader.GetOrdinal("TaskID");
            if (!reader.IsDBNull(taskIDIndex))
            {
                import_Detail_Student.TaskID = reader.GetInt32(taskIDIndex);
            }

            int statusIndex = reader.GetOrdinal("Status");
            if (!reader.IsDBNull(statusIndex))
            {
                import_Detail_Student.Status = reader.GetInt16(statusIndex);
            }

            int remarkIndex = reader.GetOrdinal("Remark");
            if (!reader.IsDBNull(remarkIndex))
            {
                import_Detail_Student.Remark = reader.GetString(remarkIndex);
            }

            int loginNameIndex = reader.GetOrdinal("LoginName");
            if (!reader.IsDBNull(loginNameIndex))
            {
                import_Detail_Student.LoginName = reader.GetString(loginNameIndex);
            }

            int realNameIndex = reader.GetOrdinal("RealName");
            if (!reader.IsDBNull(realNameIndex))
            {
                import_Detail_Student.RealName = reader.GetString(realNameIndex);
            }

            int departmentNameIndex = reader.GetOrdinal("DepartmentName");
            if (!reader.IsDBNull(departmentNameIndex))
            {
                import_Detail_Student.DepartmentName = reader.GetString(departmentNameIndex);
            }

            int rankNameIndex = reader.GetOrdinal("RankName");
            if (!reader.IsDBNull(rankNameIndex))
            {
                import_Detail_Student.RankName = reader.GetString(rankNameIndex);
            }

            int postNameIndex = reader.GetOrdinal("PostName");
            if (!reader.IsDBNull(postNameIndex))
            {
                import_Detail_Student.PostName = reader.GetString(postNameIndex);
            }
            int postTypeNameIndex = reader.GetOrdinal("PostTypeName");
            if (!reader.IsDBNull(postTypeNameIndex))
            {
                import_Detail_Student.PostTypeName = reader.GetString(postTypeNameIndex);
            }

            int emailIndex = reader.GetOrdinal("Email");
            if (!reader.IsDBNull(emailIndex))
            {
                import_Detail_Student.Email = reader.GetString(emailIndex);
            }

            int mobileIndex = reader.GetOrdinal("Mobile");
            if (!reader.IsDBNull(mobileIndex))
            {
                import_Detail_Student.Mobile = reader.GetString(mobileIndex);
            }

            int workerNoIndex = reader.GetOrdinal("WorkerNo");
            if (!reader.IsDBNull(workerNoIndex))
            {
                import_Detail_Student.WorkerNo = reader.GetString(workerNoIndex);
            }

            int sexTypeIDIndex = reader.GetOrdinal("SexTypeID");
            if (!reader.IsDBNull(sexTypeIDIndex))
            {
                import_Detail_Student.SexTypeID = reader.GetInt32(sexTypeIDIndex);
            }

            int identityIndex = reader.GetOrdinal("Identity");
            if (!reader.IsDBNull(identityIndex))
            {
                import_Detail_Student.Identity = reader.GetString(identityIndex);
            }

            int titleNameIndex = reader.GetOrdinal("TitleName");
            if (!reader.IsDBNull(titleNameIndex))
            {
                import_Detail_Student.TitleName = reader.GetString(titleNameIndex);
            }

            int superiorIndex = reader.GetOrdinal("Superior");
            if (!reader.IsDBNull(superiorIndex))
            {
                import_Detail_Student.Superior = reader.GetString(superiorIndex);
            }

            int birthdayIndex = reader.GetOrdinal("Birthday");
            if (!reader.IsDBNull(birthdayIndex))
            {
                import_Detail_Student.Birthday = reader.GetDateTime(birthdayIndex);
            }

            int officeTelphoneIndex = reader.GetOrdinal("OfficeTelphone");
            if (!reader.IsDBNull(officeTelphoneIndex))
            {
                import_Detail_Student.OfficeTelphone = reader.GetString(officeTelphoneIndex);
            }

            int lastEducationIndex = reader.GetOrdinal("LastEducation");
            if (!reader.IsDBNull(lastEducationIndex))
            {
                import_Detail_Student.LastEducation = reader.GetString(lastEducationIndex);
            }

            int specialtyIndex = reader.GetOrdinal("Specialty");
            if (!reader.IsDBNull(specialtyIndex))
            {
                import_Detail_Student.Specialty = reader.GetString(specialtyIndex);
            }

            int joinTimeIndex = reader.GetOrdinal("JoinTime");
            if (!reader.IsDBNull(joinTimeIndex))
            {
                import_Detail_Student.JoinTime = reader.GetDateTime(joinTimeIndex);
            }
            int resettlementWayNameIndex = reader.GetOrdinal("ResettlementWayName");
            if (!reader.IsDBNull(resettlementWayNameIndex))
            {
                import_Detail_Student.ResettlementWayName = reader.GetString(resettlementWayNameIndex);
            }

            return import_Detail_Student;
        }
    }
}
