//==================================================================================================
//Version 1.0, auto-generated.
//Generated By huangzhf.
//Date: 2012-5-20 16:32:58.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1)
//==================================================================================================

using System;
using System.Collections.Generic;
using System.Data;

using System.Data.SqlClient;
using ETMS.Utility.Data;

using ETMS.Components.Basic.API.Entity.Import;

namespace ETMS.Components.Basic.Implement.DAL.Import
{
    /// <summary>
    /// 学员课程成绩导入明细表数据访问
    /// </summary>
    public partial class Import_StudentCourseGradeDataAccess
	{
		/// <summary>
		/// 增加
		/// </summary>
		public void Add(Import_StudentCourseGrade import_StudentCourseGrade)
		{
			string commandName = "dbo.Pr_Import_StudentCourseGrade_Insert";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSWrite, commandName);
			if (parms == null)
			{
				parms = new SqlParameter[] {	new SqlParameter("@DetailID", SqlDbType.Int, 4, ParameterDirection.Output, false, 0, 0, String.Empty, DataRowVersion.Default, null),
				
					new SqlParameter("@TaskID", SqlDbType.Int),
					new SqlParameter("@Status", SqlDbType.SmallInt),
					new SqlParameter("@Remark", SqlDbType.NVarChar, 1000),
					new SqlParameter("@UserID", SqlDbType.Int),
					new SqlParameter("@LoginName", SqlDbType.NVarChar, 100),
					new SqlParameter("@RealName", SqlDbType.NVarChar, 100),
					new SqlParameter("@SumGrade", SqlDbType.NVarChar, 100),
					new SqlParameter("@TrainingItemID", SqlDbType.NVarChar, 100),
					new SqlParameter("@ItemCode", SqlDbType.NVarChar, 100),
					new SqlParameter("@ItemName", SqlDbType.NVarChar, 200),
					new SqlParameter("@CourseID", SqlDbType.NVarChar, 100),
					new SqlParameter("@CourseCode", SqlDbType.NVarChar, 100),
					new SqlParameter("@CourseName", SqlDbType.NVarChar, 200),
					new SqlParameter("@StudentCourseID", SqlDbType.NVarChar, 100),
					new SqlParameter("@OrgID", SqlDbType.Int)
					};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSWrite, commandName, parms);
			}
			
			parms[1].Value = import_StudentCourseGrade.TaskID;
			parms[2].Value = import_StudentCourseGrade.Status;
			if (import_StudentCourseGrade.Remark!= null){ parms[3].Value = import_StudentCourseGrade.Remark; } else { parms[3].Value = DBNull.Value; }
			parms[4].Value = import_StudentCourseGrade.UserID;
			if (import_StudentCourseGrade.LoginName!= null){ parms[5].Value = import_StudentCourseGrade.LoginName; } else { parms[5].Value = DBNull.Value; }
			if (import_StudentCourseGrade.RealName!= null){ parms[6].Value = import_StudentCourseGrade.RealName; } else { parms[6].Value = DBNull.Value; }
			if (import_StudentCourseGrade.SumGrade!= null){ parms[7].Value = import_StudentCourseGrade.SumGrade; } else { parms[7].Value = DBNull.Value; }
			if (import_StudentCourseGrade.TrainingItemID!= null){ parms[8].Value = import_StudentCourseGrade.TrainingItemID; } else { parms[8].Value = DBNull.Value; }
			if (import_StudentCourseGrade.ItemCode!= null){ parms[9].Value = import_StudentCourseGrade.ItemCode; } else { parms[9].Value = DBNull.Value; }
			if (import_StudentCourseGrade.ItemName!= null){ parms[10].Value = import_StudentCourseGrade.ItemName; } else { parms[10].Value = DBNull.Value; }
			if (import_StudentCourseGrade.CourseID!= null){ parms[11].Value = import_StudentCourseGrade.CourseID; } else { parms[11].Value = DBNull.Value; }
			if (import_StudentCourseGrade.CourseCode!= null){ parms[12].Value = import_StudentCourseGrade.CourseCode; } else { parms[12].Value = DBNull.Value; }
			if (import_StudentCourseGrade.CourseName!= null){ parms[13].Value = import_StudentCourseGrade.CourseName; } else { parms[13].Value = DBNull.Value; }
			if (import_StudentCourseGrade.StudentCourseID!= null){ parms[14].Value = import_StudentCourseGrade.StudentCourseID; } else { parms[14].Value = DBNull.Value; }
			parms[15].Value = import_StudentCourseGrade.OrgID;
			#endregion
			SqlHelper.ExecuteNonQuery(ConnectionString.ETMSWrite, CommandType.StoredProcedure, commandName, parms);
			
			import_StudentCourseGrade.DetailID = (Int32)parms[0].Value;
			
		}
		
		/// <summary>
		/// 删除
		/// </summary>
		public void Remove(Int32 detailID)
		{
			string commandName = "dbo.Pr_Import_StudentCourseGrade_Delete";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSWrite, commandName);
			if (parms == null)
			{
				parms = new SqlParameter[] {
					new SqlParameter("@DetailID", SqlDbType.Int)
				};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSWrite, commandName, parms);
			}
			
			parms[0].Value = detailID;
			
			#endregion
			SqlHelper.ExecuteNonQuery(ConnectionString.ETMSWrite, CommandType.StoredProcedure, commandName, parms);
		}
		
		/// <summary>
		/// 保存
		/// </summary>
		public void Save(Import_StudentCourseGrade import_StudentCourseGrade)
		{
			string commandName = "dbo.Pr_Import_StudentCourseGrade_Update";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSWrite, commandName);
			if (parms == null)
			{
				parms = new SqlParameter[] {
					new SqlParameter("@DetailID", SqlDbType.Int),
					new SqlParameter("@TaskID", SqlDbType.Int),
					new SqlParameter("@Status", SqlDbType.SmallInt),
					new SqlParameter("@Remark", SqlDbType.NVarChar, 1000),
					new SqlParameter("@UserID", SqlDbType.Int),
					new SqlParameter("@LoginName", SqlDbType.NVarChar, 100),
					new SqlParameter("@RealName", SqlDbType.NVarChar, 100),
					new SqlParameter("@SumGrade", SqlDbType.NVarChar, 100),
					new SqlParameter("@TrainingItemID", SqlDbType.NVarChar, 100),
					new SqlParameter("@ItemCode", SqlDbType.NVarChar, 100),
					new SqlParameter("@ItemName", SqlDbType.NVarChar, 200),
					new SqlParameter("@CourseID", SqlDbType.NVarChar, 100),
					new SqlParameter("@CourseCode", SqlDbType.NVarChar, 100),
					new SqlParameter("@CourseName", SqlDbType.NVarChar, 200),
					new SqlParameter("@StudentCourseID", SqlDbType.NVarChar, 100),
					new SqlParameter("@OrgID", SqlDbType.Int)
				};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSWrite, commandName, parms);
			}
			
			parms[0].Value = import_StudentCourseGrade.DetailID;
			parms[1].Value = import_StudentCourseGrade.TaskID;
			parms[2].Value = import_StudentCourseGrade.Status;
			if (import_StudentCourseGrade.Remark!= null){ parms[3].Value = import_StudentCourseGrade.Remark; } else { parms[3].Value = DBNull.Value; }
			parms[4].Value = import_StudentCourseGrade.UserID;
			if (import_StudentCourseGrade.LoginName!= null){ parms[5].Value = import_StudentCourseGrade.LoginName; } else { parms[5].Value = DBNull.Value; }
			if (import_StudentCourseGrade.RealName!= null){ parms[6].Value = import_StudentCourseGrade.RealName; } else { parms[6].Value = DBNull.Value; }
			if (import_StudentCourseGrade.SumGrade!= null){ parms[7].Value = import_StudentCourseGrade.SumGrade; } else { parms[7].Value = DBNull.Value; }
			if (import_StudentCourseGrade.TrainingItemID!= null){ parms[8].Value = import_StudentCourseGrade.TrainingItemID; } else { parms[8].Value = DBNull.Value; }
			if (import_StudentCourseGrade.ItemCode!= null){ parms[9].Value = import_StudentCourseGrade.ItemCode; } else { parms[9].Value = DBNull.Value; }
			if (import_StudentCourseGrade.ItemName!= null){ parms[10].Value = import_StudentCourseGrade.ItemName; } else { parms[10].Value = DBNull.Value; }
			if (import_StudentCourseGrade.CourseID!= null){ parms[11].Value = import_StudentCourseGrade.CourseID; } else { parms[11].Value = DBNull.Value; }
			if (import_StudentCourseGrade.CourseCode!= null){ parms[12].Value = import_StudentCourseGrade.CourseCode; } else { parms[12].Value = DBNull.Value; }
			if (import_StudentCourseGrade.CourseName!= null){ parms[13].Value = import_StudentCourseGrade.CourseName; } else { parms[13].Value = DBNull.Value; }
			if (import_StudentCourseGrade.StudentCourseID!= null){ parms[14].Value = import_StudentCourseGrade.StudentCourseID; } else { parms[14].Value = DBNull.Value; }
			parms[15].Value = import_StudentCourseGrade.OrgID;
			#endregion
			SqlHelper.ExecuteNonQuery(ConnectionString.ETMSWrite, CommandType.StoredProcedure, commandName, parms);
		}
		
		/// <summary>
		/// 根据标识获取对象
		/// </summary>
		public Import_StudentCourseGrade GetById(Int32 detailID)
		{
			Import_StudentCourseGrade import_StudentCourseGrade = null;
			
			string commandName = "dbo.Pr_Import_StudentCourseGrade_GetByPK";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
			if (parms == null)
			{
				parms = new SqlParameter[] {
					new SqlParameter("@DetailID", SqlDbType.Int)
				};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
			}
			
			parms[0].Value = detailID;
			
			#endregion
			using (SqlDataReader dataReader = SqlHelper.ExecuteReader(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms))
			{
				if (dataReader.Read())
				{
					import_StudentCourseGrade = PopulateImport_StudentCourseGradeFromDataReader(dataReader);
				}
			}
			
			return import_StudentCourseGrade;
		}				
		
		/// <summary>
		/// 根据参数获取对象列表（分页，可排序）
		/// </summary>
		public DataTable GetPagedList(int pageIndex, int pageSize, string sortExpression, string criteria, out int totalRecords)
		{			
			string commandName = "dbo.Pr_Import_StudentCourseGrade_GetPagedList";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
			if (parms == null)
			{
				parms = new SqlParameter[] {
					new SqlParameter("@PageIndex", SqlDbType.Int),
					new SqlParameter("@PageSize", SqlDbType.Int),
					new SqlParameter("@SortExpression", SqlDbType.VarChar),
					new SqlParameter("@Criteria", SqlDbType.VarChar),
					new SqlParameter("@ReturnValue", SqlDbType.Int, 4, ParameterDirection.ReturnValue, false, 0, 0, String.Empty, DataRowVersion.Default, null)
				};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
			}
			
			parms[0].Value = pageIndex;
			parms[1].Value = pageSize;
			parms[2].Value = sortExpression;
			parms[3].Value = criteria;
			#endregion
			DataTable dt=SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms).Tables[0];
			totalRecords = (int)parms[4].Value;
			return dt;
		}
		
	    /// <summary>
		/// 根据参数获取对象列表（分页，可排序）
		/// </summary>
		public IList<Import_StudentCourseGrade> GetEntityList(int pageIndex, int pageSize, string sortExpression, string criteria, out int totalRecords)
		{			
            IList<Import_StudentCourseGrade> list=new List<Import_StudentCourseGrade>();
			string commandName = "dbo.Pr_Import_StudentCourseGrade_GetPagedList";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
			if (parms == null)
			{
				parms = new SqlParameter[] {
					new SqlParameter("@PageIndex", SqlDbType.Int),
					new SqlParameter("@PageSize", SqlDbType.Int),
					new SqlParameter("@SortExpression", SqlDbType.VarChar),
					new SqlParameter("@Criteria", SqlDbType.VarChar),
					new SqlParameter("@ReturnValue", SqlDbType.Int, 4, ParameterDirection.ReturnValue, false, 0, 0, String.Empty, DataRowVersion.Default, null)
				};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
			}
			
			parms[0].Value = pageIndex;
			parms[1].Value = pageSize;
			parms[2].Value = sortExpression;
			parms[3].Value = criteria;
			#endregion
            using (SqlDataReader dataReader = SqlHelper.ExecuteReader(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms))
			{
				while (dataReader.Read())
				{
					list.Add(PopulateImport_StudentCourseGradeFromDataReader(dataReader));
				}
			}			
			totalRecords = (int)parms[4].Value;
			return list;
		}
		
		/// <summary>
		/// 从DataReader中读取数据到业务对象
		/// </summary>
		private Import_StudentCourseGrade PopulateImport_StudentCourseGradeFromDataReader(SqlDataReader reader)
		{
			Import_StudentCourseGrade import_StudentCourseGrade = new Import_StudentCourseGrade();
			
			int detailIDIndex = reader.GetOrdinal("DetailID"); 
			if(!reader.IsDBNull(detailIDIndex))
			{
				import_StudentCourseGrade.DetailID= reader.GetInt32(detailIDIndex);
			}
			
			int taskIDIndex = reader.GetOrdinal("TaskID"); 
			if(!reader.IsDBNull(taskIDIndex))
			{
				import_StudentCourseGrade.TaskID= reader.GetInt32(taskIDIndex);
			}
			
			int statusIndex = reader.GetOrdinal("Status"); 
			if(!reader.IsDBNull(statusIndex))
			{
				import_StudentCourseGrade.Status= reader.GetInt16(statusIndex);
			}
			
			int remarkIndex = reader.GetOrdinal("Remark"); 
			if(!reader.IsDBNull(remarkIndex))
			{
				import_StudentCourseGrade.Remark= reader.GetString(remarkIndex);
			}
			
			int userIDIndex = reader.GetOrdinal("UserID"); 
			if(!reader.IsDBNull(userIDIndex))
			{
				import_StudentCourseGrade.UserID= reader.GetInt32(userIDIndex);
			}
			
			int loginNameIndex = reader.GetOrdinal("LoginName"); 
			if(!reader.IsDBNull(loginNameIndex))
			{
				import_StudentCourseGrade.LoginName= reader.GetString(loginNameIndex);
			}
			
			int realNameIndex = reader.GetOrdinal("RealName"); 
			if(!reader.IsDBNull(realNameIndex))
			{
				import_StudentCourseGrade.RealName= reader.GetString(realNameIndex);
			}
			
			int sumGradeIndex = reader.GetOrdinal("SumGrade"); 
			if(!reader.IsDBNull(sumGradeIndex))
			{
				import_StudentCourseGrade.SumGrade= reader.GetString(sumGradeIndex);
			}
			
			int trainingItemIDIndex = reader.GetOrdinal("TrainingItemID"); 
			if(!reader.IsDBNull(trainingItemIDIndex))
			{
				import_StudentCourseGrade.TrainingItemID= reader.GetString(trainingItemIDIndex);
			}
			
			int itemCodeIndex = reader.GetOrdinal("ItemCode"); 
			if(!reader.IsDBNull(itemCodeIndex))
			{
				import_StudentCourseGrade.ItemCode= reader.GetString(itemCodeIndex);
			}
			
			int itemNameIndex = reader.GetOrdinal("ItemName"); 
			if(!reader.IsDBNull(itemNameIndex))
			{
				import_StudentCourseGrade.ItemName= reader.GetString(itemNameIndex);
			}
			
			int courseIDIndex = reader.GetOrdinal("CourseID"); 
			if(!reader.IsDBNull(courseIDIndex))
			{
				import_StudentCourseGrade.CourseID= reader.GetString(courseIDIndex);
			}
			
			int courseCodeIndex = reader.GetOrdinal("CourseCode"); 
			if(!reader.IsDBNull(courseCodeIndex))
			{
				import_StudentCourseGrade.CourseCode= reader.GetString(courseCodeIndex);
			}
			
			int courseNameIndex = reader.GetOrdinal("CourseName"); 
			if(!reader.IsDBNull(courseNameIndex))
			{
				import_StudentCourseGrade.CourseName= reader.GetString(courseNameIndex);
			}
			
			int studentCourseIDIndex = reader.GetOrdinal("StudentCourseID"); 
			if(!reader.IsDBNull(studentCourseIDIndex))
			{
				import_StudentCourseGrade.StudentCourseID= reader.GetString(studentCourseIDIndex);
			}
			
			int orgIDIndex = reader.GetOrdinal("OrgID"); 
			if(!reader.IsDBNull(orgIDIndex))
			{
				import_StudentCourseGrade.OrgID= reader.GetInt32(orgIDIndex);
			}
			
			return import_StudentCourseGrade; 
		}
	}
}
