//==================================================================================================
//Version 1.0, auto-generated.
//Generated By zhangyh.
//Date: 2016-11-03 13:14:43.
//==================================================================================================

using System;
using System.Data;

using System.Data.SqlClient;
using ETMS.Utility.Data;
using ETMS.Components.Basic.API.Entity.Teacher;

namespace ETMS.Components.Basic.Implement.DAL.Teacher
{
    /// <summary>
    /// 课程表数据访问
    /// </summary>
    public partial class Rec_TeacherDataAccess
    {
		/// <summary>
		/// 增加
		/// </summary>
		public void Add(Rec_Teacher rec_Teacher)
		{
			string commandName = "dbo.Pr_Recommend_Teacher_Insert";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSWrite, commandName);
			if (parms == null)
			{
                parms = new SqlParameter[] {
					new SqlParameter("@TeacherID", SqlDbType.Int),
                    new SqlParameter("@IsTop", SqlDbType.Bit),
                    new SqlParameter("@Sort", SqlDbType.Int),
                    new SqlParameter("@CreateTime", SqlDbType.DateTime),
                    new SqlParameter("@CreateUserID", SqlDbType.Int),
                    new SqlParameter("@CreateUser", SqlDbType.NVarChar, 128),
                    new SqlParameter("@ModifyTime", SqlDbType.DateTime),
                    new SqlParameter("@ModifyUser", SqlDbType.NVarChar, 128)
					};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSWrite, commandName, parms);
			}
			
			parms[0].Value = rec_Teacher.TeacherID;
			parms[1].Value = rec_Teacher.IsTop;
			parms[2].Value = rec_Teacher.Sort;
            parms[3].Value = rec_Teacher.CreateTime;
            parms[4].Value = rec_Teacher.CreateUserID;
            if (rec_Teacher.CreateUser != null) { parms[5].Value = rec_Teacher.CreateUser; } else { parms[5].Value = DBNull.Value; }
            parms[6].Value = rec_Teacher.ModifyTime;
            if (rec_Teacher.ModifyUser != null) { parms[7].Value = rec_Teacher.ModifyUser; } else { parms[7].Value = DBNull.Value; }
			#endregion
			SqlHelper.ExecuteNonQuery(ConnectionString.ETMSWrite, CommandType.StoredProcedure, commandName, parms);
			
		}
		
		/// <summary>
		/// 删除
		/// </summary>
		public void Remove(int teacherID)
		{
			string commandName = "dbo.Pr_Recommend_Teacher_Delete";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSWrite, commandName);
			if (parms == null)
			{
				parms = new SqlParameter[] {
					new SqlParameter("@TeacherID", SqlDbType.Int)
				};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSWrite, commandName, parms);
			}
			
			parms[0].Value = teacherID;
			
			#endregion
			SqlHelper.ExecuteNonQuery(ConnectionString.ETMSWrite, CommandType.StoredProcedure, commandName, parms);
		}
		
		/// <summary>
		/// 修改
		/// </summary>
		public void Update(Rec_Teacher rec_Teacher)
		{
			string commandName = "dbo.Pr_Recommend_Teacher_Update";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSWrite, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
                    new SqlParameter("@TeacherID", SqlDbType.Int),
                    new SqlParameter("@IsTop", SqlDbType.Bit),
                    new SqlParameter("@Sort", SqlDbType.Int),
                    new SqlParameter("@CreateTime", SqlDbType.DateTime),
                    new SqlParameter("@CreateUserID", SqlDbType.Int),
                    new SqlParameter("@CreateUser", SqlDbType.NVarChar, 128),
                    new SqlParameter("@ModifyTime", SqlDbType.DateTime),
                    new SqlParameter("@ModifyUser", SqlDbType.NVarChar, 128)
                    };
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSWrite, commandName, parms);
            }

            parms[0].Value = rec_Teacher.TeacherID;
            parms[1].Value = rec_Teacher.IsTop;
            parms[2].Value = rec_Teacher.Sort;
            parms[3].Value = rec_Teacher.CreateTime;
            parms[4].Value = rec_Teacher.CreateUserID;
            if (rec_Teacher.CreateUser != null) { parms[5].Value = rec_Teacher.CreateUser; } else { parms[5].Value = DBNull.Value; }
            parms[6].Value = rec_Teacher.ModifyTime;
            if (rec_Teacher.ModifyUser != null) { parms[7].Value = rec_Teacher.ModifyUser; } else { parms[7].Value = DBNull.Value; }
            #endregion
            SqlHelper.ExecuteNonQuery(ConnectionString.ETMSWrite, CommandType.StoredProcedure, commandName, parms);
		}
		
		/// <summary>
		/// 根据标识获取对象
		/// </summary>
		public Rec_Teacher GetById(int teacherID)
		{
			Rec_Teacher rec_Teacher = null;
			
			string commandName = "dbo.Pr_Recommend_Teacher_GetByPk";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
			if (parms == null)
			{
				parms = new SqlParameter[] {
					new SqlParameter("@TeacherID", SqlDbType.Int)
				};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
			}
			
			parms[0].Value = teacherID;
			
			#endregion
			using (SqlDataReader dataReader = SqlHelper.ExecuteReader(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms))
			{
				if (dataReader.Read())
				{
                    rec_Teacher = PopulateRes_TeacherFromDataReader(dataReader);
				}
			}
			
			return rec_Teacher;
		}
		
		/// <summary>
		/// 根据参数获取对象列表（分页，可排序）
		/// </summary>
        public DataTable GetPagedList(int pageIndex, int pageSize, string sortExpression, string criteria, out int totalRecords)
		{
            string commandName = "dbo.Pr_Recommend_Teacher_GetPagedList";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
			if (parms == null)
			{
				parms = new SqlParameter[] {
					new SqlParameter("@PageIndex", SqlDbType.Int),
					new SqlParameter("@PageSize", SqlDbType.Int),
					new SqlParameter("@SortExpression", SqlDbType.NVarChar),
					new SqlParameter("@Criteria", SqlDbType.NVarChar),
					new SqlParameter("@ReturnValue", SqlDbType.Int, 4, ParameterDirection.ReturnValue, false, 0, 0, String.Empty, DataRowVersion.Default, null)
				};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
			}
			
			parms[0].Value = pageIndex;
			parms[1].Value = pageSize;
			parms[2].Value = sortExpression;
			parms[3].Value = criteria;
			#endregion
			DataTable dt=SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms).Tables[0];
			totalRecords = (int)parms[4].Value;
			return dt;
		}        
		
		/// <summary>
		/// 从DataReader中读取数据到业务对象
		/// </summary>
		private Rec_Teacher PopulateRes_TeacherFromDataReader(SqlDataReader reader)
		{
			Rec_Teacher tec_Teacher = new Rec_Teacher();
			
			int teacherIDIndex = reader.GetOrdinal("TeacherID"); 
			if(!reader.IsDBNull(teacherIDIndex))
			{
                tec_Teacher.TeacherID= reader.GetInt32(teacherIDIndex);
			}
            int isTopIndex = reader.GetOrdinal("IsTop");
            if (!reader.IsDBNull(isTopIndex))
            {
                tec_Teacher.IsTop = reader.GetBoolean(isTopIndex);
            }

            int sortIndex = reader.GetOrdinal("Sort");
            if (!reader.IsDBNull(sortIndex))
            {
                tec_Teacher.Sort = reader.GetInt32(sortIndex);
            }

            int createTimeIndex = reader.GetOrdinal("CreateTime");
            if (!reader.IsDBNull(createTimeIndex))
            {
                tec_Teacher.CreateTime = reader.GetDateTime(createTimeIndex);
            }

            int createUserIDIndex = reader.GetOrdinal("CreateUserID");
            if (!reader.IsDBNull(createUserIDIndex))
            {
                tec_Teacher.CreateUserID = reader.GetInt32(createUserIDIndex);
            }

            int createUserIndex = reader.GetOrdinal("CreateUser");
            if (!reader.IsDBNull(createUserIndex))
            {
                tec_Teacher.CreateUser = reader.GetString(createUserIndex);
            }

            int modifyTimeIndex = reader.GetOrdinal("ModifyTime");
            if (!reader.IsDBNull(modifyTimeIndex))
            {
                tec_Teacher.ModifyTime = reader.GetDateTime(modifyTimeIndex);
            }

            int modifyUserIndex = reader.GetOrdinal("ModifyUser");
            if (!reader.IsDBNull(modifyUserIndex))
            {
                tec_Teacher.ModifyUser = reader.GetString(modifyUserIndex);
            }
            return tec_Teacher; 
		}

        /// <summary>
        /// 获取未推荐的讲师（分页，可排序）
        /// </summary>
        public DataTable GetNoRecommendTeacherPagedList(int pageIndex, int pageSize, string sortExpression, string criteria, out int totalRecords)
        {
            string commandName = "dbo.Pr_Rec_Teacher_GetQueryList";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
                    new SqlParameter("@PageIndex", SqlDbType.Int),
                    new SqlParameter("@PageSize", SqlDbType.Int),
                    new SqlParameter("@SortExpression", SqlDbType.NVarChar),
                    new SqlParameter("@Criteria", SqlDbType.NVarChar),
                    new SqlParameter("@ReturnValue", SqlDbType.Int, 4, ParameterDirection.ReturnValue, false, 0, 0, String.Empty, DataRowVersion.Default, null)
                };
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
            }

            parms[0].Value = pageIndex;
            parms[1].Value = pageSize;
            parms[2].Value = sortExpression;
            parms[3].Value = criteria;
            #endregion
            DataTable dt = SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms).Tables[0];
            totalRecords = (int)parms[4].Value;
            return dt;
        }
        /// <summary>
        /// 获取最大的顺序号
        /// </summary>
        public int GetRecommendTeacherMaxSort()
        {
            string commandName = "dbo.Pr_GetRecommendTeacherMaxSort";
            int maxSort = 0;
            Object MaxSort = SqlHelper.ExecuteScalar(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, null);
            if (MaxSort != null && MaxSort.ToString() != "")
            {
                maxSort = (int)MaxSort;
            }
            return maxSort;
        }
        /// <summary>
        /// 根据课程ID修改推荐课程排序号
        /// </summary>
        /// <param name="TeacherID">课程ID</param>
        /// <param name="orderNum">排序号</param>
        public void UpdateOrderNumByTeacherID(int TeacherID, int orderNum)
        {

            string commandName = "dbo.Pr_Recommend_Teacher_UpdateOrderNum";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSWrite, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
                    new SqlParameter("@TeacherID", SqlDbType.Int),
                    new SqlParameter("@OrderNum",SqlDbType.Int)
                };
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSWrite, commandName, parms);
            }

            parms[0].Value = TeacherID;
            parms[1].Value = orderNum;

            #endregion
            SqlHelper.ExecuteNonQuery(ConnectionString.ETMSWrite, CommandType.StoredProcedure, commandName, parms);
        }

        /// <summary>
        /// 获取名师风采列表
        /// </summary>
        /// <returns></returns>
        public DataTable GetFamousTeacherPagedList(int pageIndex, int pageSize, string sortExpression, string criteria, out int totalRecords)
        {
            string commandName = "[dbo].[Pr_Recommend_Teacher_GetDemandTeacherPagedList]";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
                    new SqlParameter("@PageIndex", SqlDbType.Int),
                    new SqlParameter("@PageSize", SqlDbType.Int),
                    new SqlParameter("@SortExpression", SqlDbType.NVarChar),
                    new SqlParameter("@Criteria", SqlDbType.NVarChar),
                    new SqlParameter("@ReturnValue", SqlDbType.Int, 4, ParameterDirection.ReturnValue, false, 0, 0, String.Empty, DataRowVersion.Default, null)
                };
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
            }

            parms[0].Value = pageIndex;
            parms[1].Value = pageSize;
            parms[2].Value = sortExpression;
            parms[3].Value = criteria;
            #endregion
            DataTable dt = SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms).Tables[0];
            totalRecords = (int)parms[4].Value;
            return dt;
        }
        /// <summary>
        /// 根据教师ID获取教师详情
        /// </summary>
        /// <param name="TeacherID">教师ID</param>
        /// <returns></returns>
        public DataTable GetFamousTeacherInfoByID(int TeacherID)
        {
            string commandName = "[dbo].[Pr_Recommend_Teacher_GetTeacherByID]";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
                    new SqlParameter("@TeacherID", SqlDbType.Int)
                };
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
            }

            parms[0].Value = TeacherID;
            #endregion
            DataTable dt = SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms).Tables[0];
            return dt;
        }
    }
}
