//==================================================================================================
//Version 1.0, auto-generated.
//Generated By running1218
//Date: 2012/3/29 17:59:09.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1)
//==================================================================================================

using System;
using System.Data;

using System.Data.SqlClient;
using ETMS.Utility.Data;

namespace ETMS.Components.Basic.Implement.DAL.Bulletin
{
    /// <summary>
    /// 公告表数据访问
    /// </summary>
    public partial class Inf_BulletinDataAccess
	{

        /// <summary>
        /// 获取课程公告列表
        /// </summary>
        /// <param name="TrainingItemCourseID"></param>
        /// <returns></returns>
        public DataTable GetCourseNoticeList(Guid TrainingItemCourseID)
        {
            string commandName = "[dbo].[Pr_GetCourseNoticeList]";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
                    new SqlParameter("@TrainingItemCourseID", SqlDbType.UniqueIdentifier),
                };
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
            }

            parms[0].Value = TrainingItemCourseID;
            #endregion
            return SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms).Tables[0];
        }

        public DataTable GetCourseNoticeList(Guid TrainingItemCourseID, int articleType)
        {
            string commandName = string.Empty;

            if (articleType == 3)
            {
                commandName = @"select b.MainHead,b.ArticleContent,b.CreateTime, 1 as SourceType 
                                FROM [Inf_Bulletin] b
                                inner join[Tr_ItemCourseMentorData] t ON b.ArticleID = t.ArticleID AND b.ArticleTypeID = @ArticleTypeID
                                where t.TrainingItemCourseID = @TrainingItemCourseID
                                and b.IsUse = 1
                                UNION
                                SELECT a.Name AS MainHead, a.DataInfo AS ArticleContent, a.CreateTime, 2 as SourceType
                                FROM Res_Content a 
                                INNER JOIN dbo.Res_CatalogContentRelation b ON b.ContentID = a.ContentID
                                INNER JOIN dbo.Res_Catalog c ON c.CatalogID = b.CatalogID
                                INNER JOIN dbo.Res_CourseRes d ON c.CoursewareID = d.ResID AND d.CourseResTypeID = 1
                                INNER JOIN dbo.Res_Course e ON e.CourseID = d.CourseID
                                INNER JOIN dbo.Tr_ItemCourse f ON f.CourseID = e.CourseID
                                WHERE TrainingItemCourseID = @TrainingItemCourseID
	                                AND a.Type = 2
	                                AND c.Status = 1
	                                AND b.Status = 1	
                                order by CreateTime DESC";
            }
            else
            {
                commandName = @"select b.MainHead,b.ArticleContent,b.CreateTime, 1 as SourceType from [Inf_Bulletin] b
                                    inner join[Tr_ItemCourseMentorData] t
                                    on b.ArticleID = t.ArticleID AND b.ArticleTypeID = @ArticleTypeID
                                    where t.TrainingItemCourseID = @TrainingItemCourseID
                                    and b.IsUse = 1
                                    order by b.CreateTime desc";
            }
            #region Parameters
            SqlParameter[] parms = new SqlParameter[] {
                    new SqlParameter("@TrainingItemCourseID", SqlDbType.UniqueIdentifier),
                    new SqlParameter("@ArticleTypeID", SqlDbType.Int)
                };
                
            parms[0].Value = TrainingItemCourseID;
            parms[1].Value = articleType;
            #endregion
            return SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, CommandType.Text, commandName, parms).Tables[0];
        }


        /// <summary>
        /// 根据培训项目课程获取导学资料，用于后台
        /// </summary>
        /// <param name="trainingItemCourseID">培训项目课程编号</param>
        /// <returns>返回培训项目课程编号下导学资料列表</returns>
        public DataTable GetMentorDatabyItemCourse(Guid trainingItemCourseID)
        {
            string commandName = "[dbo].[Pr_Inf_Bulletin_GetMentorDatabyItemCourse]";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
					new SqlParameter("@TrainingItemCourseID", SqlDbType.UniqueIdentifier),
				};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
            }

            parms[0].Value = trainingItemCourseID;
            #endregion
            return SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms).Tables[0];
        }

        /// <summary>
        /// 根据培训项目课程获取导学资料，用于后台
        /// </summary>
        /// <param name="trainingItemCourseID">培训项目课程编号</param>
        /// <returns>返回培训项目课程编号下导学资料列表</returns>
        public DataTable GetNoticeDatabyItemCourse(Guid trainingItemCourseID)
        {
            string commandName = "[dbo].[Pr_Inf_Bulletin_GetNoticeDatabyItemCourse]";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
                    new SqlParameter("@TrainingItemCourseID", SqlDbType.UniqueIdentifier),
                };
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
            }

            parms[0].Value = trainingItemCourseID;
            #endregion
            return SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms).Tables[0];
        }

        /// <summary>
        /// 设置导学资料启用状态
        /// </summary>
        /// <param name="articleID">导学资料编号</param>
        /// <param name="isUse">启用状态</param>
        /// <returns>是否成功</returns>
        public void SetMontorDataIsUse(Int32 articleID, int isUse)
        {
            string commandName = "[dbo].[Pr_Inf_Bulletin_SetMontorDataIsUse]";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
					new SqlParameter("@ArticleID", SqlDbType.Int),
                    new SqlParameter("@IsUse", SqlDbType.Int),
				};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSWrite, commandName, parms);
            }

            parms[0].Value = articleID;
            parms[1].Value = isUse;
            #endregion

            SqlHelper.ExecuteNonQuery(ConnectionString.ETMSWrite, CommandType.StoredProcedure, commandName, parms);
        }

        /// <summary>
        /// 根据培训项目课程获取导学资料,用于前台
        /// </summary>
        /// <param name="trainingItemCourseID">培训项目课程编号</param>
        /// <returns></returns>
        public DataTable GetMontorDataByTrainintItemCourseID(Guid trainingItemCourseID)
        {
            string commandName = "[dbo].[Pr_Inf_Bulletin_GetMontorDataByTrainintItemCourseID]";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
					new SqlParameter("@TrainingItemCourseID", SqlDbType.UniqueIdentifier),
				};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
            }

            parms[0].Value = trainingItemCourseID;
            #endregion
            return SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms).Tables[0];
        }


        /// <summary>
        /// 根据机构获取公告列表
        /// </summary>
        /// <param name="OrgID">机构编号</param>
        /// <returns>返回所属机构的公告列表</returns>
        public DataTable GetBulletinByOrgID(int orgID)
        {
            string commandName = "[dbo].[Pr_Inf_Bulletin_GetBulletinbyOrgID]";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
					new SqlParameter("@OrgID", SqlDbType.Int),
				};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
            }

            parms[0].Value = orgID;
            #endregion
            return SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms).Tables[0];
        }

        
        /// <summary>
        /// 学习首页公告：通过机构编号获取公告列表  
        /// </summary>
        /// <param name="orgID">机构编号</param>
        /// <param name="topNum">获取记录数</param>
        /// <returns></returns>
        public DataTable GetBulletinListToStudentByOrgID(int orgID,int topNum)
        {
            string commandName = "[dbo].[Pr_Inf_Bulletin_GetBulletinListToStudent]";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
					new SqlParameter("@OrgID", SqlDbType.Int),
                    new SqlParameter("@TopNum", SqlDbType.Int),
				};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
            }

            parms[0].Value = orgID;
            parms[1].Value = topNum;
            #endregion
            return SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms).Tables[0];
  
        }

        /// <summary>
        /// 获取机构公告
        /// </summary>
        /// <param name="orgID"></param>
        /// <returns></returns>
        public DataTable GetNoticeByOrgID(int orgID)
        {
            string commandName = "dbo.Pr_Inf_Bulletin_GetByOrgID";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
					new SqlParameter("@OrgID", SqlDbType.Int)
				};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
            }

            parms[0].Value = orgID;
            #endregion
            DataTable dt = SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms).Tables[0];
            return dt;
        }        
		
	}
}
