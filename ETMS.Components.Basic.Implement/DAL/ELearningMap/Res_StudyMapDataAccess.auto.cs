//==================================================================================================
//Version 1.0, auto-generated.
//Generated By xueyb.
//Date: 2012-3-29 22:16:00.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1), a product of ZhouYonghua(Zhou_Yonghua@163.com).
//==================================================================================================

using System;
using System.Data;

using System.Data.SqlClient;
using ETMS.Utility.Data;

using ETMS.Components.Basic.API.Entity.ELearningMap;

namespace ETMS.Components.Basic.Implement.DAL.ELearningMap
{
    /// <summary>
    /// 学习地图表数据访问
    /// </summary>
    public partial class Res_StudyMapDataAccess
	{
		/// <summary>
		/// 增加
		/// </summary>
		public void Add(Res_StudyMap res_StudyMap)
		{
			string commandName = "dbo.Pr_Res_StudyMap_Insert";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSWrite, commandName);
			if (parms == null)
			{
				parms = new SqlParameter[] {
					new SqlParameter("@StudyMapID", SqlDbType.UniqueIdentifier),
					new SqlParameter("@ELearningMapTypeID", SqlDbType.Int),
					new SqlParameter("@StudyMapCode", SqlDbType.NVarChar, 100),
					new SqlParameter("@StudyMapName", SqlDbType.NVarChar, 200),
					new SqlParameter("@DeptID", SqlDbType.Int),
					new SqlParameter("@PostID", SqlDbType.Int),
					new SqlParameter("@RankID", SqlDbType.Int),
					new SqlParameter("@StudyMapDesc", SqlDbType.NVarChar, 2048),
					new SqlParameter("@Status", SqlDbType.Int),
					new SqlParameter("@CreateTime", SqlDbType.DateTime),
					new SqlParameter("@CreateUserID", SqlDbType.Int),
					new SqlParameter("@CreateUser", SqlDbType.NVarChar, 128),
					new SqlParameter("@ModifyTime", SqlDbType.DateTime),
					new SqlParameter("@ModifyUser", SqlDbType.NVarChar, 128),
					new SqlParameter("@Remark", SqlDbType.NVarChar, -1),
					new SqlParameter("@OrgID", SqlDbType.Int)
					};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSWrite, commandName, parms);
			}
			
			parms[0].Value = res_StudyMap.StudyMapID;
			parms[1].Value = res_StudyMap.ELearningMapTypeID;
			if (res_StudyMap.StudyMapCode!= null){ parms[2].Value = res_StudyMap.StudyMapCode; } else { parms[2].Value = DBNull.Value; }
			if (res_StudyMap.StudyMapName!= null){ parms[3].Value = res_StudyMap.StudyMapName; } else { parms[3].Value = DBNull.Value; }
			if (res_StudyMap.DeptID!= null){ parms[4].Value = res_StudyMap.DeptID; } else { parms[4].Value = DBNull.Value; }
			if (res_StudyMap.PostID!= null){ parms[5].Value = res_StudyMap.PostID; } else { parms[5].Value = DBNull.Value; }
			if (res_StudyMap.RankID!= null){ parms[6].Value = res_StudyMap.RankID; } else { parms[6].Value = DBNull.Value; }
			if (res_StudyMap.StudyMapDesc!= null){ parms[7].Value = res_StudyMap.StudyMapDesc; } else { parms[7].Value = DBNull.Value; }
			parms[8].Value = res_StudyMap.Status;
			parms[9].Value = res_StudyMap.CreateTime;
			parms[10].Value = res_StudyMap.CreateUserID;
			if (res_StudyMap.CreateUser!= null){ parms[11].Value = res_StudyMap.CreateUser; } else { parms[11].Value = DBNull.Value; }
			parms[12].Value = res_StudyMap.ModifyTime;
			if (res_StudyMap.ModifyUser!= null){ parms[13].Value = res_StudyMap.ModifyUser; } else { parms[13].Value = DBNull.Value; }
			if (res_StudyMap.Remark!= null){ parms[14].Value = res_StudyMap.Remark; } else { parms[14].Value = DBNull.Value; }
			parms[15].Value = res_StudyMap.OrgID;
			#endregion
			SqlHelper.ExecuteNonQuery(ConnectionString.ETMSWrite, CommandType.StoredProcedure, commandName, parms);
			
		}
		
		/// <summary>
		/// 删除
		/// </summary>
		public void Remove(Guid studyMapID)
		{
			string commandName = "dbo.Pr_Res_StudyMap_Delete";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSWrite, commandName);
			if (parms == null)
			{
				parms = new SqlParameter[] {
					new SqlParameter("@StudyMapID", SqlDbType.UniqueIdentifier)
				};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSWrite, commandName, parms);
			}
			
			parms[0].Value = studyMapID;
			
			#endregion
			SqlHelper.ExecuteNonQuery(ConnectionString.ETMSWrite, CommandType.StoredProcedure, commandName, parms);
		}
		
		/// <summary>
		/// 保存
		/// </summary>
		public void Save(Res_StudyMap res_StudyMap)
		{
			string commandName = "dbo.Pr_Res_StudyMap_Update";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSWrite, commandName);
			if (parms == null)
			{
				parms = new SqlParameter[] {
					new SqlParameter("@StudyMapID", SqlDbType.UniqueIdentifier),
					new SqlParameter("@ELearningMapTypeID", SqlDbType.Int),
					new SqlParameter("@StudyMapCode", SqlDbType.NVarChar, 100),
					new SqlParameter("@StudyMapName", SqlDbType.NVarChar, 200),
					new SqlParameter("@DeptID", SqlDbType.Int),
					new SqlParameter("@PostID", SqlDbType.Int),
					new SqlParameter("@RankID", SqlDbType.Int),
					new SqlParameter("@StudyMapDesc", SqlDbType.NVarChar, 2048),
					new SqlParameter("@Status", SqlDbType.Int),
					new SqlParameter("@CreateTime", SqlDbType.DateTime),
					new SqlParameter("@CreateUserID", SqlDbType.Int),
					new SqlParameter("@CreateUser", SqlDbType.NVarChar, 128),
					new SqlParameter("@ModifyTime", SqlDbType.DateTime),
					new SqlParameter("@ModifyUser", SqlDbType.NVarChar, 128),
					new SqlParameter("@Remark", SqlDbType.NVarChar, -1),
					new SqlParameter("@OrgID", SqlDbType.Int)
				};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSWrite, commandName, parms);
			}
			
			parms[0].Value = res_StudyMap.StudyMapID;
			parms[1].Value = res_StudyMap.ELearningMapTypeID;
			if (res_StudyMap.StudyMapCode!= null){ parms[2].Value = res_StudyMap.StudyMapCode; } else { parms[2].Value = DBNull.Value; }
			if (res_StudyMap.StudyMapName!= null){ parms[3].Value = res_StudyMap.StudyMapName; } else { parms[3].Value = DBNull.Value; }
			if (res_StudyMap.DeptID!= null){ parms[4].Value = res_StudyMap.DeptID; } else { parms[4].Value = DBNull.Value; }
			if (res_StudyMap.PostID!= null){ parms[5].Value = res_StudyMap.PostID; } else { parms[5].Value = DBNull.Value; }
			if (res_StudyMap.RankID!= null){ parms[6].Value = res_StudyMap.RankID; } else { parms[6].Value = DBNull.Value; }
			if (res_StudyMap.StudyMapDesc!= null){ parms[7].Value = res_StudyMap.StudyMapDesc; } else { parms[7].Value = DBNull.Value; }
			parms[8].Value = res_StudyMap.Status;
			parms[9].Value = res_StudyMap.CreateTime;
			parms[10].Value = res_StudyMap.CreateUserID;
			if (res_StudyMap.CreateUser!= null){ parms[11].Value = res_StudyMap.CreateUser; } else { parms[11].Value = DBNull.Value; }
			parms[12].Value = res_StudyMap.ModifyTime;
			if (res_StudyMap.ModifyUser!= null){ parms[13].Value = res_StudyMap.ModifyUser; } else { parms[13].Value = DBNull.Value; }
			if (res_StudyMap.Remark!= null){ parms[14].Value = res_StudyMap.Remark; } else { parms[14].Value = DBNull.Value; }
			parms[15].Value = res_StudyMap.OrgID;
			#endregion
			SqlHelper.ExecuteNonQuery(ConnectionString.ETMSWrite, CommandType.StoredProcedure, commandName, parms);
		}
		
		/// <summary>
		/// 根据标识获取对象
		/// </summary>
		public Res_StudyMap GetById(Guid studyMapID)
		{
			Res_StudyMap res_StudyMap = null;
			
			string commandName = "dbo.Pr_Res_StudyMap_GetByPK";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
			if (parms == null)
			{
				parms = new SqlParameter[] {
					new SqlParameter("@StudyMapID", SqlDbType.UniqueIdentifier)
				};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
			}
			
			parms[0].Value = studyMapID;
			
			#endregion
			using (SqlDataReader dataReader = SqlHelper.ExecuteReader(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms))
			{
				if (dataReader.Read())
				{
					res_StudyMap = PopulateRes_StudyMapFromDataReader(dataReader);
				}
			}
			
			return res_StudyMap;
		}				
		
		/// <summary>
		/// 根据参数获取对象列表（分页，可排序）
		/// </summary>
		public DataTable GetPagedList(int pageIndex, int pageSize, string sortExpression, string criteria, out int totalRecords)
		{			
			string commandName = "dbo.Pr_Res_StudyMap_GetPagedList";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
			if (parms == null)
			{
				parms = new SqlParameter[] {
					new SqlParameter("@PageIndex", SqlDbType.Int),
					new SqlParameter("@PageSize", SqlDbType.Int),
					new SqlParameter("@SortExpression", SqlDbType.VarChar),
					new SqlParameter("@Criteria", SqlDbType.VarChar),
					new SqlParameter("@ReturnValue", SqlDbType.Int, 4, ParameterDirection.ReturnValue, false, 0, 0, String.Empty, DataRowVersion.Default, null)
				};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
			}
			
			parms[0].Value = pageIndex;
			parms[1].Value = pageSize;
			parms[2].Value = sortExpression;
			parms[3].Value = criteria;
			#endregion
			DataTable dt=SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms).Tables[0];
			totalRecords = (int)parms[4].Value;
			return dt;
		}
		
		/// <summary>
		/// 从DataReader中读取数据到业务对象
		/// </summary>
		private Res_StudyMap PopulateRes_StudyMapFromDataReader(SqlDataReader reader)
		{
			Res_StudyMap res_StudyMap = new Res_StudyMap();
			
			int studyMapIDIndex = reader.GetOrdinal("StudyMapID"); 
			if(!reader.IsDBNull(studyMapIDIndex))
			{
				res_StudyMap.StudyMapID= reader.GetGuid(studyMapIDIndex);
			}
			
			int eLearningMapTypeIDIndex = reader.GetOrdinal("ELearningMapTypeID"); 
			if(!reader.IsDBNull(eLearningMapTypeIDIndex))
			{
				res_StudyMap.ELearningMapTypeID= reader.GetInt32(eLearningMapTypeIDIndex);
			}
			
			int studyMapCodeIndex = reader.GetOrdinal("StudyMapCode"); 
			if(!reader.IsDBNull(studyMapCodeIndex))
			{
				res_StudyMap.StudyMapCode= reader.GetString(studyMapCodeIndex);
			}
			
			int studyMapNameIndex = reader.GetOrdinal("StudyMapName"); 
			if(!reader.IsDBNull(studyMapNameIndex))
			{
				res_StudyMap.StudyMapName= reader.GetString(studyMapNameIndex);
			}
			
			int deptIDIndex = reader.GetOrdinal("DeptID"); 
			if(!reader.IsDBNull(deptIDIndex))
			{
				res_StudyMap.DeptID= reader.GetInt32(deptIDIndex);
			}
			
			int postIDIndex = reader.GetOrdinal("PostID"); 
			if(!reader.IsDBNull(postIDIndex))
			{
				res_StudyMap.PostID= reader.GetInt32(postIDIndex);
			}
			
			int rankIDIndex = reader.GetOrdinal("RankID"); 
			if(!reader.IsDBNull(rankIDIndex))
			{
				res_StudyMap.RankID= reader.GetInt32(rankIDIndex);
			}
			
			int studyMapDescIndex = reader.GetOrdinal("StudyMapDesc"); 
			if(!reader.IsDBNull(studyMapDescIndex))
			{
				res_StudyMap.StudyMapDesc= reader.GetString(studyMapDescIndex);
			}
			
			int statusIndex = reader.GetOrdinal("Status"); 
			if(!reader.IsDBNull(statusIndex))
			{
				res_StudyMap.Status= reader.GetInt32(statusIndex);
			}
			
			int createTimeIndex = reader.GetOrdinal("CreateTime"); 
			if(!reader.IsDBNull(createTimeIndex))
			{
				res_StudyMap.CreateTime= reader.GetDateTime(createTimeIndex);
			}
			
			int createUserIDIndex = reader.GetOrdinal("CreateUserID"); 
			if(!reader.IsDBNull(createUserIDIndex))
			{
				res_StudyMap.CreateUserID= reader.GetInt32(createUserIDIndex);
			}
			
			int createUserIndex = reader.GetOrdinal("CreateUser"); 
			if(!reader.IsDBNull(createUserIndex))
			{
				res_StudyMap.CreateUser= reader.GetString(createUserIndex);
			}
			
			int modifyTimeIndex = reader.GetOrdinal("ModifyTime"); 
			if(!reader.IsDBNull(modifyTimeIndex))
			{
				res_StudyMap.ModifyTime= reader.GetDateTime(modifyTimeIndex);
			}
			
			int modifyUserIndex = reader.GetOrdinal("ModifyUser"); 
			if(!reader.IsDBNull(modifyUserIndex))
			{
				res_StudyMap.ModifyUser= reader.GetString(modifyUserIndex);
			}
			
			int remarkIndex = reader.GetOrdinal("Remark"); 
			if(!reader.IsDBNull(remarkIndex))
			{
				res_StudyMap.Remark= reader.GetString(remarkIndex);
			}
			
			int orgIDIndex = reader.GetOrdinal("OrgID"); 
			if(!reader.IsDBNull(orgIDIndex))
			{
				res_StudyMap.OrgID= reader.GetInt32(orgIDIndex);
			}
			
			return res_StudyMap; 
		}
	}
}
