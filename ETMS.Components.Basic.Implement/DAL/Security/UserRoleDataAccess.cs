//==================================================================================================
//Version 1.0, auto-generated.
//Generated By running1218
//Date: 2008-9-27 9:48:43.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1)
//==================================================================================================

using System.Collections.Generic;
using System.Data;

using System.Data.SqlClient;
using ETMS.Utility.Data;

using ETMS.Components.Basic.API.Entity.Security;

namespace ETMS.Components.Basic.Implement.DAL.Security
{
    /// <summary>
    /// 数据访问
    /// </summary>
    public class UserRoleDataAccess
    {
        private static string SelectSql = @"
SELECT b.*
  FROM [dbo].[Site_UserRole] a inner join dbo.Site_Role b on a.RoleID=b.RoleID WHERE 1=1 ";
        /// <summary>
        /// 保存用户角色列表
        /// </summary>
        /// <param name="userID">用户ID</param>
        /// <param name="roleIDs">授予的角色</param>
        /// <param name="creator">操作人</param>
        public void Save(int userID, string roleIDs, string creator)
        {

            string commandName = "dbo.[Pr_Site_UserRole_Save]";
            #region Parameters
            SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSWrite, commandName);
            if (parms == null)
            {
                parms = new SqlParameter[] {
					new SqlParameter("@UserID", SqlDbType.Int),
					new SqlParameter("@RoleIDs", SqlDbType.NVarChar, 500), 
					new SqlParameter("@Creator", SqlDbType.NVarChar, 50) 
				};
                SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSWrite, commandName, parms);
            }

            parms[0].Value = userID;
            parms[1].Value = roleIDs;
            parms[2].Value = creator;
            #endregion
            SqlHelper.ExecuteNonQuery(ConnectionString.ETMSWrite, CommandType.StoredProcedure, commandName, parms);
        }

        /// <summary>
        /// 获取用户被授予的角色列表
        /// </summary>
        /// <param name="userID">用户ID</param>
        /// <returns>被授予的角色列表</returns>
        public IList<Role> Query(int userID)
        {
            string sqlScriptFormat = SelectSql + " AND UserID={0} ";
            List<Role> list = new List<Role>();
            DataTable dt = SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, CommandType.Text, string.Format(sqlScriptFormat, userID)).Tables[0];
            if (dt.Rows.Count == 0)
                return list;
            foreach (DataRow row in dt.Rows)
            {
                list.Add(ETMS.Components.Basic.API.Entity.Security.Role.ConvertDataRowToRole(row));
            }
            return list;
        }
    }
}
