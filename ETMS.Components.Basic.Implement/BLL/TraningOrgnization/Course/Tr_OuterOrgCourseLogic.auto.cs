//==================================================================================================
//Version 1.0, auto-generated.
//Generated By huangzhf.
//Date: 2012-4-24 21:06:16.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1)
//==================================================================================================

using System;
using System.Collections.Generic;
using System.Data;
using ETMS.Utility.Logging;
using ETMS.Components.Basic.API.Entity.TraningOrgnization.Course;
using ETMS.Components.Basic.Implement.DAL.TraningOrgnization.Course;
namespace ETMS.Components.Basic.Implement.BLL.TraningOrgnization.Course
{
    /// <summary>
    /// 外部培训机构课程表业务逻辑
    /// </summary>
    public partial class Tr_OuterOrgCourseLogic
	{
		private static readonly Tr_OuterOrgCourseDataAccess DAL = new Tr_OuterOrgCourseDataAccess();
		
		/// <summary>
		/// 增加
		/// </summary>
		public void Add(Tr_OuterOrgCourse tr_OuterOrgCourse)
		{
			DAL.Add(tr_OuterOrgCourse);
            BizLogHelper.AddOperate(tr_OuterOrgCourse);
		}


		/// <summary>
		/// 保存
		/// </summary>
		public void Update(Tr_OuterOrgCourse tr_OuterOrgCourse)
		{
            //修改前信息
            Tr_OuterOrgCourse originalEntity=GetById(tr_OuterOrgCourse.OuterOrgCourseID);
			DAL.Save(tr_OuterOrgCourse);
            BizLogHelper.UpdateOperate(originalEntity,tr_OuterOrgCourse);
		}

		/// <summary>
		/// 删除
		/// </summary>
		public void Remove(Guid outerOrgCourseID)
		{
            doRemove(outerOrgCourseID);
		} 

		/// <summary>
		/// 批量删除(主键ID数组）
		/// </summary>
		public void Remove(Guid[] outerOrgCourseIDs)
		{
#if !DEBUG
			using (TransactionScope ts = new TransactionScope())
			{
#endif
				foreach (Guid id in outerOrgCourseIDs  )
				{
					Remove(id);
				}
#if !DEBUG
				ts.Complete();
			}
#endif
		} 
    
    
		/// <summary>
		/// 根据标识获取对象
		/// </summary>
		public Tr_OuterOrgCourse GetById(Guid outerOrgCourseID)
		{
			Tr_OuterOrgCourse tr_OuterOrgCourse = DAL.GetById(outerOrgCourseID);
			if (tr_OuterOrgCourse == null)
			{
				throw new ETMS.AppContext.BusinessException("TraningOrgnization.Course.Tr_OuterOrgCourse.NotFoundException",new object[]{outerOrgCourseID});
			}
			
			return tr_OuterOrgCourse;
		}		
		 
		/// <summary>
        /// 查询数据列表分页数据
        /// </summary>
        /// <param name="pageIndex">页号</param>
        /// <param name="pageSize">页面大小</param>
        /// <param name="sortExpression">排序条件</param>
        /// <param name="criteria">筛选条件</param>
        /// <param name="totalRecords">out 记录总数</param>
        /// <returns>返回查询结果</returns>
		public DataTable GetPagedList(int pageIndex, int pageSize, string sortExpression, string criteria,out int totalRecords)
		{				
			return DAL.GetPagedList(pageIndex, pageSize, sortExpression, criteria, out totalRecords);
		}
				
        /// <summary>
        /// 查询实体分页数据
        /// </summary>
        /// <param name="pageIndex">页号</param>
        /// <param name="pageSize">页面大小</param>
        /// <param name="sortExpression">排序条件</param>
        /// <param name="criteria">筛选条件</param>
        /// <param name="totalRecords">out 记录总数</param>
        /// <returns>返回查询结果</returns>
		public IList<Tr_OuterOrgCourse> GetEntityList(int pageIndex, int pageSize, string sortExpression, string criteria,out int totalRecords)
		{				
			return DAL.GetEntityList(pageIndex, pageSize, sortExpression, criteria, out totalRecords);
		}
		
	}
	
	
}

