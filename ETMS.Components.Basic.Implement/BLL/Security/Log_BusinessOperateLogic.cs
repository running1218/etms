//==================================================================================================
//Version 1.0, auto-generated.
//Generated By xueyb.
//Date: 2012-4-13 20:34:59.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1), a product of ZhouYonghua(Zhou_Yonghua@163.com).
//==================================================================================================

using System;
using ETMS.Utility.Logging;
using ETMS.Components.Basic.API.Entity.Security;
namespace ETMS.Components.Basic.Implement.BLL.Security
{
    /// <summary>
    /// 业务操作日志业务逻辑
    /// </summary>
    public partial class Log_BusinessOperateLogic
    {
        /// <summary>
        /// 保存操作
        /// </summary>
        public void Save(Log_BusinessOperate log_BusinessOperate)
        {
            try
            {
                if (log_BusinessOperate.BizLogID == 0)
                {
                    //设置主键ID（仅类型为GUID有效，Int型则由数据库自增产生）                    
                    Add(log_BusinessOperate);
                }
                else
                {
                    Update(log_BusinessOperate);
                }
            }
            catch (System.Data.SqlClient.SqlException ex)
            {
                //枚举数据约束异常并转换为业务异常
                if (ex.Message.IndexOf("Index_U_Log_BusinessOperateCode", StringComparison.InvariantCultureIgnoreCase) != -1)
                {
                    throw new ETMS.AppContext.BusinessException("Security.Log_BusinessOperate.CodeExists");
                }
                else if (ex.Message.IndexOf("Index_U_Log_BusinessOperateName", StringComparison.InvariantCultureIgnoreCase) != -1)
                {
                    throw new ETMS.AppContext.BusinessException("Security.Log_BusinessOperate.NameExists");
                }
                //如果仍未处理，则抛出
                throw ex;
            }
        }

        /// <summary>
        /// 删除
        /// </summary>
        protected void doRemove(Int64 bizLogID)
        {
            try
            {
                DAL.Remove(bizLogID);
                //记录删除日志（根据ID删除）
                BizLogHelper.Operate(bizLogID, "删除");
            }
            catch (System.Data.SqlClient.SqlException ex)
            {
                //枚举数据约束异常并转换为业务异常，数据已经使用
                if (ex.Message.IndexOf("FK_", StringComparison.InvariantCultureIgnoreCase) != -1)
                {
                    throw new ETMS.AppContext.BusinessException("Security.Log_BusinessOperate.DataUsed");
                }
                //如果仍未处理，则抛出
                throw ex;
            }
        }
    }


}

