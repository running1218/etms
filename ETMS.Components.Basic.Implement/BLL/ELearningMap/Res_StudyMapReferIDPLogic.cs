//==================================================================================================
//Version 1.0, auto-generated.
//Generated By xinyb.
//Date: 2012-05-09 09:25:00.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1)
//==================================================================================================

using System;
using System.Collections.Generic;

using ETMS.AppContext;
using ETMS.Utility;
using ETMS.Utility.Logging;
using ETMS.Components.Basic.API.Entity;
namespace ETMS.Components.Basic.Implement.BLL
{
    /// <summary>
    /// 学习地图与IDP非课程资料关系表业务逻辑
    /// </summary>
    public partial class Res_StudyMapReferIDPLogic
	{
 		/// <summary>
		/// 保存操作
		/// </summary>
		public void Save(Res_StudyMapReferIDP res_StudyMapReferIDP)
		{
            try
            {
			    if(res_StudyMapReferIDP.Res_StudyMapReferIDPID.IsEmpty())
                {
                    //设置主键ID（仅类型为GUID有效，Int型则由数据库自增产生）
                    res_StudyMapReferIDP.Res_StudyMapReferIDPID=res_StudyMapReferIDP.Res_StudyMapReferIDPID.NewID();;
                    Add(res_StudyMapReferIDP);
                }
                else
                {
                    Update(res_StudyMapReferIDP);
                }
            }
           catch (System.Data.SqlClient.SqlException ex)
            {
                //枚举数据约束异常并转换为业务异常
                if (ex.Message.IndexOf("Index_U_Res_StudyMapReferIDPCode",StringComparison.InvariantCultureIgnoreCase) != -1)
                {
				    throw new ETMS.AppContext.BusinessException("Basic.Res_StudyMapReferIDP.CodeExists");
                }
                else if (ex.Message.IndexOf("Index_U_Res_StudyMapReferIDPName",StringComparison.InvariantCultureIgnoreCase) != -1)
                {
				    throw new ETMS.AppContext.BusinessException("Basic.Res_StudyMapReferIDP.NameExists");
                }
                //如果仍未处理，则抛出
                throw ex;
            } 
		} 

        /// <summary>
		/// 删除
		/// </summary>
		protected void doRemove(Guid res_StudyMapReferIDPID)
		{
            try
            {
			     DAL.Remove(res_StudyMapReferIDPID);
                 //记录删除日志（根据ID删除）
                 BizLogHelper.Operate(res_StudyMapReferIDPID,"删除");
            }
           catch (System.Data.SqlClient.SqlException ex)
            {
                //枚举数据约束异常并转换为业务异常，数据已经使用
                if (ex.Message.IndexOf("FK_",StringComparison.InvariantCultureIgnoreCase) != -1)
                {
				    throw new ETMS.AppContext.BusinessException("Basic.Res_StudyMapReferIDP.DataUsed");
                } 
                //如果仍未处理，则抛出
                throw ex;
            }  
		}

        /// <summary>
        /// 批量新增
        /// </summary>
        /// <param name="source"></param>
        public void Save(List<Res_StudyMapReferIDP> source)
        {
            foreach (var entity in source)
            {
                Save(entity);
            }
        }

        public void Save(Guid studyMapID, Guid[] datas)
        {
            Res_StudyMapReferIDP entity = null;
            foreach (Guid key in datas)
            {
                entity = new Res_StudyMapReferIDP() { 
                    StudyMapID = studyMapID,
                    IDP_NotCourseDataID = key,                    
                    CreateTime = DateTime.Now,
                    CreateUser = UserContext.Current.RealName,
                    CreateUserID = UserContext.Current.UserID,
                    ModifyTime = DateTime.Now,
                    ModifyUser = UserContext.Current.RealName
                };

                Save(entity);
            }
        }

        /// <summary>
        /// 获取学习地图非课程待选资料列表
        /// </summary>
        /// <param name="entity"></param>
        /// <param name="pageIndex"></param>
        /// <param name="pageSize"></param>
        /// <param name="totalRecords"></param>
        /// <returns></returns>
        public List<Res_StudyMapReferIDP> GetMapDataChoseList(Res_StudyMapReferIDP entity, int pageIndex, int pageSize, out int totalRecords)
        {
            return DAL.GetMapDataChoseList(entity).PageList<Res_StudyMapReferIDP>(pageIndex, pageSize, out totalRecords);
        }

        /// <summary>
        /// 获取学习地图非课程已选资料列表(分页)
        /// </summary>
        /// <param name="organizationID"></param>
        /// <param name="studyMapID"></param>
        /// <param name="pageIndex"></param>
        /// <param name="pageSize"></param>
        /// <param name="totalRecords"></param>
        /// <returns></returns>
        public List<Res_StudyMapReferIDP> GetMapDataList(Guid studyMapID, int pageIndex, int pageSize, out int totalRecords)
        {
            return DAL.GetMapDataList(UserContext.Current.OrganizationID, studyMapID).PageList<Res_StudyMapReferIDP>(pageIndex, pageSize, out totalRecords);
        }

        /// <summary>
        /// 获取学习地图非课程已选资料列表
        /// </summary>
        /// <param name="studyMapID"></param>
        /// <returns></returns>
        public List<Res_StudyMapReferIDP> GetMapDataList(Guid studyMapID)
        {
            return DAL.GetMapDataList(UserContext.Current.OrganizationID, studyMapID).ToList<Res_StudyMapReferIDP>();
        }
	}		
}

