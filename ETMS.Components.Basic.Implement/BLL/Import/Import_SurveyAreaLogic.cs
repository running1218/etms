//==================================================================================================
//Version 1.0, auto-generated.
//Generated By huangzf.
//Date: 2013/2/1 9:27:51.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1)
//==================================================================================================

using System;
using System.Collections.Generic;
using System.Data;
using ETMS.Components.QS.API.Entity;
using ETMS.Components.Basic.API.Entity.Import;
using ETMS.Utility.Data;
using System.Data.OleDb;
namespace ETMS.Components.Basic.Implement.BLL.Import
{
    /// <summary>
    /// 业务逻辑
    /// </summary>
    public partial class Import_SurveyAreaLogic
    {

        /// <summary>
        /// 保存操作
        /// </summary>
        public void Save(Import_SurveyArea import_SurveyArea)
        {
            try
            {
                if (import_SurveyArea.DetailID == 0)
                {
                    //设置主键ID（仅类型为GUID有效，Int型则由数据库自增产生）;
                    Add(import_SurveyArea);
                }
                else
                {
                    Update(import_SurveyArea);
                }
            }
            catch (System.Data.SqlClient.SqlException ex)
            {
                //枚举数据约束异常并转换为业务异常
                if (ex.Message.IndexOf("Index_U_Import_SurveyAreaCode", StringComparison.InvariantCultureIgnoreCase) != -1)
                {
                    throw new ETMS.AppContext.BusinessException(".Import_SurveyArea.CodeExists");
                }
                else if (ex.Message.IndexOf("Index_U_Import_SurveyAreaName", StringComparison.InvariantCultureIgnoreCase) != -1)
                {
                    throw new ETMS.AppContext.BusinessException(".Import_SurveyArea.NameExists");
                }
                //如果仍未处理，则抛出
                throw ex;
            }
        }


        public DataSet GetPollImportStudentList(int taskID)
        {
            return DAL.GetPollImportStudentList(taskID);
        }
        ///// <summary>
        ///// 删除
        ///// </summary>
        //protected void doRemove()
        //{
        //    try
        //    {
        //         DAL.Remove();
        //         //记录删除日志（根据ID删除）
        //         BizLogHelper.Operate(,"删除");
        //    }
        //   catch (System.Data.SqlClient.SqlException ex)
        //    {
        //        //枚举数据约束异常并转换为业务异常，数据已经使用
        //        if (ex.Message.IndexOf("FK_",StringComparison.InvariantCultureIgnoreCase) != -1)
        //        {
        //            throw new ETMS.AppContext.BusinessException(".Import_SurveyArea.DataUsed");
        //        } 
        //        //如果仍未处理，则抛出
        //        throw ex;
        //    }  
        //}  

        public bool CheckOutImportData(int queryID, int queryAreaID, string excelName, Import_Task importTask, string excelPath, int orgID, string creater, int createrUserID, string orgType, out int errorCount)
        {
            Import_TaskLogic TaskLogic = new Import_TaskLogic();
            int errCount = 0;
            errorCount = 0;
            try
            {
                int succssCount = 0;
                ExcelDataAccess EDA = new ExcelDataAccess();
                List<string> sheets = EDA.getSheetName(excelPath);

                if (sheets.Count == 0)
                {
                    importTask.Status = 1;
                    importTask.Remark = "excel文件不符合！";
                    TaskLogic.Save(importTask);
                    return false;
                }
                string sheetName = sheets[0];
                using (OleDbDataReader reader = EDA.ReadExcelData(excelPath, sheetName))
                {
                    var dt = reader.GetSchemaTable();
                    if (!(dt.Select(" ColumnName='姓名'").Length > 0) && (dt.Select(" ColumnName='组织机构'").Length > 0) && (dt.Select(" ColumnName='用户名'").Length > 0))
                    {
                        importTask.Status = 1;
                        importTask.Remark = "excel文件不合法，文件必须包括如下字段：学员账号，学员姓名";
                        TaskLogic.Save(importTask);
                        return false;
                    }
                }


                DataTable drs = EDA.ImportDataTable(excelPath, sheetName);
                foreach (DataRow p in drs.Rows)
                {
                    Import_SurveyArea import_SurveyArea = new Import_SurveyArea()
                    {
                        TaskID = importTask.TaskID,
                        QueryAreaID = queryAreaID,
                        QueryID = queryID,
                        OrganizationID = orgID,
                        OrgType = orgType,
                        RealName = p["姓名"].ToString(),
                        DisplayPath = p["组织机构"].ToString(),
                        LoginName = p["用户名"].ToString(),
                        WorkNo = p["工号"].ToString(),
                        DepartmentName = p["部门"].ToString(),
                        PostName = p["岗位"].ToString(),
                        RankName = p["职级"].ToString(),
                        Email = p["邮箱"].ToString()
                    };
                    if (string.IsNullOrEmpty(import_SurveyArea.DetailID.ToString()))
                    {
                        import_SurveyArea.DetailID = 0;
                    }
                    import_SurveyArea.DetailID = 0;
                    this.Save(import_SurveyArea);
                }
                errorCount = DAL.DoValid(importTask.TaskID);

                succssCount = DAL.ImportStudentSurveyArea(queryAreaID, importTask.TaskID, creater, out errCount);

                if (errorCount > 0)
                {
                    importTask.Status = 2;
                    importTask.Remark = "共" + drs.Rows.Count + "条数据，其中" + errorCount.ToString() + "条数据校验出错，" + succssCount + "条数据导入成功！";
                    //更新
                    TaskLogic.Save(importTask);
                }
                else
                {
                    importTask.Status = 3;//成功
                    importTask.Remark = "共" + succssCount.ToString() + "数据导入成功！";
                }
                return true;
            }

            catch (Exception ex)
            {
                importTask.Status = 1;//导入失败
                importTask.Remark = ex.Message;
                return false;
            }
            finally
            {
                //更新任务状态
                TaskLogic.Save(importTask);
            }

        }
    }
}


