//==================================================================================================
//Version 1.0, auto-generated.
//Generated By huangzhongfu.
//Date: 2012-3-30 8:36:30.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1), a product of ZhouYonghua(Zhou_Yonghua@163.com).
//==================================================================================================

using System;
using System.Collections.Generic;
using System.Transactions;
using System.Data;
using ETMS.Utility.Logging;
using ETMS.Components.Basic.API.Entity.TrainingItem;
using ETMS.Components.Basic.Implement.DAL.TrainingItem;
namespace ETMS.Components.Basic.Implement.BLL.TrainingItem
{
    /// <summary>
    /// 培训项目表业务逻辑
    /// </summary>
    public partial class Tr_ItemLogic
	{
		private static readonly Tr_ItemDataAccess DAL = new Tr_ItemDataAccess();
		
		/// <summary>
		/// 增加
		/// </summary>
		public void Add(Tr_Item tr_Item)
		{
			DAL.Add(tr_Item);
            BizLogHelper.AddOperate(tr_Item);
		}

		/// <summary>
		/// 删除
		/// </summary>
		public void Remove(Guid trainingItemID)
		{
			DAL.Remove(trainingItemID);
		}
		
		/// <summary>
		/// 删除
		/// </summary>
		public void Remove(Tr_Item tr_Item)
		{
			Remove(tr_Item.TrainingItemID);
            BizLogHelper.DeleteOperate(tr_Item);
		}
		
		/// <summary>
		/// 批量删除
		/// </summary>
		public void Remove(List<Tr_Item> tr_Items)
		{
			using (TransactionScope ts = new TransactionScope())
			{
				foreach (Tr_Item tr_Item in tr_Items)
				{
					Remove(tr_Item);
				}
				
				ts.Complete();
			}
		}
    
		/// <summary>
		/// 保存
		/// </summary>
		public void Save(Tr_Item tr_Item)
		{
            //修改前信息
            Tr_Item originalEntity=GetById(tr_Item.TrainingItemID);
			DAL.Save(tr_Item);
            BizLogHelper.UpdateOperate(originalEntity,tr_Item);
		}
    
		/// <summary>
		/// 根据标识获取对象
		/// </summary>
		public Tr_Item GetById(Guid trainingItemID)
		{
            Tr_Item tr_Item = null;
            if (trainingItemID != Guid.Empty) {
                tr_Item = DAL.GetById(trainingItemID);
                if (tr_Item == null)
                {
                    throw new ETMS.AppContext.BusinessException("TraningImplement.Tr_Item.NotFoundException", new object[] { trainingItemID });
                }
            }
			return tr_Item;
		}		
		 
		/// <summary>
        	/// 查询分页数据
        	/// </summary>
        	/// <param name="pageIndex">页号</param>
        	/// <param name="pageSize">页面大小</param>
        	/// <param name="sortExpression">排序条件</param>
        	/// <param name="criteria">筛选条件</param>
        	/// <param name="totalRecords">out 记录总数</param>
        	/// <returns>返回查询结果</returns>
		public DataTable GetPagedList(int pageIndex, int pageSize, string sortExpression, string criteria,out int totalRecords)
		{				
			return DAL.GetPagedList(pageIndex, pageSize, sortExpression, criteria, out totalRecords);
		}
		
	}
	
	
}

