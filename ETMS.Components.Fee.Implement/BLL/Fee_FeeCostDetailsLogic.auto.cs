//==================================================================================================
//Version 1.0, auto-generated.
//Generated By running1218
//Date: 2012-4-25 16:15:18.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1)
//==================================================================================================

using System;
using System.Collections.Generic;
using System.Data;
using ETMS.Utility.Logging;
using ETMS.Components.Fee.API.Entity;
using ETMS.Components.Fee.Implement.DAL;
namespace ETMS.Components.Fee.Implement.BLL
{
    /// <summary>
    /// 培训项目费用流水表业务逻辑
    /// </summary>
    public partial class Fee_FeeCostDetailsLogic
	{
		private static readonly Fee_FeeCostDetailsDataAccess DAL = new Fee_FeeCostDetailsDataAccess();
		
		/// <summary>
		/// 增加
		/// </summary>
		public void Add(Fee_FeeCostDetails fee_FeeCostDetails)
		{
			DAL.Add(fee_FeeCostDetails);
            BizLogHelper.AddOperate(fee_FeeCostDetails);
		}


		/// <summary>
		/// 保存
		/// </summary>
		public void Update(Fee_FeeCostDetails fee_FeeCostDetails)
		{
            //修改前信息
            Fee_FeeCostDetails originalEntity=GetById(fee_FeeCostDetails.FeeCostDetailID);
			DAL.Save(fee_FeeCostDetails);
            BizLogHelper.UpdateOperate(originalEntity,fee_FeeCostDetails);
		}

		/// <summary>
		/// 删除
		/// </summary>
		public void Remove(Guid feeCostDetailID)
		{
            doRemove(feeCostDetailID);
		} 

		/// <summary>
		/// 批量删除(主键ID数组）
		/// </summary>
		public void Remove(Guid[] feeCostDetailIDs)
		{
				foreach (Guid id in feeCostDetailIDs  )
				{
					Remove(id);
				}
		} 
    
    
		/// <summary>
		/// 根据标识获取对象
		/// </summary>
		public Fee_FeeCostDetails GetById(Guid feeCostDetailID)
		{
			Fee_FeeCostDetails fee_FeeCostDetails = DAL.GetById(feeCostDetailID);
			if (fee_FeeCostDetails == null)
			{
				throw new ETMS.AppContext.BusinessException("CourseFeeSetting.Fee_FeeCostDetails.NotFoundException",new object[]{feeCostDetailID});
			}
			
			return fee_FeeCostDetails;
		}		
		 
		/// <summary>
        /// 查询数据列表分页数据
        /// </summary>
        /// <param name="pageIndex">页号</param>
        /// <param name="pageSize">页面大小</param>
        /// <param name="sortExpression">排序条件</param>
        /// <param name="criteria">筛选条件</param>
        /// <param name="totalRecords">out 记录总数</param>
        /// <returns>返回查询结果</returns>
		public DataTable GetPagedList(int pageIndex, int pageSize, string sortExpression, string criteria,out int totalRecords)
		{				
			return DAL.GetPagedList(pageIndex, pageSize, sortExpression, criteria, out totalRecords);
		}
				
        /// <summary>
        /// 查询实体分页数据
        /// </summary>
        /// <param name="pageIndex">页号</param>
        /// <param name="pageSize">页面大小</param>
        /// <param name="sortExpression">排序条件</param>
        /// <param name="criteria">筛选条件</param>
        /// <param name="totalRecords">out 记录总数</param>
        /// <returns>返回查询结果</returns>
		public IList<Fee_FeeCostDetails> GetEntityList(int pageIndex, int pageSize, string sortExpression, string criteria,out int totalRecords)
		{				
			return DAL.GetEntityList(pageIndex, pageSize, sortExpression, criteria, out totalRecords);
		}
		
	}
	
	
}

