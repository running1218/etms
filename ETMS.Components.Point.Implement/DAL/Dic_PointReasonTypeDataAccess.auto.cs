//==================================================================================================
//Version 1.0, auto-generated.
//Generated By huangzhf.
//Date: 2012-5-7 22:43:22.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1)
//==================================================================================================

using System;
using System.Collections.Generic;
using System.Data;

using System.Data.SqlClient;
using ETMS.Utility.Data;

using ETMS.Components.Point.API.Entity;

namespace ETMS.Components.Point.Implement.DAL
{
    /// <summary>
    /// 积分原因分类（字典表）数据访问
    /// </summary>
    public partial class Dic_PointReasonTypeDataAccess
	{
		/// <summary>
		/// 增加
		/// </summary>
		public void Add(Dic_PointReasonType dic_PointReasonType)
		{
			string commandName = "dbo.Pr_Dic_PointReasonType_Insert";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSWrite, commandName);
			if (parms == null)
			{
				parms = new SqlParameter[] {
					new SqlParameter("@PointReasonTypeCode", SqlDbType.NVarChar, 100),
					new SqlParameter("@PointReasonTypeName", SqlDbType.NVarChar, 200),
					new SqlParameter("@OrgID", SqlDbType.Int),
					new SqlParameter("@OrderNum", SqlDbType.Int),
					new SqlParameter("@IsUse", SqlDbType.Int)
					};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSWrite, commandName, parms);
			}
			
			if (dic_PointReasonType.PointReasonTypeCode!= null){ parms[0].Value = dic_PointReasonType.PointReasonTypeCode; } else { parms[0].Value = DBNull.Value; }
			if (dic_PointReasonType.PointReasonTypeName!= null){ parms[1].Value = dic_PointReasonType.PointReasonTypeName; } else { parms[1].Value = DBNull.Value; }
			parms[2].Value = dic_PointReasonType.OrgID;
			parms[3].Value = dic_PointReasonType.OrderNum;
			parms[4].Value = dic_PointReasonType.IsUse;
			#endregion
			SqlHelper.ExecuteNonQuery(ConnectionString.ETMSWrite, CommandType.StoredProcedure, commandName, parms);
			
		}
		
		/// <summary>
		/// 删除
		/// </summary>
		public void Remove(Int32 pointReasonTypeID)
		{
			string commandName = "dbo.Pr_Dic_PointReasonType_Delete";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSWrite, commandName);
			if (parms == null)
			{
				parms = new SqlParameter[] {
					new SqlParameter("@PointReasonTypeID", SqlDbType.Int)
				};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSWrite, commandName, parms);
			}
			
			parms[0].Value = pointReasonTypeID;
			
			#endregion
			SqlHelper.ExecuteNonQuery(ConnectionString.ETMSWrite, CommandType.StoredProcedure, commandName, parms);
		}
		
		/// <summary>
		/// 保存
		/// </summary>
		public void Save(Dic_PointReasonType dic_PointReasonType)
		{
			string commandName = "dbo.Pr_Dic_PointReasonType_Update";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSWrite, commandName);
			if (parms == null)
			{
				parms = new SqlParameter[] {
					new SqlParameter("@PointReasonTypeID", SqlDbType.Int),
					new SqlParameter("@PointReasonTypeCode", SqlDbType.NVarChar, 100),
					new SqlParameter("@PointReasonTypeName", SqlDbType.NVarChar, 200),
					new SqlParameter("@OrgID", SqlDbType.Int),
					new SqlParameter("@OrderNum", SqlDbType.Int),
					new SqlParameter("@IsUse", SqlDbType.Int)
				};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSWrite, commandName, parms);
			}
			
			parms[0].Value = dic_PointReasonType.PointReasonTypeID;
			if (dic_PointReasonType.PointReasonTypeCode!= null){ parms[1].Value = dic_PointReasonType.PointReasonTypeCode; } else { parms[1].Value = DBNull.Value; }
			if (dic_PointReasonType.PointReasonTypeName!= null){ parms[2].Value = dic_PointReasonType.PointReasonTypeName; } else { parms[2].Value = DBNull.Value; }
			parms[3].Value = dic_PointReasonType.OrgID;
			parms[4].Value = dic_PointReasonType.OrderNum;
			parms[5].Value = dic_PointReasonType.IsUse;
			#endregion
			SqlHelper.ExecuteNonQuery(ConnectionString.ETMSWrite, CommandType.StoredProcedure, commandName, parms);
		}
		
		/// <summary>
		/// 根据标识获取对象
		/// </summary>
		public Dic_PointReasonType GetById(Int32 pointReasonTypeID)
		{
			Dic_PointReasonType dic_PointReasonType = null;
			
			string commandName = "dbo.Pr_Dic_PointReasonType_GetByPK";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
			if (parms == null)
			{
				parms = new SqlParameter[] {
					new SqlParameter("@PointReasonTypeID", SqlDbType.Int)
				};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
			}
			
			parms[0].Value = pointReasonTypeID;
			
			#endregion
			using (SqlDataReader dataReader = SqlHelper.ExecuteReader(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms))
			{
				if (dataReader.Read())
				{
					dic_PointReasonType = PopulateDic_PointReasonTypeFromDataReader(dataReader);
				}
			}
			
			return dic_PointReasonType;
		}				
		
		/// <summary>
		/// 根据参数获取对象列表（分页，可排序）
		/// </summary>
		public DataTable GetPagedList(int pageIndex, int pageSize, string sortExpression, string criteria, out int totalRecords)
		{			
			string commandName = "dbo.Pr_Dic_PointReasonType_GetPagedList";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
			if (parms == null)
			{
				parms = new SqlParameter[] {
					new SqlParameter("@PageIndex", SqlDbType.Int),
					new SqlParameter("@PageSize", SqlDbType.Int),
					new SqlParameter("@SortExpression", SqlDbType.VarChar),
					new SqlParameter("@Criteria", SqlDbType.VarChar),
					new SqlParameter("@ReturnValue", SqlDbType.Int, 4, ParameterDirection.ReturnValue, false, 0, 0, String.Empty, DataRowVersion.Default, null)
				};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
			}
			
			parms[0].Value = pageIndex;
			parms[1].Value = pageSize;
			parms[2].Value = sortExpression;
			parms[3].Value = criteria;
			#endregion
			DataTable dt=SqlHelper.ExecuteDataset(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms).Tables[0];
			totalRecords = (int)parms[4].Value;
			return dt;
		}
		
	    /// <summary>
		/// 根据参数获取对象列表（分页，可排序）
		/// </summary>
		public IList<Dic_PointReasonType> GetEntityList(int pageIndex, int pageSize, string sortExpression, string criteria, out int totalRecords)
		{			
            IList<Dic_PointReasonType> list=new List<Dic_PointReasonType>();
			string commandName = "dbo.Pr_Dic_PointReasonType_GetPagedList";
			#region Parameters
			SqlParameter[] parms = SqlHelperParameterCache.GetCachedParameterSet(ConnectionString.ETMSRead, commandName);
			if (parms == null)
			{
				parms = new SqlParameter[] {
					new SqlParameter("@PageIndex", SqlDbType.Int),
					new SqlParameter("@PageSize", SqlDbType.Int),
					new SqlParameter("@SortExpression", SqlDbType.VarChar),
					new SqlParameter("@Criteria", SqlDbType.VarChar),
					new SqlParameter("@ReturnValue", SqlDbType.Int, 4, ParameterDirection.ReturnValue, false, 0, 0, String.Empty, DataRowVersion.Default, null)
				};
				SqlHelperParameterCache.CacheParameterSet(ConnectionString.ETMSRead, commandName, parms);
			}
			
			parms[0].Value = pageIndex;
			parms[1].Value = pageSize;
			parms[2].Value = sortExpression;
			parms[3].Value = criteria;
			#endregion
            using (SqlDataReader dataReader = SqlHelper.ExecuteReader(ConnectionString.ETMSRead, CommandType.StoredProcedure, commandName, parms))
			{
				while (dataReader.Read())
				{
					list.Add(PopulateDic_PointReasonTypeFromDataReader(dataReader));
				}
			}			
			totalRecords = (int)parms[4].Value;
			return list;
		}
		
		/// <summary>
		/// 从DataReader中读取数据到业务对象
		/// </summary>
		private Dic_PointReasonType PopulateDic_PointReasonTypeFromDataReader(SqlDataReader reader)
		{
			Dic_PointReasonType dic_PointReasonType = new Dic_PointReasonType();
			
			int pointReasonTypeIDIndex = reader.GetOrdinal("PointReasonTypeID"); 
			if(!reader.IsDBNull(pointReasonTypeIDIndex))
			{
				dic_PointReasonType.PointReasonTypeID= reader.GetInt32(pointReasonTypeIDIndex);
			}
			
			int pointReasonTypeCodeIndex = reader.GetOrdinal("PointReasonTypeCode"); 
			if(!reader.IsDBNull(pointReasonTypeCodeIndex))
			{
				dic_PointReasonType.PointReasonTypeCode= reader.GetString(pointReasonTypeCodeIndex);
			}
			
			int pointReasonTypeNameIndex = reader.GetOrdinal("PointReasonTypeName"); 
			if(!reader.IsDBNull(pointReasonTypeNameIndex))
			{
				dic_PointReasonType.PointReasonTypeName= reader.GetString(pointReasonTypeNameIndex);
			}
			
			int orgIDIndex = reader.GetOrdinal("OrgID"); 
			if(!reader.IsDBNull(orgIDIndex))
			{
				dic_PointReasonType.OrgID= reader.GetInt32(orgIDIndex);
			}
			
			int orderNumIndex = reader.GetOrdinal("OrderNum"); 
			if(!reader.IsDBNull(orderNumIndex))
			{
				dic_PointReasonType.OrderNum= reader.GetInt32(orderNumIndex);
			}
			
			int isUseIndex = reader.GetOrdinal("IsUse"); 
			if(!reader.IsDBNull(isUseIndex))
			{
				dic_PointReasonType.IsUse= reader.GetInt32(isUseIndex);
			}
			
			return dic_PointReasonType; 
		}
	}
}
