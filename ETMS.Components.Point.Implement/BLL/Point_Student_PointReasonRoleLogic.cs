//==================================================================================================
//Version 1.0, auto-generated.
//Generated By huangzhf.
//Date: 2012-5-6 14:53:50.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1), a product of ZhouYonghua(Zhou_Yonghua@163.com).
//==================================================================================================

using System;

using ETMS.AppContext;
using ETMS.Utility;
using ETMS.Utility.Logging;
using ETMS.Components.Point.API.Entity;

namespace ETMS.Components.Point.Implement.BLL
{
    /// <summary>
    /// 学员积分原因规则表业务逻辑
    /// </summary>
    public partial class Point_Student_PointReasonRoleLogic
	{

        /// <summary>
        /// 学员积分原因规则保存
        /// </summary>
        /// <param name="entity">学员积分原因规则实体</param>
        /// <param name="action">操作方法：添加或者修改</param>
        public void Save(Point_Student_PointReasonRole entity, OperationAction action)
        {
            try
            {
                if (action == OperationAction.Add)
                {
                    if (entity.StudentPointReasonRoleID.IsEmpty())
                    {
                        //设置主键ID（仅类型为GUID有效，Int型则由数据库自增产生）
                        entity.StudentPointReasonRoleID = entity.StudentPointReasonRoleID.NewID(); ;
                    }
                    Add(entity);
                }
                else if (action == OperationAction.Edit)
                    Update(entity);
            }
            catch (System.Data.SqlClient.SqlException ex)
            {
                string errorMsg = ex.Message;

                if (errorMsg.IndexOf("Index_UT_Point_Student_PointReasonRole".ToLower(), StringComparison.InvariantCultureIgnoreCase) != -1)
                {
                    throw new ETMS.AppContext.BusinessException("该类型下已经存在相同的积分原因，不能保存，请修改！");
                }

                throw ex;
            }
        }


        /// <summary>
		/// 删除
		/// </summary>
		public void doRemove(Guid studentPointReasonRoleID)
		{
            try
            {
			     DAL.Remove(studentPointReasonRoleID);
                 //记录删除日志（根据ID删除）
                 BizLogHelper.Operate(studentPointReasonRoleID,"删除");
            }
           catch (System.Data.SqlClient.SqlException ex)
            {
                //枚举数据约束异常并转换为业务异常，数据已经使用
                if (ex.Message.IndexOf("FK_",StringComparison.InvariantCultureIgnoreCase) != -1)
                {
				    throw new ETMS.AppContext.BusinessException("已经使用不能删除！");
                } 
                //如果仍未处理，则抛出
                throw ex;
            }  
		}  
	}
	
	
}

