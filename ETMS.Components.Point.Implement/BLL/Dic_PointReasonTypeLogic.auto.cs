//==================================================================================================
//Version 1.0, auto-generated.
//Generated By huangzhf.
//Date: 2012-5-7 22:43:22.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1)
//==================================================================================================

using System;
using System.Collections.Generic;
using System.Data;
using ETMS.Utility.Logging;
using ETMS.Components.Point.API.Entity;
using ETMS.Components.Point.Implement.DAL;
namespace ETMS.Components.Point.Implement.BLL
{
    /// <summary>
    /// 积分原因分类（字典表）业务逻辑
    /// </summary>
    public partial class Dic_PointReasonTypeLogic
	{
		private static readonly Dic_PointReasonTypeDataAccess DAL = new Dic_PointReasonTypeDataAccess();
		
		/// <summary>
		/// 增加
		/// </summary>
		public void Add(Dic_PointReasonType dic_PointReasonType)
		{
			DAL.Add(dic_PointReasonType);
            BizLogHelper.AddOperate(dic_PointReasonType);
		}


		/// <summary>
		/// 保存
		/// </summary>
		public void Update(Dic_PointReasonType dic_PointReasonType)
		{
            //修改前信息
            Dic_PointReasonType originalEntity=GetById(dic_PointReasonType.PointReasonTypeID);
			DAL.Save(dic_PointReasonType);
            BizLogHelper.UpdateOperate(originalEntity,dic_PointReasonType);
		}

		/// <summary>
		/// 删除
		/// </summary>
		public void Remove(Int32 pointReasonTypeID)
		{
            doRemove(pointReasonTypeID);
		} 

		/// <summary>
		/// 批量删除(主键ID数组）
		/// </summary>
		public void Remove(Int32[] pointReasonTypeIDs)
		{
				foreach (Int32 id in pointReasonTypeIDs  )
				{
					Remove(id);
				}
		} 
    
    
		/// <summary>
		/// 根据标识获取对象
		/// </summary>
		public Dic_PointReasonType GetById(Int32 pointReasonTypeID)
		{
			Dic_PointReasonType dic_PointReasonType = DAL.GetById(pointReasonTypeID);
			if (dic_PointReasonType == null)
			{
				throw new ETMS.AppContext.BusinessException(".Dic_PointReasonType.NotFoundException",new object[]{pointReasonTypeID});
			}
			
			return dic_PointReasonType;
		}		
		 
		/// <summary>
        /// 查询数据列表分页数据
        /// </summary>
        /// <param name="pageIndex">页号</param>
        /// <param name="pageSize">页面大小</param>
        /// <param name="sortExpression">排序条件</param>
        /// <param name="criteria">筛选条件</param>
        /// <param name="totalRecords">out 记录总数</param>
        /// <returns>返回查询结果</returns>
		public DataTable GetPagedList(int pageIndex, int pageSize, string sortExpression, string criteria,out int totalRecords)
		{				
			return DAL.GetPagedList(pageIndex, pageSize, sortExpression, criteria, out totalRecords);
		}
				
        /// <summary>
        /// 查询实体分页数据
        /// </summary>
        /// <param name="pageIndex">页号</param>
        /// <param name="pageSize">页面大小</param>
        /// <param name="sortExpression">排序条件</param>
        /// <param name="criteria">筛选条件</param>
        /// <param name="totalRecords">out 记录总数</param>
        /// <returns>返回查询结果</returns>
		public IList<Dic_PointReasonType> GetEntityList(int pageIndex, int pageSize, string sortExpression, string criteria,out int totalRecords)
		{				
			return DAL.GetEntityList(pageIndex, pageSize, sortExpression, criteria, out totalRecords);
		}
		
	}
	
	
}

