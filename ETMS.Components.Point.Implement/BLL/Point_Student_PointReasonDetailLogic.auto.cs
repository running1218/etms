//==================================================================================================
//Version 1.0, auto-generated.
//Generated By huangzhf.
//Date: 2012-5-6 14:53:50.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1)
//==================================================================================================

using System;
using System.Collections.Generic;
using System.Data;
using ETMS.Utility.Logging;
using ETMS.Components.Point.API.Entity;
using ETMS.Components.Point.Implement.DAL;

namespace ETMS.Components.Point.Implement.BLL
{
    /// <summary>
    /// 学员学习过程获得积分表业务逻辑
    /// </summary>
    public partial class Point_Student_PointReasonDetailLogic
	{
		private static readonly Point_Student_PointReasonDetailDataAccess DAL = new Point_Student_PointReasonDetailDataAccess();
		
		/// <summary>
		/// 增加
		/// </summary>
		public void Add(Point_Student_PointReasonDetail point_Student_PointReasonDetail)
		{
			DAL.Add(point_Student_PointReasonDetail);
            BizLogHelper.AddOperate(point_Student_PointReasonDetail);
		}


		/// <summary>
		/// 保存
		/// </summary>
		public void Update(Point_Student_PointReasonDetail point_Student_PointReasonDetail)
		{
            //修改前信息
            Point_Student_PointReasonDetail originalEntity=GetById(point_Student_PointReasonDetail.StudentPointReasonDetailID);
			DAL.Save(point_Student_PointReasonDetail);
            BizLogHelper.UpdateOperate(originalEntity,point_Student_PointReasonDetail);
		}

		/// <summary>
		/// 删除
		/// </summary>
		public void Remove(Guid studentPointReasonDetailID)
		{
            doRemove(studentPointReasonDetailID);
		} 

		/// <summary>
		/// 批量删除(主键ID数组）
		/// </summary>
		public void Remove(Guid[] studentPointReasonDetailIDs)
		{
				foreach (Guid id in studentPointReasonDetailIDs  )
				{
					Remove(id);
				}
		} 
    
    
		/// <summary>
		/// 根据标识获取对象
		/// </summary>
		public Point_Student_PointReasonDetail GetById(Guid studentPointReasonDetailID)
		{
			Point_Student_PointReasonDetail point_Student_PointReasonDetail = DAL.GetById(studentPointReasonDetailID);
			if (point_Student_PointReasonDetail == null)
			{
				throw new ETMS.AppContext.BusinessException(".Point_Student_PointReasonDetail.NotFoundException",new object[]{studentPointReasonDetailID});
			}
			
			return point_Student_PointReasonDetail;
		}		
		 
		/// <summary>
        /// 查询数据列表分页数据
        /// </summary>
        /// <param name="pageIndex">页号</param>
        /// <param name="pageSize">页面大小</param>
        /// <param name="sortExpression">排序条件</param>
        /// <param name="criteria">筛选条件</param>
        /// <param name="totalRecords">out 记录总数</param>
        /// <returns>返回查询结果</returns>
		public DataTable GetPagedList(int pageIndex, int pageSize, string sortExpression, string criteria,out int totalRecords)
		{				
			return DAL.GetPagedList(pageIndex, pageSize, sortExpression, criteria, out totalRecords);
		}
				
        /// <summary>
        /// 查询实体分页数据
        /// </summary>
        /// <param name="pageIndex">页号</param>
        /// <param name="pageSize">页面大小</param>
        /// <param name="sortExpression">排序条件</param>
        /// <param name="criteria">筛选条件</param>
        /// <param name="totalRecords">out 记录总数</param>
        /// <returns>返回查询结果</returns>
		public IList<Point_Student_PointReasonDetail> GetEntityList(int pageIndex, int pageSize, string sortExpression, string criteria,out int totalRecords)
		{				
			return DAL.GetEntityList(pageIndex, pageSize, sortExpression, criteria, out totalRecords);
		}
		
	}
	
	
}

