//==================================================================================================
//Version 1.0, auto-generated.
//Generated By huangzf.
//Date: 2013-1-23 11:37:38.
//==================================================================================================
//==================================================================================================
//This file is generated by CodeGenerator(Ver 2.1)
//==================================================================================================

using System;
using System.Collections.Generic;
using System.Data;

using ETMS.AppContext;
using ETMS.Utility.Logging;

using ETMS.Components.QS.API.Entity;


namespace ETMS.Components.QS.Implement.BLL
{
    /// <summary>
    /// 问卷调查题目表业务逻辑
    /// </summary>
    public partial class QS_QueryTitleLogic
    {
        /// <summary>
        /// 问卷调查题目保存
        /// </summary>
        /// <param name="entity">问卷调查题目实体</param>
        /// <param name="action">操作方法：添加或者修改</param>
        public void Save(QS_QueryTitle entity, OperationAction action)
        {
            try
            {
                if (action == OperationAction.Add)
                {
                    //取当前添加的问卷调查的最大题目序号
                    int maxTitleNo = GetMaxTitleNo(entity.QueryID);
                    //自动设置序号为下一个
                    entity.TitleNo = maxTitleNo + 1;
                    Add(entity);
                }
                else if (action == OperationAction.Edit)
                {
                    Update(entity);
                }
            }
            catch (System.Data.SqlClient.SqlException ex)
            {

                throw ex;
            }
        }


        /// <summary>
        /// 删除
        /// </summary>
        protected void doRemove(Guid titleID)
        {
            try
            {
                DAL.Remove(titleID);
                //记录删除日志（根据ID删除）
                BizLogHelper.Operate(titleID, "删除");
            }
            catch (System.Data.SqlClient.SqlException ex)
            {
                string errorMsg = ex.Message.ToUpper();
                //枚举数据约束异常并转换为业务异常，数据已经使用
                if (errorMsg.IndexOf("FK_QS_QUERY_REF_1972_QS_QUERY", StringComparison.InvariantCultureIgnoreCase) != -1)
                {
                    throw new ETMS.AppContext.BusinessException("该问卷调查题目已有“选择题选项”，不能删除！");
                }
                else if (errorMsg.IndexOf("FK_QS_QUERY_REF_1971_QS_QUERY", StringComparison.InvariantCultureIgnoreCase) != -1)
                {
                    throw new ETMS.AppContext.BusinessException("该问卷调查题目已有“调查结果”，不能删除！");
                }
                //如果仍未处理，则抛出
                throw ex;
            }
        }


        /// <summary>
        /// 获取某个调查问卷的当前最大题目序号
        /// </summary>
        /// <param name="queryID">调查问卷ID</param>
        /// <returns></returns>
        public Int32 GetMaxTitleNo(Guid queryID)
        {
            return DAL.GetMaxTitleNo(queryID);
        }



        /// <summary>
        /// 获取问卷调查的所有标题详细信息
        /// </summary>
        /// <param name="pageIndex">起始页</param>
        /// <param name="pageSize">每页的记录数</param>
        /// <param name="sortExpression">排序方式</param>
        /// <param name="criteria">与 AND 开头的查询条件</param>
        /// <param name="totalRecords">返回总的满足条件的记录数</param>
        public DataTable GetQueryTitleAllInfo(int pageIndex, int pageSize, string sortExpression, string criteria, out int totalRecords)
        {
            return DAL.GetQueryTitleAllInfo(pageIndex, pageSize, sortExpression, criteria, out  totalRecords);
        }



        /// <summary>
        /// 获取某个问卷调查的所有标题详细信息(分页)
        /// </summary>
        /// <param name="queryID">调查问卷ID</param>
        /// <param name="pageIndex">起始页</param>
        /// <param name="pageSize">每页的记录数</param>
        /// <param name="sortExpression">排序方式</param>
        /// <param name="criteria">与 AND 开头的查询条件</param>
        /// <param name="totalRecords">返回总的满足条件的记录数</param>
        public DataTable GetQueryTitleAllInfoByQueryID(Guid queryID, int pageIndex, int pageSize, string sortExpression, string criteria, out int totalRecords)
        {
            criteria += string.Format(" AND qt.QueryID='{0}'", queryID);
            return GetQueryTitleAllInfo(pageIndex, pageSize, sortExpression, criteria, out  totalRecords);
        }


        /// <summary>
        /// 获取某个问卷调查的所有标题详细信息,按标题的顺序排序(不分页)
        /// </summary>
        /// <param name="queryID">调查问卷ID</param>
        /// <param name="pageIndex">起始页</param>
        /// <param name="pageSize">每页的记录数</param>
        /// <param name="sortExpression">排序方式</param>
        /// <param name="criteria">与 AND 开头的查询条件</param>
        /// <param name="totalRecords">返回总的满足条件的记录数</param>
        public DataTable GetQueryTitleAllInfoByQueryID(Guid queryID)
        {
            int totalRecords = 0;
            string criteria = string.Format(" AND qt.QueryID='{0}'", queryID);
            string sortExpression = "qt.TitleNo";
            return GetQueryTitleAllInfo(1, 10000, sortExpression, criteria, out  totalRecords);
        }

        public void UpdateQSTitleSort(List<QS_QueryTitle> list)
        {
            foreach (QS_QueryTitle entity in list)
            {
                DAL.UpdateQSTitleSort(entity);
            }
        }

    }


}

